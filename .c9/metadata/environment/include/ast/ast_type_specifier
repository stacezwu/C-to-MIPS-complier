{"filter":false,"title":"ast_type_specifier","tooltip":"/include/ast/ast_type_specifier","undoManager":{"mark":19,"position":19,"stack":[[{"start":{"row":0,"column":0},"end":{"row":91,"column":0},"action":"insert","lines":["#ifndef ast_primary_expression_hpp","#define ast_primary_expression_hpp","","#include <string>","#include <iostream>","","class Variable","    : public Expression","{","private:","    std::string* id;","public:","    Variable(std::string* _id) : id(_id) {}","    virtual ~Variable() {","        delete id;","    }","","    const std::string getId() const","    { return *id; }","","    virtual void printPy(std::ostream &dst, int indentLevel) const override","    {","        dst<<*id;","    }","","    // virtual double evaluate(","    //     const std::map<std::string,double> &bindings","    // ) const override","    // {","    //     // TODO-B : Run bin/eval_expr with a variable binding to make sure you understand how this works.","    //     // If the binding does not exist, this will throw an error","    //     return bindings.at(id);","    // }","};","","class Number","    : public Expression","{","private:","    double value;","public:","    Number(double _value) : value(_value) {}","    virtual ~Number() {}","","    double getValue() const","    { return value; }","","    virtual void printPy(std::ostream &dst, int indentLevel) const override","    {","        dst<<value;","    }","","    // virtual double evaluate(","    //     const std::map<std::string,double> &bindings","    // ) const override","    // {","    //     // TODO-A : Run bin/eval_expr with a numeric expression to make sure you understand how this works.","    //     return value;","    // }","};","","class StringLiteral","    : public Expression","{","private:","    std::string* value;","public:","    StringLiteral(std::string* _value) : value(_value) {}","    virtual ~StringLiteral() {","        delete value;","    }","","    std::string getValue() const","    { return *value; }","","    virtual void printPy(std::ostream &dst, int indentLevel) const override","    {","        dst<<*value;","    }","","    // virtual double evaluate(","    //     const std::map<std::string,double> &bindings","    // ) const override","    // {","    //     // TODO: fix later","    //     return 0.4321;","    // }","};","","","#endif",""],"id":1}],[{"start":{"row":1,"column":12},"end":{"row":1,"column":30},"action":"remove","lines":["primary_expression"],"id":2},{"start":{"row":1,"column":12},"end":{"row":1,"column":13},"action":"insert","lines":["t"]},{"start":{"row":0,"column":12},"end":{"row":0,"column":30},"action":"remove","lines":["primary_expression"]},{"start":{"row":0,"column":12},"end":{"row":0,"column":13},"action":"insert","lines":["t"]},{"start":{"row":1,"column":13},"end":{"row":1,"column":14},"action":"insert","lines":["y"]},{"start":{"row":0,"column":13},"end":{"row":0,"column":14},"action":"insert","lines":["y"]},{"start":{"row":1,"column":14},"end":{"row":1,"column":15},"action":"insert","lines":["p"]},{"start":{"row":0,"column":14},"end":{"row":0,"column":15},"action":"insert","lines":["p"]},{"start":{"row":1,"column":15},"end":{"row":1,"column":16},"action":"insert","lines":["e"]},{"start":{"row":0,"column":15},"end":{"row":0,"column":16},"action":"insert","lines":["e"]},{"start":{"row":1,"column":16},"end":{"row":1,"column":17},"action":"insert","lines":["_"]},{"start":{"row":0,"column":16},"end":{"row":0,"column":17},"action":"insert","lines":["_"]},{"start":{"row":1,"column":17},"end":{"row":1,"column":18},"action":"insert","lines":["s"]},{"start":{"row":0,"column":17},"end":{"row":0,"column":18},"action":"insert","lines":["s"]},{"start":{"row":1,"column":18},"end":{"row":1,"column":19},"action":"insert","lines":["p"]},{"start":{"row":0,"column":18},"end":{"row":0,"column":19},"action":"insert","lines":["p"]},{"start":{"row":1,"column":19},"end":{"row":1,"column":20},"action":"insert","lines":["e"]},{"start":{"row":0,"column":19},"end":{"row":0,"column":20},"action":"insert","lines":["e"]},{"start":{"row":1,"column":20},"end":{"row":1,"column":21},"action":"insert","lines":["c"]},{"start":{"row":0,"column":20},"end":{"row":0,"column":21},"action":"insert","lines":["c"]},{"start":{"row":1,"column":21},"end":{"row":1,"column":22},"action":"insert","lines":["i"]},{"start":{"row":0,"column":21},"end":{"row":0,"column":22},"action":"insert","lines":["i"]},{"start":{"row":1,"column":22},"end":{"row":1,"column":23},"action":"insert","lines":["f"]},{"start":{"row":0,"column":22},"end":{"row":0,"column":23},"action":"insert","lines":["f"]},{"start":{"row":1,"column":23},"end":{"row":1,"column":24},"action":"insert","lines":["i"]},{"start":{"row":0,"column":23},"end":{"row":0,"column":24},"action":"insert","lines":["i"]},{"start":{"row":1,"column":24},"end":{"row":1,"column":25},"action":"insert","lines":["e"]},{"start":{"row":0,"column":24},"end":{"row":0,"column":25},"action":"insert","lines":["e"]},{"start":{"row":1,"column":25},"end":{"row":1,"column":26},"action":"insert","lines":["r"]},{"start":{"row":0,"column":25},"end":{"row":0,"column":26},"action":"insert","lines":["r"]}],[{"start":{"row":6,"column":6},"end":{"row":6,"column":14},"action":"remove","lines":["Variable"],"id":3},{"start":{"row":6,"column":6},"end":{"row":6,"column":7},"action":"insert","lines":["T"]},{"start":{"row":6,"column":7},"end":{"row":6,"column":8},"action":"insert","lines":["U"]}],[{"start":{"row":6,"column":7},"end":{"row":6,"column":8},"action":"remove","lines":["U"],"id":4}],[{"start":{"row":6,"column":7},"end":{"row":6,"column":8},"action":"insert","lines":["y"],"id":5},{"start":{"row":6,"column":8},"end":{"row":6,"column":9},"action":"insert","lines":["p"]},{"start":{"row":6,"column":9},"end":{"row":6,"column":10},"action":"insert","lines":["e"]},{"start":{"row":6,"column":10},"end":{"row":6,"column":11},"action":"insert","lines":["S"]},{"start":{"row":6,"column":11},"end":{"row":6,"column":12},"action":"insert","lines":["p"]}],[{"start":{"row":6,"column":6},"end":{"row":6,"column":12},"action":"remove","lines":["TypeSp"],"id":6},{"start":{"row":6,"column":6},"end":{"row":6,"column":19},"action":"insert","lines":["TypeSpecifier"]}],[{"start":{"row":7,"column":13},"end":{"row":7,"column":23},"action":"remove","lines":["Expression"],"id":7},{"start":{"row":7,"column":13},"end":{"row":7,"column":14},"action":"insert","lines":["A"]},{"start":{"row":7,"column":14},"end":{"row":7,"column":15},"action":"insert","lines":["S"]},{"start":{"row":7,"column":15},"end":{"row":7,"column":16},"action":"insert","lines":["T"]},{"start":{"row":7,"column":16},"end":{"row":7,"column":17},"action":"insert","lines":["N"]},{"start":{"row":7,"column":17},"end":{"row":7,"column":18},"action":"insert","lines":["o"]},{"start":{"row":7,"column":18},"end":{"row":7,"column":19},"action":"insert","lines":["d"]},{"start":{"row":7,"column":19},"end":{"row":7,"column":20},"action":"insert","lines":["e"]}],[{"start":{"row":12,"column":4},"end":{"row":12,"column":12},"action":"remove","lines":["Variable"],"id":8},{"start":{"row":12,"column":4},"end":{"row":12,"column":17},"action":"insert","lines":["TypeSpecifier"]}],[{"start":{"row":20,"column":75},"end":{"row":21,"column":4},"action":"remove","lines":["","    "],"id":9},{"start":{"row":20,"column":75},"end":{"row":20,"column":76},"action":"insert","lines":[" "]}],[{"start":{"row":23,"column":0},"end":{"row":31,"column":8},"action":"remove","lines":["","    // virtual double evaluate(","    //     const std::map<std::string,double> &bindings","    // ) const override","    // {","    //     // TODO-B : Run bin/eval_expr with a variable binding to make sure you understand how this works.","    //     // If the binding does not exist, this will throw an error","    //     return bindings.at(id);","    // }"],"id":10},{"start":{"row":22,"column":5},"end":{"row":23,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":24,"column":0},"end":{"row":81,"column":0},"action":"remove","lines":["","class Number","    : public Expression","{","private:","    double value;","public:","    Number(double _value) : value(_value) {}","    virtual ~Number() {}","","    double getValue() const","    { return value; }","","    virtual void printPy(std::ostream &dst, int indentLevel) const override","    {","        dst<<value;","    }","","    // virtual double evaluate(","    //     const std::map<std::string,double> &bindings","    // ) const override","    // {","    //     // TODO-A : Run bin/eval_expr with a numeric expression to make sure you understand how this works.","    //     return value;","    // }","};","","class StringLiteral","    : public Expression","{","private:","    std::string* value;","public:","    StringLiteral(std::string* _value) : value(_value) {}","    virtual ~StringLiteral() {","        delete value;","    }","","    std::string getValue() const","    { return *value; }","","    virtual void printPy(std::ostream &dst, int indentLevel) const override","    {","        dst<<*value;","    }","","    // virtual double evaluate(","    //     const std::map<std::string,double> &bindings","    // ) const override","    // {","    //     // TODO: fix later","    //     return 0.4321;","    // }","};","","","#endif",""],"id":11},{"start":{"row":23,"column":2},"end":{"row":24,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":10,"column":17},"end":{"row":10,"column":19},"action":"remove","lines":["id"],"id":12},{"start":{"row":10,"column":17},"end":{"row":10,"column":18},"action":"insert","lines":["t"]},{"start":{"row":10,"column":18},"end":{"row":10,"column":19},"action":"insert","lines":["y"]},{"start":{"row":10,"column":19},"end":{"row":10,"column":20},"action":"insert","lines":["p"]},{"start":{"row":10,"column":20},"end":{"row":10,"column":21},"action":"insert","lines":["e"]},{"start":{"row":10,"column":21},"end":{"row":10,"column":22},"action":"insert","lines":["N"]},{"start":{"row":10,"column":22},"end":{"row":10,"column":23},"action":"insert","lines":["a"]},{"start":{"row":10,"column":23},"end":{"row":10,"column":24},"action":"insert","lines":["m"]},{"start":{"row":10,"column":24},"end":{"row":10,"column":25},"action":"insert","lines":["e"]}],[{"start":{"row":12,"column":42},"end":{"row":12,"column":44},"action":"remove","lines":["id"],"id":13},{"start":{"row":12,"column":42},"end":{"row":12,"column":50},"action":"insert","lines":["typeName"]},{"start":{"row":12,"column":38},"end":{"row":12,"column":40},"action":"remove","lines":["id"]},{"start":{"row":12,"column":38},"end":{"row":12,"column":46},"action":"insert","lines":["typeName"]},{"start":{"row":12,"column":32},"end":{"row":12,"column":34},"action":"remove","lines":["id"]},{"start":{"row":12,"column":32},"end":{"row":12,"column":40},"action":"insert","lines":["typeName"]}],[{"start":{"row":14,"column":15},"end":{"row":14,"column":17},"action":"remove","lines":["id"],"id":14},{"start":{"row":14,"column":15},"end":{"row":14,"column":23},"action":"insert","lines":["typeName"]}],[{"start":{"row":13,"column":13},"end":{"row":13,"column":21},"action":"remove","lines":["Variable"],"id":15},{"start":{"row":13,"column":13},"end":{"row":13,"column":26},"action":"insert","lines":["TypeSpecifier"]}],[{"start":{"row":18,"column":14},"end":{"row":18,"column":16},"action":"remove","lines":["id"],"id":16},{"start":{"row":18,"column":14},"end":{"row":18,"column":22},"action":"insert","lines":["typeName"]}],[{"start":{"row":17,"column":25},"end":{"row":17,"column":27},"action":"remove","lines":["Id"],"id":17},{"start":{"row":17,"column":25},"end":{"row":17,"column":33},"action":"insert","lines":["typeName"]}],[{"start":{"row":17,"column":26},"end":{"row":17,"column":27},"action":"remove","lines":["y"],"id":18},{"start":{"row":17,"column":25},"end":{"row":17,"column":26},"action":"remove","lines":["t"]}],[{"start":{"row":17,"column":25},"end":{"row":17,"column":26},"action":"insert","lines":["T"],"id":19},{"start":{"row":17,"column":26},"end":{"row":17,"column":27},"action":"insert","lines":["y"]}],[{"start":{"row":21,"column":14},"end":{"row":21,"column":16},"action":"remove","lines":["id"],"id":20},{"start":{"row":21,"column":14},"end":{"row":21,"column":22},"action":"insert","lines":["typeName"]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":22,"column":5},"end":{"row":22,"column":5},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1583289041012,"hash":"9ee11b037d02523cec5b8d6d3818ce7c5eba8d65"}