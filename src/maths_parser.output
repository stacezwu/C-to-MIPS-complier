Nonterminals useless in grammar

   SPECIFIERS


Terminals unused in grammar

   ST_DO
   ST_FOR
   T_TYPEDEF
   OP_INCREMENT
   OP_DECREMENT


Rules useless in grammar

   70 SPECIFIERS: TYPE_SPECIFIER
   71           | T_TYPEDEF
   72           | TYPE_SPECIFIER SPECIFIERS
   73           | T_TYPEDEF SPECIFIERS


State 35 conflicts: 19 shift/reduce
State 68 conflicts: 8 shift/reduce
State 69 conflicts: 8 shift/reduce
State 70 conflicts: 8 shift/reduce
State 71 conflicts: 8 shift/reduce
State 72 conflicts: 8 shift/reduce
State 73 conflicts: 19 shift/reduce
State 74 conflicts: 19 shift/reduce
State 75 conflicts: 19 shift/reduce
State 76 conflicts: 19 shift/reduce
State 77 conflicts: 19 shift/reduce
State 78 conflicts: 19 shift/reduce
State 79 conflicts: 19 shift/reduce
State 80 conflicts: 19 shift/reduce
State 81 conflicts: 8 shift/reduce
State 82 conflicts: 8 shift/reduce
State 83 conflicts: 8 shift/reduce
State 84 conflicts: 8 shift/reduce
State 85 conflicts: 8 shift/reduce
State 86 conflicts: 8 shift/reduce
State 120 conflicts: 1 shift/reduce


Grammar

    0 $accept: ROOT $end

    1 ROOT: TRANSLATION_UNIT

    2 TRANSLATION_UNIT: FUNC_DEF
    3                 | DECLARATION
    4                 | TRANSLATION_UNIT FUNC_DEF
    5                 | TRANSLATION_UNIT DECLARATION

    6 FUNC_DEF: TYPE_SPECIFIER T_IDENTIFIER OP_LBRACKET OP_RBRACKET COMPND_STATMNT
    7         | TYPE_SPECIFIER T_IDENTIFIER OP_LBRACKET T_VOID OP_RBRACKET COMPND_STATMNT
    8         | TYPE_SPECIFIER T_IDENTIFIER OP_LBRACKET PARAMETER_LIST OP_RBRACKET COMPND_STATMNT

    9 PARAMETER_LIST: PARAMETER
   10               | PARAMETER_LIST T_COMMA PARAMETER

   11 PARAMETER: TYPE_SPECIFIER T_IDENTIFIER

   12 COMPND_STATMNT: T_LBRACE T_RBRACE
   13               | T_LBRACE BLOCK_ITEM_LIST T_RBRACE

   14 BLOCK_ITEM_LIST: STATMNT
   15                | DECLARATION
   16                | BLOCK_ITEM_LIST STATMNT
   17                | BLOCK_ITEM_LIST DECLARATION

   18 STATMNT: EXPR T_SEMICOLON
   19        | COMPND_STATMNT
   20        | JUMP_STATMNT T_SEMICOLON
   21        | SELECTION_STATMNT

   22 EXPR: PRIMARY_EXPR
   23     | EXPR OP_PLUS EXPR
   24     | EXPR OP_MINUS EXPR
   25     | EXPR OP_TIMES EXPR
   26     | EXPR OP_DIVIDE EXPR
   27     | EXPR OP_MOD EXPR
   28     | EXPR OP_LT EXPR
   29     | EXPR OP_GT EXPR
   30     | EXPR OP_LTE EXPR
   31     | EXPR OP_GTE EXPR
   32     | EXPR OP_EQ_EQ EXPR
   33     | EXPR OP_NEQ EXPR
   34     | OP_LOGICAL_NOT EXPR
   35     | EXPR OP_LOGICAL_AND EXPR
   36     | EXPR OP_LOGICAL_OR EXPR
   37     | EXPR OP_EQ EXPR
   38     | EXPR OP_PLUS_EQ EXPR
   39     | EXPR OP_MINUS_EQ EXPR
   40     | EXPR OP_TIMES_EQ EXPR
   41     | EXPR OP_DIVIDE_EQ EXPR
   42     | EXPR OP_MOD_EQ EXPR
   43     | T_IDENTIFIER OP_LBRACKET OP_RBRACKET
   44     | T_IDENTIFIER OP_LBRACKET ARGUMENT_LIST OP_RBRACKET

   45 PRIMARY_EXPR: T_NUMBER
   46             | T_STRING
   47             | T_IDENTIFIER
   48             | OP_LBRACKET EXPR OP_RBRACKET

   49 ARGUMENT_LIST: EXPR
   50              | ARGUMENT_LIST T_COMMA EXPR

   51 JUMP_STATMNT: ST_BREAK
   52             | ST_CONTINUE
   53             | ST_RETURN EXPR
   54             | ST_RETURN

   55 SELECTION_STATMNT: ST_IF OP_LBRACKET EXPR OP_RBRACKET STATMNT
   56                  | ST_IF OP_LBRACKET EXPR OP_RBRACKET STATMNT ST_ELSE STATMNT
   57                  | ST_WHILE OP_LBRACKET EXPR OP_RBRACKET STATMNT

   58 TYPE_SPECIFIER: T_VOID
   59               | T_BOOL
   60               | T_SIGNED
   61               | T_UNSIGNED
   62               | T_CHAR
   63               | T_INT
   64               | T_SHORT
   65               | T_LONG
   66               | T_FLOAT
   67               | T_DOUBLE

   68 DECLARATION: TYPE_SPECIFIER T_IDENTIFIER T_SEMICOLON
   69            | TYPE_SPECIFIER T_IDENTIFIER OP_EQ EXPR T_SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
ST_BREAK (258) 51
ST_CONTINUE (259) 52
ST_RETURN (260) 53 54
ST_DO (261)
ST_ELSE (262) 56
ST_FOR (263)
ST_IF (264) 55 56
ST_WHILE (265) 57
T_TYPEDEF (266)
T_VOID (267) 7 58
T_BOOL (268) 59
T_SIGNED (269) 60
T_UNSIGNED (270) 61
T_CHAR (271) 62
T_INT (272) 63
T_SHORT (273) 64
T_LONG (274) 65
T_FLOAT (275) 66
T_DOUBLE (276) 67
OP_PLUS (277) 23
OP_MINUS (278) 24
OP_TIMES (279) 25
OP_DIVIDE (280) 26
OP_MOD (281) 27
OP_INCREMENT (282)
OP_DECREMENT (283)
OP_LOGICAL_NOT (284) 34
OP_LOGICAL_OR (285) 36
OP_LOGICAL_AND (286) 35
OP_EQ_EQ (287) 32
OP_NEQ (288) 33
OP_LT (289) 28
OP_GT (290) 29
OP_LTE (291) 30
OP_GTE (292) 31
OP_EQ (293) 37 69
OP_PLUS_EQ (294) 38
OP_MINUS_EQ (295) 39
OP_TIMES_EQ (296) 40
OP_DIVIDE_EQ (297) 41
OP_MOD_EQ (298) 42
OP_LBRACKET (299) 6 7 8 43 44 48 55 56 57
OP_RBRACKET (300) 6 7 8 43 44 48 55 56 57
T_SEMICOLON (301) 18 20 68 69
T_COMMA (302) 10 50
T_LBRACE (303) 12 13
T_RBRACE (304) 12 13
T_NUMBER (305) 45
T_STRING (306) 46
T_IDENTIFIER (307) 6 7 8 11 43 44 47 68 69


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
ROOT (54)
    on left: 1, on right: 0
TRANSLATION_UNIT (55)
    on left: 2 3 4 5, on right: 1 4 5
FUNC_DEF (56)
    on left: 6 7 8, on right: 2 4
PARAMETER_LIST (57)
    on left: 9 10, on right: 8 10
PARAMETER (58)
    on left: 11, on right: 9 10
COMPND_STATMNT (59)
    on left: 12 13, on right: 6 7 8 19
BLOCK_ITEM_LIST (60)
    on left: 14 15 16 17, on right: 13 16 17
STATMNT (61)
    on left: 18 19 20 21, on right: 14 16 55 56 57
EXPR (62)
    on left: 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39
    40 41 42 43 44, on right: 18 23 24 25 26 27 28 29 30 31 32 33 34
    35 36 37 38 39 40 41 42 48 49 50 53 55 56 57 69
PRIMARY_EXPR (63)
    on left: 45 46 47 48, on right: 22
ARGUMENT_LIST (64)
    on left: 49 50, on right: 44 50
JUMP_STATMNT (65)
    on left: 51 52 53 54, on right: 20
SELECTION_STATMNT (66)
    on left: 55 56 57, on right: 21
TYPE_SPECIFIER (67)
    on left: 58 59 60 61 62 63 64 65 66 67, on right: 6 7 8 11 68 69
DECLARATION (68)
    on left: 68 69, on right: 3 5 15 17


State 0

    0 $accept: . ROOT $end

    T_VOID      shift, and go to state 1
    T_BOOL      shift, and go to state 2
    T_SIGNED    shift, and go to state 3
    T_UNSIGNED  shift, and go to state 4
    T_CHAR      shift, and go to state 5
    T_INT       shift, and go to state 6
    T_SHORT     shift, and go to state 7
    T_LONG      shift, and go to state 8
    T_FLOAT     shift, and go to state 9
    T_DOUBLE    shift, and go to state 10

    ROOT              go to state 11
    TRANSLATION_UNIT  go to state 12
    FUNC_DEF          go to state 13
    TYPE_SPECIFIER    go to state 14
    DECLARATION       go to state 15


State 1

   58 TYPE_SPECIFIER: T_VOID .

    $default  reduce using rule 58 (TYPE_SPECIFIER)


State 2

   59 TYPE_SPECIFIER: T_BOOL .

    $default  reduce using rule 59 (TYPE_SPECIFIER)


State 3

   60 TYPE_SPECIFIER: T_SIGNED .

    $default  reduce using rule 60 (TYPE_SPECIFIER)


State 4

   61 TYPE_SPECIFIER: T_UNSIGNED .

    $default  reduce using rule 61 (TYPE_SPECIFIER)


State 5

   62 TYPE_SPECIFIER: T_CHAR .

    $default  reduce using rule 62 (TYPE_SPECIFIER)


State 6

   63 TYPE_SPECIFIER: T_INT .

    $default  reduce using rule 63 (TYPE_SPECIFIER)


State 7

   64 TYPE_SPECIFIER: T_SHORT .

    $default  reduce using rule 64 (TYPE_SPECIFIER)


State 8

   65 TYPE_SPECIFIER: T_LONG .

    $default  reduce using rule 65 (TYPE_SPECIFIER)


State 9

   66 TYPE_SPECIFIER: T_FLOAT .

    $default  reduce using rule 66 (TYPE_SPECIFIER)


State 10

   67 TYPE_SPECIFIER: T_DOUBLE .

    $default  reduce using rule 67 (TYPE_SPECIFIER)


State 11

    0 $accept: ROOT . $end

    $end  shift, and go to state 16


State 12

    1 ROOT: TRANSLATION_UNIT .
    4 TRANSLATION_UNIT: TRANSLATION_UNIT . FUNC_DEF
    5                 | TRANSLATION_UNIT . DECLARATION

    T_VOID      shift, and go to state 1
    T_BOOL      shift, and go to state 2
    T_SIGNED    shift, and go to state 3
    T_UNSIGNED  shift, and go to state 4
    T_CHAR      shift, and go to state 5
    T_INT       shift, and go to state 6
    T_SHORT     shift, and go to state 7
    T_LONG      shift, and go to state 8
    T_FLOAT     shift, and go to state 9
    T_DOUBLE    shift, and go to state 10

    $default  reduce using rule 1 (ROOT)

    FUNC_DEF        go to state 17
    TYPE_SPECIFIER  go to state 14
    DECLARATION     go to state 18


State 13

    2 TRANSLATION_UNIT: FUNC_DEF .

    $default  reduce using rule 2 (TRANSLATION_UNIT)


State 14

    6 FUNC_DEF: TYPE_SPECIFIER . T_IDENTIFIER OP_LBRACKET OP_RBRACKET COMPND_STATMNT
    7         | TYPE_SPECIFIER . T_IDENTIFIER OP_LBRACKET T_VOID OP_RBRACKET COMPND_STATMNT
    8         | TYPE_SPECIFIER . T_IDENTIFIER OP_LBRACKET PARAMETER_LIST OP_RBRACKET COMPND_STATMNT
   68 DECLARATION: TYPE_SPECIFIER . T_IDENTIFIER T_SEMICOLON
   69            | TYPE_SPECIFIER . T_IDENTIFIER OP_EQ EXPR T_SEMICOLON

    T_IDENTIFIER  shift, and go to state 19


State 15

    3 TRANSLATION_UNIT: DECLARATION .

    $default  reduce using rule 3 (TRANSLATION_UNIT)


State 16

    0 $accept: ROOT $end .

    $default  accept


State 17

    4 TRANSLATION_UNIT: TRANSLATION_UNIT FUNC_DEF .

    $default  reduce using rule 4 (TRANSLATION_UNIT)


State 18

    5 TRANSLATION_UNIT: TRANSLATION_UNIT DECLARATION .

    $default  reduce using rule 5 (TRANSLATION_UNIT)


State 19

    6 FUNC_DEF: TYPE_SPECIFIER T_IDENTIFIER . OP_LBRACKET OP_RBRACKET COMPND_STATMNT
    7         | TYPE_SPECIFIER T_IDENTIFIER . OP_LBRACKET T_VOID OP_RBRACKET COMPND_STATMNT
    8         | TYPE_SPECIFIER T_IDENTIFIER . OP_LBRACKET PARAMETER_LIST OP_RBRACKET COMPND_STATMNT
   68 DECLARATION: TYPE_SPECIFIER T_IDENTIFIER . T_SEMICOLON
   69            | TYPE_SPECIFIER T_IDENTIFIER . OP_EQ EXPR T_SEMICOLON

    OP_EQ        shift, and go to state 20
    OP_LBRACKET  shift, and go to state 21
    T_SEMICOLON  shift, and go to state 22


State 20

   69 DECLARATION: TYPE_SPECIFIER T_IDENTIFIER OP_EQ . EXPR T_SEMICOLON

    OP_LOGICAL_NOT  shift, and go to state 23
    OP_LBRACKET     shift, and go to state 24
    T_NUMBER        shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_IDENTIFIER    shift, and go to state 27

    EXPR          go to state 28
    PRIMARY_EXPR  go to state 29


State 21

    6 FUNC_DEF: TYPE_SPECIFIER T_IDENTIFIER OP_LBRACKET . OP_RBRACKET COMPND_STATMNT
    7         | TYPE_SPECIFIER T_IDENTIFIER OP_LBRACKET . T_VOID OP_RBRACKET COMPND_STATMNT
    8         | TYPE_SPECIFIER T_IDENTIFIER OP_LBRACKET . PARAMETER_LIST OP_RBRACKET COMPND_STATMNT

    T_VOID       shift, and go to state 30
    T_BOOL       shift, and go to state 2
    T_SIGNED     shift, and go to state 3
    T_UNSIGNED   shift, and go to state 4
    T_CHAR       shift, and go to state 5
    T_INT        shift, and go to state 6
    T_SHORT      shift, and go to state 7
    T_LONG       shift, and go to state 8
    T_FLOAT      shift, and go to state 9
    T_DOUBLE     shift, and go to state 10
    OP_RBRACKET  shift, and go to state 31

    PARAMETER_LIST  go to state 32
    PARAMETER       go to state 33
    TYPE_SPECIFIER  go to state 34


State 22

   68 DECLARATION: TYPE_SPECIFIER T_IDENTIFIER T_SEMICOLON .

    $default  reduce using rule 68 (DECLARATION)


State 23

   34 EXPR: OP_LOGICAL_NOT . EXPR

    OP_LOGICAL_NOT  shift, and go to state 23
    OP_LBRACKET     shift, and go to state 24
    T_NUMBER        shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_IDENTIFIER    shift, and go to state 27

    EXPR          go to state 35
    PRIMARY_EXPR  go to state 29


State 24

   48 PRIMARY_EXPR: OP_LBRACKET . EXPR OP_RBRACKET

    OP_LOGICAL_NOT  shift, and go to state 23
    OP_LBRACKET     shift, and go to state 24
    T_NUMBER        shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_IDENTIFIER    shift, and go to state 27

    EXPR          go to state 36
    PRIMARY_EXPR  go to state 29


State 25

   45 PRIMARY_EXPR: T_NUMBER .

    $default  reduce using rule 45 (PRIMARY_EXPR)


State 26

   46 PRIMARY_EXPR: T_STRING .

    $default  reduce using rule 46 (PRIMARY_EXPR)


State 27

   43 EXPR: T_IDENTIFIER . OP_LBRACKET OP_RBRACKET
   44     | T_IDENTIFIER . OP_LBRACKET ARGUMENT_LIST OP_RBRACKET
   47 PRIMARY_EXPR: T_IDENTIFIER .

    OP_LBRACKET  shift, and go to state 37

    $default  reduce using rule 47 (PRIMARY_EXPR)


State 28

   23 EXPR: EXPR . OP_PLUS EXPR
   24     | EXPR . OP_MINUS EXPR
   25     | EXPR . OP_TIMES EXPR
   26     | EXPR . OP_DIVIDE EXPR
   27     | EXPR . OP_MOD EXPR
   28     | EXPR . OP_LT EXPR
   29     | EXPR . OP_GT EXPR
   30     | EXPR . OP_LTE EXPR
   31     | EXPR . OP_GTE EXPR
   32     | EXPR . OP_EQ_EQ EXPR
   33     | EXPR . OP_NEQ EXPR
   35     | EXPR . OP_LOGICAL_AND EXPR
   36     | EXPR . OP_LOGICAL_OR EXPR
   37     | EXPR . OP_EQ EXPR
   38     | EXPR . OP_PLUS_EQ EXPR
   39     | EXPR . OP_MINUS_EQ EXPR
   40     | EXPR . OP_TIMES_EQ EXPR
   41     | EXPR . OP_DIVIDE_EQ EXPR
   42     | EXPR . OP_MOD_EQ EXPR
   69 DECLARATION: TYPE_SPECIFIER T_IDENTIFIER OP_EQ EXPR . T_SEMICOLON

    OP_PLUS         shift, and go to state 38
    OP_MINUS        shift, and go to state 39
    OP_TIMES        shift, and go to state 40
    OP_DIVIDE       shift, and go to state 41
    OP_MOD          shift, and go to state 42
    OP_LOGICAL_OR   shift, and go to state 43
    OP_LOGICAL_AND  shift, and go to state 44
    OP_EQ_EQ        shift, and go to state 45
    OP_NEQ          shift, and go to state 46
    OP_LT           shift, and go to state 47
    OP_GT           shift, and go to state 48
    OP_LTE          shift, and go to state 49
    OP_GTE          shift, and go to state 50
    OP_EQ           shift, and go to state 51
    OP_PLUS_EQ      shift, and go to state 52
    OP_MINUS_EQ     shift, and go to state 53
    OP_TIMES_EQ     shift, and go to state 54
    OP_DIVIDE_EQ    shift, and go to state 55
    OP_MOD_EQ       shift, and go to state 56
    T_SEMICOLON     shift, and go to state 57


State 29

   22 EXPR: PRIMARY_EXPR .

    $default  reduce using rule 22 (EXPR)


State 30

    7 FUNC_DEF: TYPE_SPECIFIER T_IDENTIFIER OP_LBRACKET T_VOID . OP_RBRACKET COMPND_STATMNT
   58 TYPE_SPECIFIER: T_VOID .

    OP_RBRACKET  shift, and go to state 58

    $default  reduce using rule 58 (TYPE_SPECIFIER)


State 31

    6 FUNC_DEF: TYPE_SPECIFIER T_IDENTIFIER OP_LBRACKET OP_RBRACKET . COMPND_STATMNT

    T_LBRACE  shift, and go to state 59

    COMPND_STATMNT  go to state 60


State 32

    8 FUNC_DEF: TYPE_SPECIFIER T_IDENTIFIER OP_LBRACKET PARAMETER_LIST . OP_RBRACKET COMPND_STATMNT
   10 PARAMETER_LIST: PARAMETER_LIST . T_COMMA PARAMETER

    OP_RBRACKET  shift, and go to state 61
    T_COMMA      shift, and go to state 62


State 33

    9 PARAMETER_LIST: PARAMETER .

    $default  reduce using rule 9 (PARAMETER_LIST)


State 34

   11 PARAMETER: TYPE_SPECIFIER . T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 63


State 35

   23 EXPR: EXPR . OP_PLUS EXPR
   24     | EXPR . OP_MINUS EXPR
   25     | EXPR . OP_TIMES EXPR
   26     | EXPR . OP_DIVIDE EXPR
   27     | EXPR . OP_MOD EXPR
   28     | EXPR . OP_LT EXPR
   29     | EXPR . OP_GT EXPR
   30     | EXPR . OP_LTE EXPR
   31     | EXPR . OP_GTE EXPR
   32     | EXPR . OP_EQ_EQ EXPR
   33     | EXPR . OP_NEQ EXPR
   34     | OP_LOGICAL_NOT EXPR .
   35     | EXPR . OP_LOGICAL_AND EXPR
   36     | EXPR . OP_LOGICAL_OR EXPR
   37     | EXPR . OP_EQ EXPR
   38     | EXPR . OP_PLUS_EQ EXPR
   39     | EXPR . OP_MINUS_EQ EXPR
   40     | EXPR . OP_TIMES_EQ EXPR
   41     | EXPR . OP_DIVIDE_EQ EXPR
   42     | EXPR . OP_MOD_EQ EXPR

    OP_PLUS         shift, and go to state 38
    OP_MINUS        shift, and go to state 39
    OP_TIMES        shift, and go to state 40
    OP_DIVIDE       shift, and go to state 41
    OP_MOD          shift, and go to state 42
    OP_LOGICAL_OR   shift, and go to state 43
    OP_LOGICAL_AND  shift, and go to state 44
    OP_EQ_EQ        shift, and go to state 45
    OP_NEQ          shift, and go to state 46
    OP_LT           shift, and go to state 47
    OP_GT           shift, and go to state 48
    OP_LTE          shift, and go to state 49
    OP_GTE          shift, and go to state 50
    OP_EQ           shift, and go to state 51
    OP_PLUS_EQ      shift, and go to state 52
    OP_MINUS_EQ     shift, and go to state 53
    OP_TIMES_EQ     shift, and go to state 54
    OP_DIVIDE_EQ    shift, and go to state 55
    OP_MOD_EQ       shift, and go to state 56

    OP_PLUS         [reduce using rule 34 (EXPR)]
    OP_MINUS        [reduce using rule 34 (EXPR)]
    OP_TIMES        [reduce using rule 34 (EXPR)]
    OP_DIVIDE       [reduce using rule 34 (EXPR)]
    OP_MOD          [reduce using rule 34 (EXPR)]
    OP_LOGICAL_OR   [reduce using rule 34 (EXPR)]
    OP_LOGICAL_AND  [reduce using rule 34 (EXPR)]
    OP_EQ_EQ        [reduce using rule 34 (EXPR)]
    OP_NEQ          [reduce using rule 34 (EXPR)]
    OP_LT           [reduce using rule 34 (EXPR)]
    OP_GT           [reduce using rule 34 (EXPR)]
    OP_LTE          [reduce using rule 34 (EXPR)]
    OP_GTE          [reduce using rule 34 (EXPR)]
    OP_EQ           [reduce using rule 34 (EXPR)]
    OP_PLUS_EQ      [reduce using rule 34 (EXPR)]
    OP_MINUS_EQ     [reduce using rule 34 (EXPR)]
    OP_TIMES_EQ     [reduce using rule 34 (EXPR)]
    OP_DIVIDE_EQ    [reduce using rule 34 (EXPR)]
    OP_MOD_EQ       [reduce using rule 34 (EXPR)]
    $default        reduce using rule 34 (EXPR)


State 36

   23 EXPR: EXPR . OP_PLUS EXPR
   24     | EXPR . OP_MINUS EXPR
   25     | EXPR . OP_TIMES EXPR
   26     | EXPR . OP_DIVIDE EXPR
   27     | EXPR . OP_MOD EXPR
   28     | EXPR . OP_LT EXPR
   29     | EXPR . OP_GT EXPR
   30     | EXPR . OP_LTE EXPR
   31     | EXPR . OP_GTE EXPR
   32     | EXPR . OP_EQ_EQ EXPR
   33     | EXPR . OP_NEQ EXPR
   35     | EXPR . OP_LOGICAL_AND EXPR
   36     | EXPR . OP_LOGICAL_OR EXPR
   37     | EXPR . OP_EQ EXPR
   38     | EXPR . OP_PLUS_EQ EXPR
   39     | EXPR . OP_MINUS_EQ EXPR
   40     | EXPR . OP_TIMES_EQ EXPR
   41     | EXPR . OP_DIVIDE_EQ EXPR
   42     | EXPR . OP_MOD_EQ EXPR
   48 PRIMARY_EXPR: OP_LBRACKET EXPR . OP_RBRACKET

    OP_PLUS         shift, and go to state 38
    OP_MINUS        shift, and go to state 39
    OP_TIMES        shift, and go to state 40
    OP_DIVIDE       shift, and go to state 41
    OP_MOD          shift, and go to state 42
    OP_LOGICAL_OR   shift, and go to state 43
    OP_LOGICAL_AND  shift, and go to state 44
    OP_EQ_EQ        shift, and go to state 45
    OP_NEQ          shift, and go to state 46
    OP_LT           shift, and go to state 47
    OP_GT           shift, and go to state 48
    OP_LTE          shift, and go to state 49
    OP_GTE          shift, and go to state 50
    OP_EQ           shift, and go to state 51
    OP_PLUS_EQ      shift, and go to state 52
    OP_MINUS_EQ     shift, and go to state 53
    OP_TIMES_EQ     shift, and go to state 54
    OP_DIVIDE_EQ    shift, and go to state 55
    OP_MOD_EQ       shift, and go to state 56
    OP_RBRACKET     shift, and go to state 64


State 37

   43 EXPR: T_IDENTIFIER OP_LBRACKET . OP_RBRACKET
   44     | T_IDENTIFIER OP_LBRACKET . ARGUMENT_LIST OP_RBRACKET

    OP_LOGICAL_NOT  shift, and go to state 23
    OP_LBRACKET     shift, and go to state 24
    OP_RBRACKET     shift, and go to state 65
    T_NUMBER        shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_IDENTIFIER    shift, and go to state 27

    EXPR           go to state 66
    PRIMARY_EXPR   go to state 29
    ARGUMENT_LIST  go to state 67


State 38

   23 EXPR: EXPR OP_PLUS . EXPR

    OP_LOGICAL_NOT  shift, and go to state 23
    OP_LBRACKET     shift, and go to state 24
    T_NUMBER        shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_IDENTIFIER    shift, and go to state 27

    EXPR          go to state 68
    PRIMARY_EXPR  go to state 29


State 39

   24 EXPR: EXPR OP_MINUS . EXPR

    OP_LOGICAL_NOT  shift, and go to state 23
    OP_LBRACKET     shift, and go to state 24
    T_NUMBER        shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_IDENTIFIER    shift, and go to state 27

    EXPR          go to state 69
    PRIMARY_EXPR  go to state 29


State 40

   25 EXPR: EXPR OP_TIMES . EXPR

    OP_LOGICAL_NOT  shift, and go to state 23
    OP_LBRACKET     shift, and go to state 24
    T_NUMBER        shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_IDENTIFIER    shift, and go to state 27

    EXPR          go to state 70
    PRIMARY_EXPR  go to state 29


State 41

   26 EXPR: EXPR OP_DIVIDE . EXPR

    OP_LOGICAL_NOT  shift, and go to state 23
    OP_LBRACKET     shift, and go to state 24
    T_NUMBER        shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_IDENTIFIER    shift, and go to state 27

    EXPR          go to state 71
    PRIMARY_EXPR  go to state 29


State 42

   27 EXPR: EXPR OP_MOD . EXPR

    OP_LOGICAL_NOT  shift, and go to state 23
    OP_LBRACKET     shift, and go to state 24
    T_NUMBER        shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_IDENTIFIER    shift, and go to state 27

    EXPR          go to state 72
    PRIMARY_EXPR  go to state 29


State 43

   36 EXPR: EXPR OP_LOGICAL_OR . EXPR

    OP_LOGICAL_NOT  shift, and go to state 23
    OP_LBRACKET     shift, and go to state 24
    T_NUMBER        shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_IDENTIFIER    shift, and go to state 27

    EXPR          go to state 73
    PRIMARY_EXPR  go to state 29


State 44

   35 EXPR: EXPR OP_LOGICAL_AND . EXPR

    OP_LOGICAL_NOT  shift, and go to state 23
    OP_LBRACKET     shift, and go to state 24
    T_NUMBER        shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_IDENTIFIER    shift, and go to state 27

    EXPR          go to state 74
    PRIMARY_EXPR  go to state 29


State 45

   32 EXPR: EXPR OP_EQ_EQ . EXPR

    OP_LOGICAL_NOT  shift, and go to state 23
    OP_LBRACKET     shift, and go to state 24
    T_NUMBER        shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_IDENTIFIER    shift, and go to state 27

    EXPR          go to state 75
    PRIMARY_EXPR  go to state 29


State 46

   33 EXPR: EXPR OP_NEQ . EXPR

    OP_LOGICAL_NOT  shift, and go to state 23
    OP_LBRACKET     shift, and go to state 24
    T_NUMBER        shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_IDENTIFIER    shift, and go to state 27

    EXPR          go to state 76
    PRIMARY_EXPR  go to state 29


State 47

   28 EXPR: EXPR OP_LT . EXPR

    OP_LOGICAL_NOT  shift, and go to state 23
    OP_LBRACKET     shift, and go to state 24
    T_NUMBER        shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_IDENTIFIER    shift, and go to state 27

    EXPR          go to state 77
    PRIMARY_EXPR  go to state 29


State 48

   29 EXPR: EXPR OP_GT . EXPR

    OP_LOGICAL_NOT  shift, and go to state 23
    OP_LBRACKET     shift, and go to state 24
    T_NUMBER        shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_IDENTIFIER    shift, and go to state 27

    EXPR          go to state 78
    PRIMARY_EXPR  go to state 29


State 49

   30 EXPR: EXPR OP_LTE . EXPR

    OP_LOGICAL_NOT  shift, and go to state 23
    OP_LBRACKET     shift, and go to state 24
    T_NUMBER        shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_IDENTIFIER    shift, and go to state 27

    EXPR          go to state 79
    PRIMARY_EXPR  go to state 29


State 50

   31 EXPR: EXPR OP_GTE . EXPR

    OP_LOGICAL_NOT  shift, and go to state 23
    OP_LBRACKET     shift, and go to state 24
    T_NUMBER        shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_IDENTIFIER    shift, and go to state 27

    EXPR          go to state 80
    PRIMARY_EXPR  go to state 29


State 51

   37 EXPR: EXPR OP_EQ . EXPR

    OP_LOGICAL_NOT  shift, and go to state 23
    OP_LBRACKET     shift, and go to state 24
    T_NUMBER        shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_IDENTIFIER    shift, and go to state 27

    EXPR          go to state 81
    PRIMARY_EXPR  go to state 29


State 52

   38 EXPR: EXPR OP_PLUS_EQ . EXPR

    OP_LOGICAL_NOT  shift, and go to state 23
    OP_LBRACKET     shift, and go to state 24
    T_NUMBER        shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_IDENTIFIER    shift, and go to state 27

    EXPR          go to state 82
    PRIMARY_EXPR  go to state 29


State 53

   39 EXPR: EXPR OP_MINUS_EQ . EXPR

    OP_LOGICAL_NOT  shift, and go to state 23
    OP_LBRACKET     shift, and go to state 24
    T_NUMBER        shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_IDENTIFIER    shift, and go to state 27

    EXPR          go to state 83
    PRIMARY_EXPR  go to state 29


State 54

   40 EXPR: EXPR OP_TIMES_EQ . EXPR

    OP_LOGICAL_NOT  shift, and go to state 23
    OP_LBRACKET     shift, and go to state 24
    T_NUMBER        shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_IDENTIFIER    shift, and go to state 27

    EXPR          go to state 84
    PRIMARY_EXPR  go to state 29


State 55

   41 EXPR: EXPR OP_DIVIDE_EQ . EXPR

    OP_LOGICAL_NOT  shift, and go to state 23
    OP_LBRACKET     shift, and go to state 24
    T_NUMBER        shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_IDENTIFIER    shift, and go to state 27

    EXPR          go to state 85
    PRIMARY_EXPR  go to state 29


State 56

   42 EXPR: EXPR OP_MOD_EQ . EXPR

    OP_LOGICAL_NOT  shift, and go to state 23
    OP_LBRACKET     shift, and go to state 24
    T_NUMBER        shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_IDENTIFIER    shift, and go to state 27

    EXPR          go to state 86
    PRIMARY_EXPR  go to state 29


State 57

   69 DECLARATION: TYPE_SPECIFIER T_IDENTIFIER OP_EQ EXPR T_SEMICOLON .

    $default  reduce using rule 69 (DECLARATION)


State 58

    7 FUNC_DEF: TYPE_SPECIFIER T_IDENTIFIER OP_LBRACKET T_VOID OP_RBRACKET . COMPND_STATMNT

    T_LBRACE  shift, and go to state 59

    COMPND_STATMNT  go to state 87


State 59

   12 COMPND_STATMNT: T_LBRACE . T_RBRACE
   13               | T_LBRACE . BLOCK_ITEM_LIST T_RBRACE

    ST_BREAK        shift, and go to state 88
    ST_CONTINUE     shift, and go to state 89
    ST_RETURN       shift, and go to state 90
    ST_IF           shift, and go to state 91
    ST_WHILE        shift, and go to state 92
    T_VOID          shift, and go to state 1
    T_BOOL          shift, and go to state 2
    T_SIGNED        shift, and go to state 3
    T_UNSIGNED      shift, and go to state 4
    T_CHAR          shift, and go to state 5
    T_INT           shift, and go to state 6
    T_SHORT         shift, and go to state 7
    T_LONG          shift, and go to state 8
    T_FLOAT         shift, and go to state 9
    T_DOUBLE        shift, and go to state 10
    OP_LOGICAL_NOT  shift, and go to state 23
    OP_LBRACKET     shift, and go to state 24
    T_LBRACE        shift, and go to state 59
    T_RBRACE        shift, and go to state 93
    T_NUMBER        shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_IDENTIFIER    shift, and go to state 27

    COMPND_STATMNT     go to state 94
    BLOCK_ITEM_LIST    go to state 95
    STATMNT            go to state 96
    EXPR               go to state 97
    PRIMARY_EXPR       go to state 29
    JUMP_STATMNT       go to state 98
    SELECTION_STATMNT  go to state 99
    TYPE_SPECIFIER     go to state 100
    DECLARATION        go to state 101


State 60

    6 FUNC_DEF: TYPE_SPECIFIER T_IDENTIFIER OP_LBRACKET OP_RBRACKET COMPND_STATMNT .

    $default  reduce using rule 6 (FUNC_DEF)


State 61

    8 FUNC_DEF: TYPE_SPECIFIER T_IDENTIFIER OP_LBRACKET PARAMETER_LIST OP_RBRACKET . COMPND_STATMNT

    T_LBRACE  shift, and go to state 59

    COMPND_STATMNT  go to state 102


State 62

   10 PARAMETER_LIST: PARAMETER_LIST T_COMMA . PARAMETER

    T_VOID      shift, and go to state 1
    T_BOOL      shift, and go to state 2
    T_SIGNED    shift, and go to state 3
    T_UNSIGNED  shift, and go to state 4
    T_CHAR      shift, and go to state 5
    T_INT       shift, and go to state 6
    T_SHORT     shift, and go to state 7
    T_LONG      shift, and go to state 8
    T_FLOAT     shift, and go to state 9
    T_DOUBLE    shift, and go to state 10

    PARAMETER       go to state 103
    TYPE_SPECIFIER  go to state 34


State 63

   11 PARAMETER: TYPE_SPECIFIER T_IDENTIFIER .

    $default  reduce using rule 11 (PARAMETER)


State 64

   48 PRIMARY_EXPR: OP_LBRACKET EXPR OP_RBRACKET .

    $default  reduce using rule 48 (PRIMARY_EXPR)


State 65

   43 EXPR: T_IDENTIFIER OP_LBRACKET OP_RBRACKET .

    $default  reduce using rule 43 (EXPR)


State 66

   23 EXPR: EXPR . OP_PLUS EXPR
   24     | EXPR . OP_MINUS EXPR
   25     | EXPR . OP_TIMES EXPR
   26     | EXPR . OP_DIVIDE EXPR
   27     | EXPR . OP_MOD EXPR
   28     | EXPR . OP_LT EXPR
   29     | EXPR . OP_GT EXPR
   30     | EXPR . OP_LTE EXPR
   31     | EXPR . OP_GTE EXPR
   32     | EXPR . OP_EQ_EQ EXPR
   33     | EXPR . OP_NEQ EXPR
   35     | EXPR . OP_LOGICAL_AND EXPR
   36     | EXPR . OP_LOGICAL_OR EXPR
   37     | EXPR . OP_EQ EXPR
   38     | EXPR . OP_PLUS_EQ EXPR
   39     | EXPR . OP_MINUS_EQ EXPR
   40     | EXPR . OP_TIMES_EQ EXPR
   41     | EXPR . OP_DIVIDE_EQ EXPR
   42     | EXPR . OP_MOD_EQ EXPR
   49 ARGUMENT_LIST: EXPR .

    OP_PLUS         shift, and go to state 38
    OP_MINUS        shift, and go to state 39
    OP_TIMES        shift, and go to state 40
    OP_DIVIDE       shift, and go to state 41
    OP_MOD          shift, and go to state 42
    OP_LOGICAL_OR   shift, and go to state 43
    OP_LOGICAL_AND  shift, and go to state 44
    OP_EQ_EQ        shift, and go to state 45
    OP_NEQ          shift, and go to state 46
    OP_LT           shift, and go to state 47
    OP_GT           shift, and go to state 48
    OP_LTE          shift, and go to state 49
    OP_GTE          shift, and go to state 50
    OP_EQ           shift, and go to state 51
    OP_PLUS_EQ      shift, and go to state 52
    OP_MINUS_EQ     shift, and go to state 53
    OP_TIMES_EQ     shift, and go to state 54
    OP_DIVIDE_EQ    shift, and go to state 55
    OP_MOD_EQ       shift, and go to state 56

    $default  reduce using rule 49 (ARGUMENT_LIST)


State 67

   44 EXPR: T_IDENTIFIER OP_LBRACKET ARGUMENT_LIST . OP_RBRACKET
   50 ARGUMENT_LIST: ARGUMENT_LIST . T_COMMA EXPR

    OP_RBRACKET  shift, and go to state 104
    T_COMMA      shift, and go to state 105


State 68

   23 EXPR: EXPR . OP_PLUS EXPR
   23     | EXPR OP_PLUS EXPR .
   24     | EXPR . OP_MINUS EXPR
   25     | EXPR . OP_TIMES EXPR
   26     | EXPR . OP_DIVIDE EXPR
   27     | EXPR . OP_MOD EXPR
   28     | EXPR . OP_LT EXPR
   29     | EXPR . OP_GT EXPR
   30     | EXPR . OP_LTE EXPR
   31     | EXPR . OP_GTE EXPR
   32     | EXPR . OP_EQ_EQ EXPR
   33     | EXPR . OP_NEQ EXPR
   35     | EXPR . OP_LOGICAL_AND EXPR
   36     | EXPR . OP_LOGICAL_OR EXPR
   37     | EXPR . OP_EQ EXPR
   38     | EXPR . OP_PLUS_EQ EXPR
   39     | EXPR . OP_MINUS_EQ EXPR
   40     | EXPR . OP_TIMES_EQ EXPR
   41     | EXPR . OP_DIVIDE_EQ EXPR
   42     | EXPR . OP_MOD_EQ EXPR

    OP_TIMES        shift, and go to state 40
    OP_DIVIDE       shift, and go to state 41
    OP_MOD          shift, and go to state 42
    OP_LOGICAL_OR   shift, and go to state 43
    OP_LOGICAL_AND  shift, and go to state 44
    OP_EQ_EQ        shift, and go to state 45
    OP_NEQ          shift, and go to state 46
    OP_LT           shift, and go to state 47
    OP_GT           shift, and go to state 48
    OP_LTE          shift, and go to state 49
    OP_GTE          shift, and go to state 50

    OP_LOGICAL_OR   [reduce using rule 23 (EXPR)]
    OP_LOGICAL_AND  [reduce using rule 23 (EXPR)]
    OP_EQ_EQ        [reduce using rule 23 (EXPR)]
    OP_NEQ          [reduce using rule 23 (EXPR)]
    OP_LT           [reduce using rule 23 (EXPR)]
    OP_GT           [reduce using rule 23 (EXPR)]
    OP_LTE          [reduce using rule 23 (EXPR)]
    OP_GTE          [reduce using rule 23 (EXPR)]
    $default        reduce using rule 23 (EXPR)


State 69

   23 EXPR: EXPR . OP_PLUS EXPR
   24     | EXPR . OP_MINUS EXPR
   24     | EXPR OP_MINUS EXPR .
   25     | EXPR . OP_TIMES EXPR
   26     | EXPR . OP_DIVIDE EXPR
   27     | EXPR . OP_MOD EXPR
   28     | EXPR . OP_LT EXPR
   29     | EXPR . OP_GT EXPR
   30     | EXPR . OP_LTE EXPR
   31     | EXPR . OP_GTE EXPR
   32     | EXPR . OP_EQ_EQ EXPR
   33     | EXPR . OP_NEQ EXPR
   35     | EXPR . OP_LOGICAL_AND EXPR
   36     | EXPR . OP_LOGICAL_OR EXPR
   37     | EXPR . OP_EQ EXPR
   38     | EXPR . OP_PLUS_EQ EXPR
   39     | EXPR . OP_MINUS_EQ EXPR
   40     | EXPR . OP_TIMES_EQ EXPR
   41     | EXPR . OP_DIVIDE_EQ EXPR
   42     | EXPR . OP_MOD_EQ EXPR

    OP_TIMES        shift, and go to state 40
    OP_DIVIDE       shift, and go to state 41
    OP_MOD          shift, and go to state 42
    OP_LOGICAL_OR   shift, and go to state 43
    OP_LOGICAL_AND  shift, and go to state 44
    OP_EQ_EQ        shift, and go to state 45
    OP_NEQ          shift, and go to state 46
    OP_LT           shift, and go to state 47
    OP_GT           shift, and go to state 48
    OP_LTE          shift, and go to state 49
    OP_GTE          shift, and go to state 50

    OP_LOGICAL_OR   [reduce using rule 24 (EXPR)]
    OP_LOGICAL_AND  [reduce using rule 24 (EXPR)]
    OP_EQ_EQ        [reduce using rule 24 (EXPR)]
    OP_NEQ          [reduce using rule 24 (EXPR)]
    OP_LT           [reduce using rule 24 (EXPR)]
    OP_GT           [reduce using rule 24 (EXPR)]
    OP_LTE          [reduce using rule 24 (EXPR)]
    OP_GTE          [reduce using rule 24 (EXPR)]
    $default        reduce using rule 24 (EXPR)


State 70

   23 EXPR: EXPR . OP_PLUS EXPR
   24     | EXPR . OP_MINUS EXPR
   25     | EXPR . OP_TIMES EXPR
   25     | EXPR OP_TIMES EXPR .
   26     | EXPR . OP_DIVIDE EXPR
   27     | EXPR . OP_MOD EXPR
   28     | EXPR . OP_LT EXPR
   29     | EXPR . OP_GT EXPR
   30     | EXPR . OP_LTE EXPR
   31     | EXPR . OP_GTE EXPR
   32     | EXPR . OP_EQ_EQ EXPR
   33     | EXPR . OP_NEQ EXPR
   35     | EXPR . OP_LOGICAL_AND EXPR
   36     | EXPR . OP_LOGICAL_OR EXPR
   37     | EXPR . OP_EQ EXPR
   38     | EXPR . OP_PLUS_EQ EXPR
   39     | EXPR . OP_MINUS_EQ EXPR
   40     | EXPR . OP_TIMES_EQ EXPR
   41     | EXPR . OP_DIVIDE_EQ EXPR
   42     | EXPR . OP_MOD_EQ EXPR

    OP_LOGICAL_OR   shift, and go to state 43
    OP_LOGICAL_AND  shift, and go to state 44
    OP_EQ_EQ        shift, and go to state 45
    OP_NEQ          shift, and go to state 46
    OP_LT           shift, and go to state 47
    OP_GT           shift, and go to state 48
    OP_LTE          shift, and go to state 49
    OP_GTE          shift, and go to state 50

    OP_LOGICAL_OR   [reduce using rule 25 (EXPR)]
    OP_LOGICAL_AND  [reduce using rule 25 (EXPR)]
    OP_EQ_EQ        [reduce using rule 25 (EXPR)]
    OP_NEQ          [reduce using rule 25 (EXPR)]
    OP_LT           [reduce using rule 25 (EXPR)]
    OP_GT           [reduce using rule 25 (EXPR)]
    OP_LTE          [reduce using rule 25 (EXPR)]
    OP_GTE          [reduce using rule 25 (EXPR)]
    $default        reduce using rule 25 (EXPR)


State 71

   23 EXPR: EXPR . OP_PLUS EXPR
   24     | EXPR . OP_MINUS EXPR
   25     | EXPR . OP_TIMES EXPR
   26     | EXPR . OP_DIVIDE EXPR
   26     | EXPR OP_DIVIDE EXPR .
   27     | EXPR . OP_MOD EXPR
   28     | EXPR . OP_LT EXPR
   29     | EXPR . OP_GT EXPR
   30     | EXPR . OP_LTE EXPR
   31     | EXPR . OP_GTE EXPR
   32     | EXPR . OP_EQ_EQ EXPR
   33     | EXPR . OP_NEQ EXPR
   35     | EXPR . OP_LOGICAL_AND EXPR
   36     | EXPR . OP_LOGICAL_OR EXPR
   37     | EXPR . OP_EQ EXPR
   38     | EXPR . OP_PLUS_EQ EXPR
   39     | EXPR . OP_MINUS_EQ EXPR
   40     | EXPR . OP_TIMES_EQ EXPR
   41     | EXPR . OP_DIVIDE_EQ EXPR
   42     | EXPR . OP_MOD_EQ EXPR

    OP_LOGICAL_OR   shift, and go to state 43
    OP_LOGICAL_AND  shift, and go to state 44
    OP_EQ_EQ        shift, and go to state 45
    OP_NEQ          shift, and go to state 46
    OP_LT           shift, and go to state 47
    OP_GT           shift, and go to state 48
    OP_LTE          shift, and go to state 49
    OP_GTE          shift, and go to state 50

    OP_LOGICAL_OR   [reduce using rule 26 (EXPR)]
    OP_LOGICAL_AND  [reduce using rule 26 (EXPR)]
    OP_EQ_EQ        [reduce using rule 26 (EXPR)]
    OP_NEQ          [reduce using rule 26 (EXPR)]
    OP_LT           [reduce using rule 26 (EXPR)]
    OP_GT           [reduce using rule 26 (EXPR)]
    OP_LTE          [reduce using rule 26 (EXPR)]
    OP_GTE          [reduce using rule 26 (EXPR)]
    $default        reduce using rule 26 (EXPR)


State 72

   23 EXPR: EXPR . OP_PLUS EXPR
   24     | EXPR . OP_MINUS EXPR
   25     | EXPR . OP_TIMES EXPR
   26     | EXPR . OP_DIVIDE EXPR
   27     | EXPR . OP_MOD EXPR
   27     | EXPR OP_MOD EXPR .
   28     | EXPR . OP_LT EXPR
   29     | EXPR . OP_GT EXPR
   30     | EXPR . OP_LTE EXPR
   31     | EXPR . OP_GTE EXPR
   32     | EXPR . OP_EQ_EQ EXPR
   33     | EXPR . OP_NEQ EXPR
   35     | EXPR . OP_LOGICAL_AND EXPR
   36     | EXPR . OP_LOGICAL_OR EXPR
   37     | EXPR . OP_EQ EXPR
   38     | EXPR . OP_PLUS_EQ EXPR
   39     | EXPR . OP_MINUS_EQ EXPR
   40     | EXPR . OP_TIMES_EQ EXPR
   41     | EXPR . OP_DIVIDE_EQ EXPR
   42     | EXPR . OP_MOD_EQ EXPR

    OP_LOGICAL_OR   shift, and go to state 43
    OP_LOGICAL_AND  shift, and go to state 44
    OP_EQ_EQ        shift, and go to state 45
    OP_NEQ          shift, and go to state 46
    OP_LT           shift, and go to state 47
    OP_GT           shift, and go to state 48
    OP_LTE          shift, and go to state 49
    OP_GTE          shift, and go to state 50

    OP_LOGICAL_OR   [reduce using rule 27 (EXPR)]
    OP_LOGICAL_AND  [reduce using rule 27 (EXPR)]
    OP_EQ_EQ        [reduce using rule 27 (EXPR)]
    OP_NEQ          [reduce using rule 27 (EXPR)]
    OP_LT           [reduce using rule 27 (EXPR)]
    OP_GT           [reduce using rule 27 (EXPR)]
    OP_LTE          [reduce using rule 27 (EXPR)]
    OP_GTE          [reduce using rule 27 (EXPR)]
    $default        reduce using rule 27 (EXPR)


State 73

   23 EXPR: EXPR . OP_PLUS EXPR
   24     | EXPR . OP_MINUS EXPR
   25     | EXPR . OP_TIMES EXPR
   26     | EXPR . OP_DIVIDE EXPR
   27     | EXPR . OP_MOD EXPR
   28     | EXPR . OP_LT EXPR
   29     | EXPR . OP_GT EXPR
   30     | EXPR . OP_LTE EXPR
   31     | EXPR . OP_GTE EXPR
   32     | EXPR . OP_EQ_EQ EXPR
   33     | EXPR . OP_NEQ EXPR
   35     | EXPR . OP_LOGICAL_AND EXPR
   36     | EXPR . OP_LOGICAL_OR EXPR
   36     | EXPR OP_LOGICAL_OR EXPR .
   37     | EXPR . OP_EQ EXPR
   38     | EXPR . OP_PLUS_EQ EXPR
   39     | EXPR . OP_MINUS_EQ EXPR
   40     | EXPR . OP_TIMES_EQ EXPR
   41     | EXPR . OP_DIVIDE_EQ EXPR
   42     | EXPR . OP_MOD_EQ EXPR

    OP_PLUS         shift, and go to state 38
    OP_MINUS        shift, and go to state 39
    OP_TIMES        shift, and go to state 40
    OP_DIVIDE       shift, and go to state 41
    OP_MOD          shift, and go to state 42
    OP_LOGICAL_OR   shift, and go to state 43
    OP_LOGICAL_AND  shift, and go to state 44
    OP_EQ_EQ        shift, and go to state 45
    OP_NEQ          shift, and go to state 46
    OP_LT           shift, and go to state 47
    OP_GT           shift, and go to state 48
    OP_LTE          shift, and go to state 49
    OP_GTE          shift, and go to state 50
    OP_EQ           shift, and go to state 51
    OP_PLUS_EQ      shift, and go to state 52
    OP_MINUS_EQ     shift, and go to state 53
    OP_TIMES_EQ     shift, and go to state 54
    OP_DIVIDE_EQ    shift, and go to state 55
    OP_MOD_EQ       shift, and go to state 56

    OP_PLUS         [reduce using rule 36 (EXPR)]
    OP_MINUS        [reduce using rule 36 (EXPR)]
    OP_TIMES        [reduce using rule 36 (EXPR)]
    OP_DIVIDE       [reduce using rule 36 (EXPR)]
    OP_MOD          [reduce using rule 36 (EXPR)]
    OP_LOGICAL_OR   [reduce using rule 36 (EXPR)]
    OP_LOGICAL_AND  [reduce using rule 36 (EXPR)]
    OP_EQ_EQ        [reduce using rule 36 (EXPR)]
    OP_NEQ          [reduce using rule 36 (EXPR)]
    OP_LT           [reduce using rule 36 (EXPR)]
    OP_GT           [reduce using rule 36 (EXPR)]
    OP_LTE          [reduce using rule 36 (EXPR)]
    OP_GTE          [reduce using rule 36 (EXPR)]
    OP_EQ           [reduce using rule 36 (EXPR)]
    OP_PLUS_EQ      [reduce using rule 36 (EXPR)]
    OP_MINUS_EQ     [reduce using rule 36 (EXPR)]
    OP_TIMES_EQ     [reduce using rule 36 (EXPR)]
    OP_DIVIDE_EQ    [reduce using rule 36 (EXPR)]
    OP_MOD_EQ       [reduce using rule 36 (EXPR)]
    $default        reduce using rule 36 (EXPR)


State 74

   23 EXPR: EXPR . OP_PLUS EXPR
   24     | EXPR . OP_MINUS EXPR
   25     | EXPR . OP_TIMES EXPR
   26     | EXPR . OP_DIVIDE EXPR
   27     | EXPR . OP_MOD EXPR
   28     | EXPR . OP_LT EXPR
   29     | EXPR . OP_GT EXPR
   30     | EXPR . OP_LTE EXPR
   31     | EXPR . OP_GTE EXPR
   32     | EXPR . OP_EQ_EQ EXPR
   33     | EXPR . OP_NEQ EXPR
   35     | EXPR . OP_LOGICAL_AND EXPR
   35     | EXPR OP_LOGICAL_AND EXPR .
   36     | EXPR . OP_LOGICAL_OR EXPR
   37     | EXPR . OP_EQ EXPR
   38     | EXPR . OP_PLUS_EQ EXPR
   39     | EXPR . OP_MINUS_EQ EXPR
   40     | EXPR . OP_TIMES_EQ EXPR
   41     | EXPR . OP_DIVIDE_EQ EXPR
   42     | EXPR . OP_MOD_EQ EXPR

    OP_PLUS         shift, and go to state 38
    OP_MINUS        shift, and go to state 39
    OP_TIMES        shift, and go to state 40
    OP_DIVIDE       shift, and go to state 41
    OP_MOD          shift, and go to state 42
    OP_LOGICAL_OR   shift, and go to state 43
    OP_LOGICAL_AND  shift, and go to state 44
    OP_EQ_EQ        shift, and go to state 45
    OP_NEQ          shift, and go to state 46
    OP_LT           shift, and go to state 47
    OP_GT           shift, and go to state 48
    OP_LTE          shift, and go to state 49
    OP_GTE          shift, and go to state 50
    OP_EQ           shift, and go to state 51
    OP_PLUS_EQ      shift, and go to state 52
    OP_MINUS_EQ     shift, and go to state 53
    OP_TIMES_EQ     shift, and go to state 54
    OP_DIVIDE_EQ    shift, and go to state 55
    OP_MOD_EQ       shift, and go to state 56

    OP_PLUS         [reduce using rule 35 (EXPR)]
    OP_MINUS        [reduce using rule 35 (EXPR)]
    OP_TIMES        [reduce using rule 35 (EXPR)]
    OP_DIVIDE       [reduce using rule 35 (EXPR)]
    OP_MOD          [reduce using rule 35 (EXPR)]
    OP_LOGICAL_OR   [reduce using rule 35 (EXPR)]
    OP_LOGICAL_AND  [reduce using rule 35 (EXPR)]
    OP_EQ_EQ        [reduce using rule 35 (EXPR)]
    OP_NEQ          [reduce using rule 35 (EXPR)]
    OP_LT           [reduce using rule 35 (EXPR)]
    OP_GT           [reduce using rule 35 (EXPR)]
    OP_LTE          [reduce using rule 35 (EXPR)]
    OP_GTE          [reduce using rule 35 (EXPR)]
    OP_EQ           [reduce using rule 35 (EXPR)]
    OP_PLUS_EQ      [reduce using rule 35 (EXPR)]
    OP_MINUS_EQ     [reduce using rule 35 (EXPR)]
    OP_TIMES_EQ     [reduce using rule 35 (EXPR)]
    OP_DIVIDE_EQ    [reduce using rule 35 (EXPR)]
    OP_MOD_EQ       [reduce using rule 35 (EXPR)]
    $default        reduce using rule 35 (EXPR)


State 75

   23 EXPR: EXPR . OP_PLUS EXPR
   24     | EXPR . OP_MINUS EXPR
   25     | EXPR . OP_TIMES EXPR
   26     | EXPR . OP_DIVIDE EXPR
   27     | EXPR . OP_MOD EXPR
   28     | EXPR . OP_LT EXPR
   29     | EXPR . OP_GT EXPR
   30     | EXPR . OP_LTE EXPR
   31     | EXPR . OP_GTE EXPR
   32     | EXPR . OP_EQ_EQ EXPR
   32     | EXPR OP_EQ_EQ EXPR .
   33     | EXPR . OP_NEQ EXPR
   35     | EXPR . OP_LOGICAL_AND EXPR
   36     | EXPR . OP_LOGICAL_OR EXPR
   37     | EXPR . OP_EQ EXPR
   38     | EXPR . OP_PLUS_EQ EXPR
   39     | EXPR . OP_MINUS_EQ EXPR
   40     | EXPR . OP_TIMES_EQ EXPR
   41     | EXPR . OP_DIVIDE_EQ EXPR
   42     | EXPR . OP_MOD_EQ EXPR

    OP_PLUS         shift, and go to state 38
    OP_MINUS        shift, and go to state 39
    OP_TIMES        shift, and go to state 40
    OP_DIVIDE       shift, and go to state 41
    OP_MOD          shift, and go to state 42
    OP_LOGICAL_OR   shift, and go to state 43
    OP_LOGICAL_AND  shift, and go to state 44
    OP_EQ_EQ        shift, and go to state 45
    OP_NEQ          shift, and go to state 46
    OP_LT           shift, and go to state 47
    OP_GT           shift, and go to state 48
    OP_LTE          shift, and go to state 49
    OP_GTE          shift, and go to state 50
    OP_EQ           shift, and go to state 51
    OP_PLUS_EQ      shift, and go to state 52
    OP_MINUS_EQ     shift, and go to state 53
    OP_TIMES_EQ     shift, and go to state 54
    OP_DIVIDE_EQ    shift, and go to state 55
    OP_MOD_EQ       shift, and go to state 56

    OP_PLUS         [reduce using rule 32 (EXPR)]
    OP_MINUS        [reduce using rule 32 (EXPR)]
    OP_TIMES        [reduce using rule 32 (EXPR)]
    OP_DIVIDE       [reduce using rule 32 (EXPR)]
    OP_MOD          [reduce using rule 32 (EXPR)]
    OP_LOGICAL_OR   [reduce using rule 32 (EXPR)]
    OP_LOGICAL_AND  [reduce using rule 32 (EXPR)]
    OP_EQ_EQ        [reduce using rule 32 (EXPR)]
    OP_NEQ          [reduce using rule 32 (EXPR)]
    OP_LT           [reduce using rule 32 (EXPR)]
    OP_GT           [reduce using rule 32 (EXPR)]
    OP_LTE          [reduce using rule 32 (EXPR)]
    OP_GTE          [reduce using rule 32 (EXPR)]
    OP_EQ           [reduce using rule 32 (EXPR)]
    OP_PLUS_EQ      [reduce using rule 32 (EXPR)]
    OP_MINUS_EQ     [reduce using rule 32 (EXPR)]
    OP_TIMES_EQ     [reduce using rule 32 (EXPR)]
    OP_DIVIDE_EQ    [reduce using rule 32 (EXPR)]
    OP_MOD_EQ       [reduce using rule 32 (EXPR)]
    $default        reduce using rule 32 (EXPR)


State 76

   23 EXPR: EXPR . OP_PLUS EXPR
   24     | EXPR . OP_MINUS EXPR
   25     | EXPR . OP_TIMES EXPR
   26     | EXPR . OP_DIVIDE EXPR
   27     | EXPR . OP_MOD EXPR
   28     | EXPR . OP_LT EXPR
   29     | EXPR . OP_GT EXPR
   30     | EXPR . OP_LTE EXPR
   31     | EXPR . OP_GTE EXPR
   32     | EXPR . OP_EQ_EQ EXPR
   33     | EXPR . OP_NEQ EXPR
   33     | EXPR OP_NEQ EXPR .
   35     | EXPR . OP_LOGICAL_AND EXPR
   36     | EXPR . OP_LOGICAL_OR EXPR
   37     | EXPR . OP_EQ EXPR
   38     | EXPR . OP_PLUS_EQ EXPR
   39     | EXPR . OP_MINUS_EQ EXPR
   40     | EXPR . OP_TIMES_EQ EXPR
   41     | EXPR . OP_DIVIDE_EQ EXPR
   42     | EXPR . OP_MOD_EQ EXPR

    OP_PLUS         shift, and go to state 38
    OP_MINUS        shift, and go to state 39
    OP_TIMES        shift, and go to state 40
    OP_DIVIDE       shift, and go to state 41
    OP_MOD          shift, and go to state 42
    OP_LOGICAL_OR   shift, and go to state 43
    OP_LOGICAL_AND  shift, and go to state 44
    OP_EQ_EQ        shift, and go to state 45
    OP_NEQ          shift, and go to state 46
    OP_LT           shift, and go to state 47
    OP_GT           shift, and go to state 48
    OP_LTE          shift, and go to state 49
    OP_GTE          shift, and go to state 50
    OP_EQ           shift, and go to state 51
    OP_PLUS_EQ      shift, and go to state 52
    OP_MINUS_EQ     shift, and go to state 53
    OP_TIMES_EQ     shift, and go to state 54
    OP_DIVIDE_EQ    shift, and go to state 55
    OP_MOD_EQ       shift, and go to state 56

    OP_PLUS         [reduce using rule 33 (EXPR)]
    OP_MINUS        [reduce using rule 33 (EXPR)]
    OP_TIMES        [reduce using rule 33 (EXPR)]
    OP_DIVIDE       [reduce using rule 33 (EXPR)]
    OP_MOD          [reduce using rule 33 (EXPR)]
    OP_LOGICAL_OR   [reduce using rule 33 (EXPR)]
    OP_LOGICAL_AND  [reduce using rule 33 (EXPR)]
    OP_EQ_EQ        [reduce using rule 33 (EXPR)]
    OP_NEQ          [reduce using rule 33 (EXPR)]
    OP_LT           [reduce using rule 33 (EXPR)]
    OP_GT           [reduce using rule 33 (EXPR)]
    OP_LTE          [reduce using rule 33 (EXPR)]
    OP_GTE          [reduce using rule 33 (EXPR)]
    OP_EQ           [reduce using rule 33 (EXPR)]
    OP_PLUS_EQ      [reduce using rule 33 (EXPR)]
    OP_MINUS_EQ     [reduce using rule 33 (EXPR)]
    OP_TIMES_EQ     [reduce using rule 33 (EXPR)]
    OP_DIVIDE_EQ    [reduce using rule 33 (EXPR)]
    OP_MOD_EQ       [reduce using rule 33 (EXPR)]
    $default        reduce using rule 33 (EXPR)


State 77

   23 EXPR: EXPR . OP_PLUS EXPR
   24     | EXPR . OP_MINUS EXPR
   25     | EXPR . OP_TIMES EXPR
   26     | EXPR . OP_DIVIDE EXPR
   27     | EXPR . OP_MOD EXPR
   28     | EXPR . OP_LT EXPR
   28     | EXPR OP_LT EXPR .
   29     | EXPR . OP_GT EXPR
   30     | EXPR . OP_LTE EXPR
   31     | EXPR . OP_GTE EXPR
   32     | EXPR . OP_EQ_EQ EXPR
   33     | EXPR . OP_NEQ EXPR
   35     | EXPR . OP_LOGICAL_AND EXPR
   36     | EXPR . OP_LOGICAL_OR EXPR
   37     | EXPR . OP_EQ EXPR
   38     | EXPR . OP_PLUS_EQ EXPR
   39     | EXPR . OP_MINUS_EQ EXPR
   40     | EXPR . OP_TIMES_EQ EXPR
   41     | EXPR . OP_DIVIDE_EQ EXPR
   42     | EXPR . OP_MOD_EQ EXPR

    OP_PLUS         shift, and go to state 38
    OP_MINUS        shift, and go to state 39
    OP_TIMES        shift, and go to state 40
    OP_DIVIDE       shift, and go to state 41
    OP_MOD          shift, and go to state 42
    OP_LOGICAL_OR   shift, and go to state 43
    OP_LOGICAL_AND  shift, and go to state 44
    OP_EQ_EQ        shift, and go to state 45
    OP_NEQ          shift, and go to state 46
    OP_LT           shift, and go to state 47
    OP_GT           shift, and go to state 48
    OP_LTE          shift, and go to state 49
    OP_GTE          shift, and go to state 50
    OP_EQ           shift, and go to state 51
    OP_PLUS_EQ      shift, and go to state 52
    OP_MINUS_EQ     shift, and go to state 53
    OP_TIMES_EQ     shift, and go to state 54
    OP_DIVIDE_EQ    shift, and go to state 55
    OP_MOD_EQ       shift, and go to state 56

    OP_PLUS         [reduce using rule 28 (EXPR)]
    OP_MINUS        [reduce using rule 28 (EXPR)]
    OP_TIMES        [reduce using rule 28 (EXPR)]
    OP_DIVIDE       [reduce using rule 28 (EXPR)]
    OP_MOD          [reduce using rule 28 (EXPR)]
    OP_LOGICAL_OR   [reduce using rule 28 (EXPR)]
    OP_LOGICAL_AND  [reduce using rule 28 (EXPR)]
    OP_EQ_EQ        [reduce using rule 28 (EXPR)]
    OP_NEQ          [reduce using rule 28 (EXPR)]
    OP_LT           [reduce using rule 28 (EXPR)]
    OP_GT           [reduce using rule 28 (EXPR)]
    OP_LTE          [reduce using rule 28 (EXPR)]
    OP_GTE          [reduce using rule 28 (EXPR)]
    OP_EQ           [reduce using rule 28 (EXPR)]
    OP_PLUS_EQ      [reduce using rule 28 (EXPR)]
    OP_MINUS_EQ     [reduce using rule 28 (EXPR)]
    OP_TIMES_EQ     [reduce using rule 28 (EXPR)]
    OP_DIVIDE_EQ    [reduce using rule 28 (EXPR)]
    OP_MOD_EQ       [reduce using rule 28 (EXPR)]
    $default        reduce using rule 28 (EXPR)


State 78

   23 EXPR: EXPR . OP_PLUS EXPR
   24     | EXPR . OP_MINUS EXPR
   25     | EXPR . OP_TIMES EXPR
   26     | EXPR . OP_DIVIDE EXPR
   27     | EXPR . OP_MOD EXPR
   28     | EXPR . OP_LT EXPR
   29     | EXPR . OP_GT EXPR
   29     | EXPR OP_GT EXPR .
   30     | EXPR . OP_LTE EXPR
   31     | EXPR . OP_GTE EXPR
   32     | EXPR . OP_EQ_EQ EXPR
   33     | EXPR . OP_NEQ EXPR
   35     | EXPR . OP_LOGICAL_AND EXPR
   36     | EXPR . OP_LOGICAL_OR EXPR
   37     | EXPR . OP_EQ EXPR
   38     | EXPR . OP_PLUS_EQ EXPR
   39     | EXPR . OP_MINUS_EQ EXPR
   40     | EXPR . OP_TIMES_EQ EXPR
   41     | EXPR . OP_DIVIDE_EQ EXPR
   42     | EXPR . OP_MOD_EQ EXPR

    OP_PLUS         shift, and go to state 38
    OP_MINUS        shift, and go to state 39
    OP_TIMES        shift, and go to state 40
    OP_DIVIDE       shift, and go to state 41
    OP_MOD          shift, and go to state 42
    OP_LOGICAL_OR   shift, and go to state 43
    OP_LOGICAL_AND  shift, and go to state 44
    OP_EQ_EQ        shift, and go to state 45
    OP_NEQ          shift, and go to state 46
    OP_LT           shift, and go to state 47
    OP_GT           shift, and go to state 48
    OP_LTE          shift, and go to state 49
    OP_GTE          shift, and go to state 50
    OP_EQ           shift, and go to state 51
    OP_PLUS_EQ      shift, and go to state 52
    OP_MINUS_EQ     shift, and go to state 53
    OP_TIMES_EQ     shift, and go to state 54
    OP_DIVIDE_EQ    shift, and go to state 55
    OP_MOD_EQ       shift, and go to state 56

    OP_PLUS         [reduce using rule 29 (EXPR)]
    OP_MINUS        [reduce using rule 29 (EXPR)]
    OP_TIMES        [reduce using rule 29 (EXPR)]
    OP_DIVIDE       [reduce using rule 29 (EXPR)]
    OP_MOD          [reduce using rule 29 (EXPR)]
    OP_LOGICAL_OR   [reduce using rule 29 (EXPR)]
    OP_LOGICAL_AND  [reduce using rule 29 (EXPR)]
    OP_EQ_EQ        [reduce using rule 29 (EXPR)]
    OP_NEQ          [reduce using rule 29 (EXPR)]
    OP_LT           [reduce using rule 29 (EXPR)]
    OP_GT           [reduce using rule 29 (EXPR)]
    OP_LTE          [reduce using rule 29 (EXPR)]
    OP_GTE          [reduce using rule 29 (EXPR)]
    OP_EQ           [reduce using rule 29 (EXPR)]
    OP_PLUS_EQ      [reduce using rule 29 (EXPR)]
    OP_MINUS_EQ     [reduce using rule 29 (EXPR)]
    OP_TIMES_EQ     [reduce using rule 29 (EXPR)]
    OP_DIVIDE_EQ    [reduce using rule 29 (EXPR)]
    OP_MOD_EQ       [reduce using rule 29 (EXPR)]
    $default        reduce using rule 29 (EXPR)


State 79

   23 EXPR: EXPR . OP_PLUS EXPR
   24     | EXPR . OP_MINUS EXPR
   25     | EXPR . OP_TIMES EXPR
   26     | EXPR . OP_DIVIDE EXPR
   27     | EXPR . OP_MOD EXPR
   28     | EXPR . OP_LT EXPR
   29     | EXPR . OP_GT EXPR
   30     | EXPR . OP_LTE EXPR
   30     | EXPR OP_LTE EXPR .
   31     | EXPR . OP_GTE EXPR
   32     | EXPR . OP_EQ_EQ EXPR
   33     | EXPR . OP_NEQ EXPR
   35     | EXPR . OP_LOGICAL_AND EXPR
   36     | EXPR . OP_LOGICAL_OR EXPR
   37     | EXPR . OP_EQ EXPR
   38     | EXPR . OP_PLUS_EQ EXPR
   39     | EXPR . OP_MINUS_EQ EXPR
   40     | EXPR . OP_TIMES_EQ EXPR
   41     | EXPR . OP_DIVIDE_EQ EXPR
   42     | EXPR . OP_MOD_EQ EXPR

    OP_PLUS         shift, and go to state 38
    OP_MINUS        shift, and go to state 39
    OP_TIMES        shift, and go to state 40
    OP_DIVIDE       shift, and go to state 41
    OP_MOD          shift, and go to state 42
    OP_LOGICAL_OR   shift, and go to state 43
    OP_LOGICAL_AND  shift, and go to state 44
    OP_EQ_EQ        shift, and go to state 45
    OP_NEQ          shift, and go to state 46
    OP_LT           shift, and go to state 47
    OP_GT           shift, and go to state 48
    OP_LTE          shift, and go to state 49
    OP_GTE          shift, and go to state 50
    OP_EQ           shift, and go to state 51
    OP_PLUS_EQ      shift, and go to state 52
    OP_MINUS_EQ     shift, and go to state 53
    OP_TIMES_EQ     shift, and go to state 54
    OP_DIVIDE_EQ    shift, and go to state 55
    OP_MOD_EQ       shift, and go to state 56

    OP_PLUS         [reduce using rule 30 (EXPR)]
    OP_MINUS        [reduce using rule 30 (EXPR)]
    OP_TIMES        [reduce using rule 30 (EXPR)]
    OP_DIVIDE       [reduce using rule 30 (EXPR)]
    OP_MOD          [reduce using rule 30 (EXPR)]
    OP_LOGICAL_OR   [reduce using rule 30 (EXPR)]
    OP_LOGICAL_AND  [reduce using rule 30 (EXPR)]
    OP_EQ_EQ        [reduce using rule 30 (EXPR)]
    OP_NEQ          [reduce using rule 30 (EXPR)]
    OP_LT           [reduce using rule 30 (EXPR)]
    OP_GT           [reduce using rule 30 (EXPR)]
    OP_LTE          [reduce using rule 30 (EXPR)]
    OP_GTE          [reduce using rule 30 (EXPR)]
    OP_EQ           [reduce using rule 30 (EXPR)]
    OP_PLUS_EQ      [reduce using rule 30 (EXPR)]
    OP_MINUS_EQ     [reduce using rule 30 (EXPR)]
    OP_TIMES_EQ     [reduce using rule 30 (EXPR)]
    OP_DIVIDE_EQ    [reduce using rule 30 (EXPR)]
    OP_MOD_EQ       [reduce using rule 30 (EXPR)]
    $default        reduce using rule 30 (EXPR)


State 80

   23 EXPR: EXPR . OP_PLUS EXPR
   24     | EXPR . OP_MINUS EXPR
   25     | EXPR . OP_TIMES EXPR
   26     | EXPR . OP_DIVIDE EXPR
   27     | EXPR . OP_MOD EXPR
   28     | EXPR . OP_LT EXPR
   29     | EXPR . OP_GT EXPR
   30     | EXPR . OP_LTE EXPR
   31     | EXPR . OP_GTE EXPR
   31     | EXPR OP_GTE EXPR .
   32     | EXPR . OP_EQ_EQ EXPR
   33     | EXPR . OP_NEQ EXPR
   35     | EXPR . OP_LOGICAL_AND EXPR
   36     | EXPR . OP_LOGICAL_OR EXPR
   37     | EXPR . OP_EQ EXPR
   38     | EXPR . OP_PLUS_EQ EXPR
   39     | EXPR . OP_MINUS_EQ EXPR
   40     | EXPR . OP_TIMES_EQ EXPR
   41     | EXPR . OP_DIVIDE_EQ EXPR
   42     | EXPR . OP_MOD_EQ EXPR

    OP_PLUS         shift, and go to state 38
    OP_MINUS        shift, and go to state 39
    OP_TIMES        shift, and go to state 40
    OP_DIVIDE       shift, and go to state 41
    OP_MOD          shift, and go to state 42
    OP_LOGICAL_OR   shift, and go to state 43
    OP_LOGICAL_AND  shift, and go to state 44
    OP_EQ_EQ        shift, and go to state 45
    OP_NEQ          shift, and go to state 46
    OP_LT           shift, and go to state 47
    OP_GT           shift, and go to state 48
    OP_LTE          shift, and go to state 49
    OP_GTE          shift, and go to state 50
    OP_EQ           shift, and go to state 51
    OP_PLUS_EQ      shift, and go to state 52
    OP_MINUS_EQ     shift, and go to state 53
    OP_TIMES_EQ     shift, and go to state 54
    OP_DIVIDE_EQ    shift, and go to state 55
    OP_MOD_EQ       shift, and go to state 56

    OP_PLUS         [reduce using rule 31 (EXPR)]
    OP_MINUS        [reduce using rule 31 (EXPR)]
    OP_TIMES        [reduce using rule 31 (EXPR)]
    OP_DIVIDE       [reduce using rule 31 (EXPR)]
    OP_MOD          [reduce using rule 31 (EXPR)]
    OP_LOGICAL_OR   [reduce using rule 31 (EXPR)]
    OP_LOGICAL_AND  [reduce using rule 31 (EXPR)]
    OP_EQ_EQ        [reduce using rule 31 (EXPR)]
    OP_NEQ          [reduce using rule 31 (EXPR)]
    OP_LT           [reduce using rule 31 (EXPR)]
    OP_GT           [reduce using rule 31 (EXPR)]
    OP_LTE          [reduce using rule 31 (EXPR)]
    OP_GTE          [reduce using rule 31 (EXPR)]
    OP_EQ           [reduce using rule 31 (EXPR)]
    OP_PLUS_EQ      [reduce using rule 31 (EXPR)]
    OP_MINUS_EQ     [reduce using rule 31 (EXPR)]
    OP_TIMES_EQ     [reduce using rule 31 (EXPR)]
    OP_DIVIDE_EQ    [reduce using rule 31 (EXPR)]
    OP_MOD_EQ       [reduce using rule 31 (EXPR)]
    $default        reduce using rule 31 (EXPR)


State 81

   23 EXPR: EXPR . OP_PLUS EXPR
   24     | EXPR . OP_MINUS EXPR
   25     | EXPR . OP_TIMES EXPR
   26     | EXPR . OP_DIVIDE EXPR
   27     | EXPR . OP_MOD EXPR
   28     | EXPR . OP_LT EXPR
   29     | EXPR . OP_GT EXPR
   30     | EXPR . OP_LTE EXPR
   31     | EXPR . OP_GTE EXPR
   32     | EXPR . OP_EQ_EQ EXPR
   33     | EXPR . OP_NEQ EXPR
   35     | EXPR . OP_LOGICAL_AND EXPR
   36     | EXPR . OP_LOGICAL_OR EXPR
   37     | EXPR . OP_EQ EXPR
   37     | EXPR OP_EQ EXPR .
   38     | EXPR . OP_PLUS_EQ EXPR
   39     | EXPR . OP_MINUS_EQ EXPR
   40     | EXPR . OP_TIMES_EQ EXPR
   41     | EXPR . OP_DIVIDE_EQ EXPR
   42     | EXPR . OP_MOD_EQ EXPR

    OP_PLUS         shift, and go to state 38
    OP_MINUS        shift, and go to state 39
    OP_TIMES        shift, and go to state 40
    OP_DIVIDE       shift, and go to state 41
    OP_MOD          shift, and go to state 42
    OP_LOGICAL_OR   shift, and go to state 43
    OP_LOGICAL_AND  shift, and go to state 44
    OP_EQ_EQ        shift, and go to state 45
    OP_NEQ          shift, and go to state 46
    OP_LT           shift, and go to state 47
    OP_GT           shift, and go to state 48
    OP_LTE          shift, and go to state 49
    OP_GTE          shift, and go to state 50
    OP_EQ           shift, and go to state 51

    OP_LOGICAL_OR   [reduce using rule 37 (EXPR)]
    OP_LOGICAL_AND  [reduce using rule 37 (EXPR)]
    OP_EQ_EQ        [reduce using rule 37 (EXPR)]
    OP_NEQ          [reduce using rule 37 (EXPR)]
    OP_LT           [reduce using rule 37 (EXPR)]
    OP_GT           [reduce using rule 37 (EXPR)]
    OP_LTE          [reduce using rule 37 (EXPR)]
    OP_GTE          [reduce using rule 37 (EXPR)]
    $default        reduce using rule 37 (EXPR)


State 82

   23 EXPR: EXPR . OP_PLUS EXPR
   24     | EXPR . OP_MINUS EXPR
   25     | EXPR . OP_TIMES EXPR
   26     | EXPR . OP_DIVIDE EXPR
   27     | EXPR . OP_MOD EXPR
   28     | EXPR . OP_LT EXPR
   29     | EXPR . OP_GT EXPR
   30     | EXPR . OP_LTE EXPR
   31     | EXPR . OP_GTE EXPR
   32     | EXPR . OP_EQ_EQ EXPR
   33     | EXPR . OP_NEQ EXPR
   35     | EXPR . OP_LOGICAL_AND EXPR
   36     | EXPR . OP_LOGICAL_OR EXPR
   37     | EXPR . OP_EQ EXPR
   38     | EXPR . OP_PLUS_EQ EXPR
   38     | EXPR OP_PLUS_EQ EXPR .
   39     | EXPR . OP_MINUS_EQ EXPR
   40     | EXPR . OP_TIMES_EQ EXPR
   41     | EXPR . OP_DIVIDE_EQ EXPR
   42     | EXPR . OP_MOD_EQ EXPR

    OP_PLUS         shift, and go to state 38
    OP_MINUS        shift, and go to state 39
    OP_TIMES        shift, and go to state 40
    OP_DIVIDE       shift, and go to state 41
    OP_MOD          shift, and go to state 42
    OP_LOGICAL_OR   shift, and go to state 43
    OP_LOGICAL_AND  shift, and go to state 44
    OP_EQ_EQ        shift, and go to state 45
    OP_NEQ          shift, and go to state 46
    OP_LT           shift, and go to state 47
    OP_GT           shift, and go to state 48
    OP_LTE          shift, and go to state 49
    OP_GTE          shift, and go to state 50
    OP_EQ           shift, and go to state 51
    OP_PLUS_EQ      shift, and go to state 52
    OP_MINUS_EQ     shift, and go to state 53

    OP_LOGICAL_OR   [reduce using rule 38 (EXPR)]
    OP_LOGICAL_AND  [reduce using rule 38 (EXPR)]
    OP_EQ_EQ        [reduce using rule 38 (EXPR)]
    OP_NEQ          [reduce using rule 38 (EXPR)]
    OP_LT           [reduce using rule 38 (EXPR)]
    OP_GT           [reduce using rule 38 (EXPR)]
    OP_LTE          [reduce using rule 38 (EXPR)]
    OP_GTE          [reduce using rule 38 (EXPR)]
    $default        reduce using rule 38 (EXPR)


State 83

   23 EXPR: EXPR . OP_PLUS EXPR
   24     | EXPR . OP_MINUS EXPR
   25     | EXPR . OP_TIMES EXPR
   26     | EXPR . OP_DIVIDE EXPR
   27     | EXPR . OP_MOD EXPR
   28     | EXPR . OP_LT EXPR
   29     | EXPR . OP_GT EXPR
   30     | EXPR . OP_LTE EXPR
   31     | EXPR . OP_GTE EXPR
   32     | EXPR . OP_EQ_EQ EXPR
   33     | EXPR . OP_NEQ EXPR
   35     | EXPR . OP_LOGICAL_AND EXPR
   36     | EXPR . OP_LOGICAL_OR EXPR
   37     | EXPR . OP_EQ EXPR
   38     | EXPR . OP_PLUS_EQ EXPR
   39     | EXPR . OP_MINUS_EQ EXPR
   39     | EXPR OP_MINUS_EQ EXPR .
   40     | EXPR . OP_TIMES_EQ EXPR
   41     | EXPR . OP_DIVIDE_EQ EXPR
   42     | EXPR . OP_MOD_EQ EXPR

    OP_PLUS         shift, and go to state 38
    OP_MINUS        shift, and go to state 39
    OP_TIMES        shift, and go to state 40
    OP_DIVIDE       shift, and go to state 41
    OP_MOD          shift, and go to state 42
    OP_LOGICAL_OR   shift, and go to state 43
    OP_LOGICAL_AND  shift, and go to state 44
    OP_EQ_EQ        shift, and go to state 45
    OP_NEQ          shift, and go to state 46
    OP_LT           shift, and go to state 47
    OP_GT           shift, and go to state 48
    OP_LTE          shift, and go to state 49
    OP_GTE          shift, and go to state 50
    OP_EQ           shift, and go to state 51
    OP_PLUS_EQ      shift, and go to state 52
    OP_MINUS_EQ     shift, and go to state 53

    OP_LOGICAL_OR   [reduce using rule 39 (EXPR)]
    OP_LOGICAL_AND  [reduce using rule 39 (EXPR)]
    OP_EQ_EQ        [reduce using rule 39 (EXPR)]
    OP_NEQ          [reduce using rule 39 (EXPR)]
    OP_LT           [reduce using rule 39 (EXPR)]
    OP_GT           [reduce using rule 39 (EXPR)]
    OP_LTE          [reduce using rule 39 (EXPR)]
    OP_GTE          [reduce using rule 39 (EXPR)]
    $default        reduce using rule 39 (EXPR)


State 84

   23 EXPR: EXPR . OP_PLUS EXPR
   24     | EXPR . OP_MINUS EXPR
   25     | EXPR . OP_TIMES EXPR
   26     | EXPR . OP_DIVIDE EXPR
   27     | EXPR . OP_MOD EXPR
   28     | EXPR . OP_LT EXPR
   29     | EXPR . OP_GT EXPR
   30     | EXPR . OP_LTE EXPR
   31     | EXPR . OP_GTE EXPR
   32     | EXPR . OP_EQ_EQ EXPR
   33     | EXPR . OP_NEQ EXPR
   35     | EXPR . OP_LOGICAL_AND EXPR
   36     | EXPR . OP_LOGICAL_OR EXPR
   37     | EXPR . OP_EQ EXPR
   38     | EXPR . OP_PLUS_EQ EXPR
   39     | EXPR . OP_MINUS_EQ EXPR
   40     | EXPR . OP_TIMES_EQ EXPR
   40     | EXPR OP_TIMES_EQ EXPR .
   41     | EXPR . OP_DIVIDE_EQ EXPR
   42     | EXPR . OP_MOD_EQ EXPR

    OP_PLUS         shift, and go to state 38
    OP_MINUS        shift, and go to state 39
    OP_TIMES        shift, and go to state 40
    OP_DIVIDE       shift, and go to state 41
    OP_MOD          shift, and go to state 42
    OP_LOGICAL_OR   shift, and go to state 43
    OP_LOGICAL_AND  shift, and go to state 44
    OP_EQ_EQ        shift, and go to state 45
    OP_NEQ          shift, and go to state 46
    OP_LT           shift, and go to state 47
    OP_GT           shift, and go to state 48
    OP_LTE          shift, and go to state 49
    OP_GTE          shift, and go to state 50
    OP_EQ           shift, and go to state 51
    OP_PLUS_EQ      shift, and go to state 52
    OP_MINUS_EQ     shift, and go to state 53
    OP_TIMES_EQ     shift, and go to state 54
    OP_DIVIDE_EQ    shift, and go to state 55
    OP_MOD_EQ       shift, and go to state 56

    OP_LOGICAL_OR   [reduce using rule 40 (EXPR)]
    OP_LOGICAL_AND  [reduce using rule 40 (EXPR)]
    OP_EQ_EQ        [reduce using rule 40 (EXPR)]
    OP_NEQ          [reduce using rule 40 (EXPR)]
    OP_LT           [reduce using rule 40 (EXPR)]
    OP_GT           [reduce using rule 40 (EXPR)]
    OP_LTE          [reduce using rule 40 (EXPR)]
    OP_GTE          [reduce using rule 40 (EXPR)]
    $default        reduce using rule 40 (EXPR)


State 85

   23 EXPR: EXPR . OP_PLUS EXPR
   24     | EXPR . OP_MINUS EXPR
   25     | EXPR . OP_TIMES EXPR
   26     | EXPR . OP_DIVIDE EXPR
   27     | EXPR . OP_MOD EXPR
   28     | EXPR . OP_LT EXPR
   29     | EXPR . OP_GT EXPR
   30     | EXPR . OP_LTE EXPR
   31     | EXPR . OP_GTE EXPR
   32     | EXPR . OP_EQ_EQ EXPR
   33     | EXPR . OP_NEQ EXPR
   35     | EXPR . OP_LOGICAL_AND EXPR
   36     | EXPR . OP_LOGICAL_OR EXPR
   37     | EXPR . OP_EQ EXPR
   38     | EXPR . OP_PLUS_EQ EXPR
   39     | EXPR . OP_MINUS_EQ EXPR
   40     | EXPR . OP_TIMES_EQ EXPR
   41     | EXPR . OP_DIVIDE_EQ EXPR
   41     | EXPR OP_DIVIDE_EQ EXPR .
   42     | EXPR . OP_MOD_EQ EXPR

    OP_PLUS         shift, and go to state 38
    OP_MINUS        shift, and go to state 39
    OP_TIMES        shift, and go to state 40
    OP_DIVIDE       shift, and go to state 41
    OP_MOD          shift, and go to state 42
    OP_LOGICAL_OR   shift, and go to state 43
    OP_LOGICAL_AND  shift, and go to state 44
    OP_EQ_EQ        shift, and go to state 45
    OP_NEQ          shift, and go to state 46
    OP_LT           shift, and go to state 47
    OP_GT           shift, and go to state 48
    OP_LTE          shift, and go to state 49
    OP_GTE          shift, and go to state 50
    OP_EQ           shift, and go to state 51
    OP_PLUS_EQ      shift, and go to state 52
    OP_MINUS_EQ     shift, and go to state 53
    OP_TIMES_EQ     shift, and go to state 54
    OP_DIVIDE_EQ    shift, and go to state 55
    OP_MOD_EQ       shift, and go to state 56

    OP_LOGICAL_OR   [reduce using rule 41 (EXPR)]
    OP_LOGICAL_AND  [reduce using rule 41 (EXPR)]
    OP_EQ_EQ        [reduce using rule 41 (EXPR)]
    OP_NEQ          [reduce using rule 41 (EXPR)]
    OP_LT           [reduce using rule 41 (EXPR)]
    OP_GT           [reduce using rule 41 (EXPR)]
    OP_LTE          [reduce using rule 41 (EXPR)]
    OP_GTE          [reduce using rule 41 (EXPR)]
    $default        reduce using rule 41 (EXPR)


State 86

   23 EXPR: EXPR . OP_PLUS EXPR
   24     | EXPR . OP_MINUS EXPR
   25     | EXPR . OP_TIMES EXPR
   26     | EXPR . OP_DIVIDE EXPR
   27     | EXPR . OP_MOD EXPR
   28     | EXPR . OP_LT EXPR
   29     | EXPR . OP_GT EXPR
   30     | EXPR . OP_LTE EXPR
   31     | EXPR . OP_GTE EXPR
   32     | EXPR . OP_EQ_EQ EXPR
   33     | EXPR . OP_NEQ EXPR
   35     | EXPR . OP_LOGICAL_AND EXPR
   36     | EXPR . OP_LOGICAL_OR EXPR
   37     | EXPR . OP_EQ EXPR
   38     | EXPR . OP_PLUS_EQ EXPR
   39     | EXPR . OP_MINUS_EQ EXPR
   40     | EXPR . OP_TIMES_EQ EXPR
   41     | EXPR . OP_DIVIDE_EQ EXPR
   42     | EXPR . OP_MOD_EQ EXPR
   42     | EXPR OP_MOD_EQ EXPR .

    OP_PLUS         shift, and go to state 38
    OP_MINUS        shift, and go to state 39
    OP_TIMES        shift, and go to state 40
    OP_DIVIDE       shift, and go to state 41
    OP_MOD          shift, and go to state 42
    OP_LOGICAL_OR   shift, and go to state 43
    OP_LOGICAL_AND  shift, and go to state 44
    OP_EQ_EQ        shift, and go to state 45
    OP_NEQ          shift, and go to state 46
    OP_LT           shift, and go to state 47
    OP_GT           shift, and go to state 48
    OP_LTE          shift, and go to state 49
    OP_GTE          shift, and go to state 50
    OP_EQ           shift, and go to state 51
    OP_PLUS_EQ      shift, and go to state 52
    OP_MINUS_EQ     shift, and go to state 53
    OP_TIMES_EQ     shift, and go to state 54
    OP_DIVIDE_EQ    shift, and go to state 55
    OP_MOD_EQ       shift, and go to state 56

    OP_LOGICAL_OR   [reduce using rule 42 (EXPR)]
    OP_LOGICAL_AND  [reduce using rule 42 (EXPR)]
    OP_EQ_EQ        [reduce using rule 42 (EXPR)]
    OP_NEQ          [reduce using rule 42 (EXPR)]
    OP_LT           [reduce using rule 42 (EXPR)]
    OP_GT           [reduce using rule 42 (EXPR)]
    OP_LTE          [reduce using rule 42 (EXPR)]
    OP_GTE          [reduce using rule 42 (EXPR)]
    $default        reduce using rule 42 (EXPR)


State 87

    7 FUNC_DEF: TYPE_SPECIFIER T_IDENTIFIER OP_LBRACKET T_VOID OP_RBRACKET COMPND_STATMNT .

    $default  reduce using rule 7 (FUNC_DEF)


State 88

   51 JUMP_STATMNT: ST_BREAK .

    $default  reduce using rule 51 (JUMP_STATMNT)


State 89

   52 JUMP_STATMNT: ST_CONTINUE .

    $default  reduce using rule 52 (JUMP_STATMNT)


State 90

   53 JUMP_STATMNT: ST_RETURN . EXPR
   54             | ST_RETURN .

    OP_LOGICAL_NOT  shift, and go to state 23
    OP_LBRACKET     shift, and go to state 24
    T_NUMBER        shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_IDENTIFIER    shift, and go to state 27

    $default  reduce using rule 54 (JUMP_STATMNT)

    EXPR          go to state 106
    PRIMARY_EXPR  go to state 29


State 91

   55 SELECTION_STATMNT: ST_IF . OP_LBRACKET EXPR OP_RBRACKET STATMNT
   56                  | ST_IF . OP_LBRACKET EXPR OP_RBRACKET STATMNT ST_ELSE STATMNT

    OP_LBRACKET  shift, and go to state 107


State 92

   57 SELECTION_STATMNT: ST_WHILE . OP_LBRACKET EXPR OP_RBRACKET STATMNT

    OP_LBRACKET  shift, and go to state 108


State 93

   12 COMPND_STATMNT: T_LBRACE T_RBRACE .

    $default  reduce using rule 12 (COMPND_STATMNT)


State 94

   19 STATMNT: COMPND_STATMNT .

    $default  reduce using rule 19 (STATMNT)


State 95

   13 COMPND_STATMNT: T_LBRACE BLOCK_ITEM_LIST . T_RBRACE
   16 BLOCK_ITEM_LIST: BLOCK_ITEM_LIST . STATMNT
   17                | BLOCK_ITEM_LIST . DECLARATION

    ST_BREAK        shift, and go to state 88
    ST_CONTINUE     shift, and go to state 89
    ST_RETURN       shift, and go to state 90
    ST_IF           shift, and go to state 91
    ST_WHILE        shift, and go to state 92
    T_VOID          shift, and go to state 1
    T_BOOL          shift, and go to state 2
    T_SIGNED        shift, and go to state 3
    T_UNSIGNED      shift, and go to state 4
    T_CHAR          shift, and go to state 5
    T_INT           shift, and go to state 6
    T_SHORT         shift, and go to state 7
    T_LONG          shift, and go to state 8
    T_FLOAT         shift, and go to state 9
    T_DOUBLE        shift, and go to state 10
    OP_LOGICAL_NOT  shift, and go to state 23
    OP_LBRACKET     shift, and go to state 24
    T_LBRACE        shift, and go to state 59
    T_RBRACE        shift, and go to state 109
    T_NUMBER        shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_IDENTIFIER    shift, and go to state 27

    COMPND_STATMNT     go to state 94
    STATMNT            go to state 110
    EXPR               go to state 97
    PRIMARY_EXPR       go to state 29
    JUMP_STATMNT       go to state 98
    SELECTION_STATMNT  go to state 99
    TYPE_SPECIFIER     go to state 100
    DECLARATION        go to state 111


State 96

   14 BLOCK_ITEM_LIST: STATMNT .

    $default  reduce using rule 14 (BLOCK_ITEM_LIST)


State 97

   18 STATMNT: EXPR . T_SEMICOLON
   23 EXPR: EXPR . OP_PLUS EXPR
   24     | EXPR . OP_MINUS EXPR
   25     | EXPR . OP_TIMES EXPR
   26     | EXPR . OP_DIVIDE EXPR
   27     | EXPR . OP_MOD EXPR
   28     | EXPR . OP_LT EXPR
   29     | EXPR . OP_GT EXPR
   30     | EXPR . OP_LTE EXPR
   31     | EXPR . OP_GTE EXPR
   32     | EXPR . OP_EQ_EQ EXPR
   33     | EXPR . OP_NEQ EXPR
   35     | EXPR . OP_LOGICAL_AND EXPR
   36     | EXPR . OP_LOGICAL_OR EXPR
   37     | EXPR . OP_EQ EXPR
   38     | EXPR . OP_PLUS_EQ EXPR
   39     | EXPR . OP_MINUS_EQ EXPR
   40     | EXPR . OP_TIMES_EQ EXPR
   41     | EXPR . OP_DIVIDE_EQ EXPR
   42     | EXPR . OP_MOD_EQ EXPR

    OP_PLUS         shift, and go to state 38
    OP_MINUS        shift, and go to state 39
    OP_TIMES        shift, and go to state 40
    OP_DIVIDE       shift, and go to state 41
    OP_MOD          shift, and go to state 42
    OP_LOGICAL_OR   shift, and go to state 43
    OP_LOGICAL_AND  shift, and go to state 44
    OP_EQ_EQ        shift, and go to state 45
    OP_NEQ          shift, and go to state 46
    OP_LT           shift, and go to state 47
    OP_GT           shift, and go to state 48
    OP_LTE          shift, and go to state 49
    OP_GTE          shift, and go to state 50
    OP_EQ           shift, and go to state 51
    OP_PLUS_EQ      shift, and go to state 52
    OP_MINUS_EQ     shift, and go to state 53
    OP_TIMES_EQ     shift, and go to state 54
    OP_DIVIDE_EQ    shift, and go to state 55
    OP_MOD_EQ       shift, and go to state 56
    T_SEMICOLON     shift, and go to state 112


State 98

   20 STATMNT: JUMP_STATMNT . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 113


State 99

   21 STATMNT: SELECTION_STATMNT .

    $default  reduce using rule 21 (STATMNT)


State 100

   68 DECLARATION: TYPE_SPECIFIER . T_IDENTIFIER T_SEMICOLON
   69            | TYPE_SPECIFIER . T_IDENTIFIER OP_EQ EXPR T_SEMICOLON

    T_IDENTIFIER  shift, and go to state 114


State 101

   15 BLOCK_ITEM_LIST: DECLARATION .

    $default  reduce using rule 15 (BLOCK_ITEM_LIST)


State 102

    8 FUNC_DEF: TYPE_SPECIFIER T_IDENTIFIER OP_LBRACKET PARAMETER_LIST OP_RBRACKET COMPND_STATMNT .

    $default  reduce using rule 8 (FUNC_DEF)


State 103

   10 PARAMETER_LIST: PARAMETER_LIST T_COMMA PARAMETER .

    $default  reduce using rule 10 (PARAMETER_LIST)


State 104

   44 EXPR: T_IDENTIFIER OP_LBRACKET ARGUMENT_LIST OP_RBRACKET .

    $default  reduce using rule 44 (EXPR)


State 105

   50 ARGUMENT_LIST: ARGUMENT_LIST T_COMMA . EXPR

    OP_LOGICAL_NOT  shift, and go to state 23
    OP_LBRACKET     shift, and go to state 24
    T_NUMBER        shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_IDENTIFIER    shift, and go to state 27

    EXPR          go to state 115
    PRIMARY_EXPR  go to state 29


State 106

   23 EXPR: EXPR . OP_PLUS EXPR
   24     | EXPR . OP_MINUS EXPR
   25     | EXPR . OP_TIMES EXPR
   26     | EXPR . OP_DIVIDE EXPR
   27     | EXPR . OP_MOD EXPR
   28     | EXPR . OP_LT EXPR
   29     | EXPR . OP_GT EXPR
   30     | EXPR . OP_LTE EXPR
   31     | EXPR . OP_GTE EXPR
   32     | EXPR . OP_EQ_EQ EXPR
   33     | EXPR . OP_NEQ EXPR
   35     | EXPR . OP_LOGICAL_AND EXPR
   36     | EXPR . OP_LOGICAL_OR EXPR
   37     | EXPR . OP_EQ EXPR
   38     | EXPR . OP_PLUS_EQ EXPR
   39     | EXPR . OP_MINUS_EQ EXPR
   40     | EXPR . OP_TIMES_EQ EXPR
   41     | EXPR . OP_DIVIDE_EQ EXPR
   42     | EXPR . OP_MOD_EQ EXPR
   53 JUMP_STATMNT: ST_RETURN EXPR .

    OP_PLUS         shift, and go to state 38
    OP_MINUS        shift, and go to state 39
    OP_TIMES        shift, and go to state 40
    OP_DIVIDE       shift, and go to state 41
    OP_MOD          shift, and go to state 42
    OP_LOGICAL_OR   shift, and go to state 43
    OP_LOGICAL_AND  shift, and go to state 44
    OP_EQ_EQ        shift, and go to state 45
    OP_NEQ          shift, and go to state 46
    OP_LT           shift, and go to state 47
    OP_GT           shift, and go to state 48
    OP_LTE          shift, and go to state 49
    OP_GTE          shift, and go to state 50
    OP_EQ           shift, and go to state 51
    OP_PLUS_EQ      shift, and go to state 52
    OP_MINUS_EQ     shift, and go to state 53
    OP_TIMES_EQ     shift, and go to state 54
    OP_DIVIDE_EQ    shift, and go to state 55
    OP_MOD_EQ       shift, and go to state 56

    $default  reduce using rule 53 (JUMP_STATMNT)


State 107

   55 SELECTION_STATMNT: ST_IF OP_LBRACKET . EXPR OP_RBRACKET STATMNT
   56                  | ST_IF OP_LBRACKET . EXPR OP_RBRACKET STATMNT ST_ELSE STATMNT

    OP_LOGICAL_NOT  shift, and go to state 23
    OP_LBRACKET     shift, and go to state 24
    T_NUMBER        shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_IDENTIFIER    shift, and go to state 27

    EXPR          go to state 116
    PRIMARY_EXPR  go to state 29


State 108

   57 SELECTION_STATMNT: ST_WHILE OP_LBRACKET . EXPR OP_RBRACKET STATMNT

    OP_LOGICAL_NOT  shift, and go to state 23
    OP_LBRACKET     shift, and go to state 24
    T_NUMBER        shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_IDENTIFIER    shift, and go to state 27

    EXPR          go to state 117
    PRIMARY_EXPR  go to state 29


State 109

   13 COMPND_STATMNT: T_LBRACE BLOCK_ITEM_LIST T_RBRACE .

    $default  reduce using rule 13 (COMPND_STATMNT)


State 110

   16 BLOCK_ITEM_LIST: BLOCK_ITEM_LIST STATMNT .

    $default  reduce using rule 16 (BLOCK_ITEM_LIST)


State 111

   17 BLOCK_ITEM_LIST: BLOCK_ITEM_LIST DECLARATION .

    $default  reduce using rule 17 (BLOCK_ITEM_LIST)


State 112

   18 STATMNT: EXPR T_SEMICOLON .

    $default  reduce using rule 18 (STATMNT)


State 113

   20 STATMNT: JUMP_STATMNT T_SEMICOLON .

    $default  reduce using rule 20 (STATMNT)


State 114

   68 DECLARATION: TYPE_SPECIFIER T_IDENTIFIER . T_SEMICOLON
   69            | TYPE_SPECIFIER T_IDENTIFIER . OP_EQ EXPR T_SEMICOLON

    OP_EQ        shift, and go to state 20
    T_SEMICOLON  shift, and go to state 22


State 115

   23 EXPR: EXPR . OP_PLUS EXPR
   24     | EXPR . OP_MINUS EXPR
   25     | EXPR . OP_TIMES EXPR
   26     | EXPR . OP_DIVIDE EXPR
   27     | EXPR . OP_MOD EXPR
   28     | EXPR . OP_LT EXPR
   29     | EXPR . OP_GT EXPR
   30     | EXPR . OP_LTE EXPR
   31     | EXPR . OP_GTE EXPR
   32     | EXPR . OP_EQ_EQ EXPR
   33     | EXPR . OP_NEQ EXPR
   35     | EXPR . OP_LOGICAL_AND EXPR
   36     | EXPR . OP_LOGICAL_OR EXPR
   37     | EXPR . OP_EQ EXPR
   38     | EXPR . OP_PLUS_EQ EXPR
   39     | EXPR . OP_MINUS_EQ EXPR
   40     | EXPR . OP_TIMES_EQ EXPR
   41     | EXPR . OP_DIVIDE_EQ EXPR
   42     | EXPR . OP_MOD_EQ EXPR
   50 ARGUMENT_LIST: ARGUMENT_LIST T_COMMA EXPR .

    OP_PLUS         shift, and go to state 38
    OP_MINUS        shift, and go to state 39
    OP_TIMES        shift, and go to state 40
    OP_DIVIDE       shift, and go to state 41
    OP_MOD          shift, and go to state 42
    OP_LOGICAL_OR   shift, and go to state 43
    OP_LOGICAL_AND  shift, and go to state 44
    OP_EQ_EQ        shift, and go to state 45
    OP_NEQ          shift, and go to state 46
    OP_LT           shift, and go to state 47
    OP_GT           shift, and go to state 48
    OP_LTE          shift, and go to state 49
    OP_GTE          shift, and go to state 50
    OP_EQ           shift, and go to state 51
    OP_PLUS_EQ      shift, and go to state 52
    OP_MINUS_EQ     shift, and go to state 53
    OP_TIMES_EQ     shift, and go to state 54
    OP_DIVIDE_EQ    shift, and go to state 55
    OP_MOD_EQ       shift, and go to state 56

    $default  reduce using rule 50 (ARGUMENT_LIST)


State 116

   23 EXPR: EXPR . OP_PLUS EXPR
   24     | EXPR . OP_MINUS EXPR
   25     | EXPR . OP_TIMES EXPR
   26     | EXPR . OP_DIVIDE EXPR
   27     | EXPR . OP_MOD EXPR
   28     | EXPR . OP_LT EXPR
   29     | EXPR . OP_GT EXPR
   30     | EXPR . OP_LTE EXPR
   31     | EXPR . OP_GTE EXPR
   32     | EXPR . OP_EQ_EQ EXPR
   33     | EXPR . OP_NEQ EXPR
   35     | EXPR . OP_LOGICAL_AND EXPR
   36     | EXPR . OP_LOGICAL_OR EXPR
   37     | EXPR . OP_EQ EXPR
   38     | EXPR . OP_PLUS_EQ EXPR
   39     | EXPR . OP_MINUS_EQ EXPR
   40     | EXPR . OP_TIMES_EQ EXPR
   41     | EXPR . OP_DIVIDE_EQ EXPR
   42     | EXPR . OP_MOD_EQ EXPR
   55 SELECTION_STATMNT: ST_IF OP_LBRACKET EXPR . OP_RBRACKET STATMNT
   56                  | ST_IF OP_LBRACKET EXPR . OP_RBRACKET STATMNT ST_ELSE STATMNT

    OP_PLUS         shift, and go to state 38
    OP_MINUS        shift, and go to state 39
    OP_TIMES        shift, and go to state 40
    OP_DIVIDE       shift, and go to state 41
    OP_MOD          shift, and go to state 42
    OP_LOGICAL_OR   shift, and go to state 43
    OP_LOGICAL_AND  shift, and go to state 44
    OP_EQ_EQ        shift, and go to state 45
    OP_NEQ          shift, and go to state 46
    OP_LT           shift, and go to state 47
    OP_GT           shift, and go to state 48
    OP_LTE          shift, and go to state 49
    OP_GTE          shift, and go to state 50
    OP_EQ           shift, and go to state 51
    OP_PLUS_EQ      shift, and go to state 52
    OP_MINUS_EQ     shift, and go to state 53
    OP_TIMES_EQ     shift, and go to state 54
    OP_DIVIDE_EQ    shift, and go to state 55
    OP_MOD_EQ       shift, and go to state 56
    OP_RBRACKET     shift, and go to state 118


State 117

   23 EXPR: EXPR . OP_PLUS EXPR
   24     | EXPR . OP_MINUS EXPR
   25     | EXPR . OP_TIMES EXPR
   26     | EXPR . OP_DIVIDE EXPR
   27     | EXPR . OP_MOD EXPR
   28     | EXPR . OP_LT EXPR
   29     | EXPR . OP_GT EXPR
   30     | EXPR . OP_LTE EXPR
   31     | EXPR . OP_GTE EXPR
   32     | EXPR . OP_EQ_EQ EXPR
   33     | EXPR . OP_NEQ EXPR
   35     | EXPR . OP_LOGICAL_AND EXPR
   36     | EXPR . OP_LOGICAL_OR EXPR
   37     | EXPR . OP_EQ EXPR
   38     | EXPR . OP_PLUS_EQ EXPR
   39     | EXPR . OP_MINUS_EQ EXPR
   40     | EXPR . OP_TIMES_EQ EXPR
   41     | EXPR . OP_DIVIDE_EQ EXPR
   42     | EXPR . OP_MOD_EQ EXPR
   57 SELECTION_STATMNT: ST_WHILE OP_LBRACKET EXPR . OP_RBRACKET STATMNT

    OP_PLUS         shift, and go to state 38
    OP_MINUS        shift, and go to state 39
    OP_TIMES        shift, and go to state 40
    OP_DIVIDE       shift, and go to state 41
    OP_MOD          shift, and go to state 42
    OP_LOGICAL_OR   shift, and go to state 43
    OP_LOGICAL_AND  shift, and go to state 44
    OP_EQ_EQ        shift, and go to state 45
    OP_NEQ          shift, and go to state 46
    OP_LT           shift, and go to state 47
    OP_GT           shift, and go to state 48
    OP_LTE          shift, and go to state 49
    OP_GTE          shift, and go to state 50
    OP_EQ           shift, and go to state 51
    OP_PLUS_EQ      shift, and go to state 52
    OP_MINUS_EQ     shift, and go to state 53
    OP_TIMES_EQ     shift, and go to state 54
    OP_DIVIDE_EQ    shift, and go to state 55
    OP_MOD_EQ       shift, and go to state 56
    OP_RBRACKET     shift, and go to state 119


State 118

   55 SELECTION_STATMNT: ST_IF OP_LBRACKET EXPR OP_RBRACKET . STATMNT
   56                  | ST_IF OP_LBRACKET EXPR OP_RBRACKET . STATMNT ST_ELSE STATMNT

    ST_BREAK        shift, and go to state 88
    ST_CONTINUE     shift, and go to state 89
    ST_RETURN       shift, and go to state 90
    ST_IF           shift, and go to state 91
    ST_WHILE        shift, and go to state 92
    OP_LOGICAL_NOT  shift, and go to state 23
    OP_LBRACKET     shift, and go to state 24
    T_LBRACE        shift, and go to state 59
    T_NUMBER        shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_IDENTIFIER    shift, and go to state 27

    COMPND_STATMNT     go to state 94
    STATMNT            go to state 120
    EXPR               go to state 97
    PRIMARY_EXPR       go to state 29
    JUMP_STATMNT       go to state 98
    SELECTION_STATMNT  go to state 99


State 119

   57 SELECTION_STATMNT: ST_WHILE OP_LBRACKET EXPR OP_RBRACKET . STATMNT

    ST_BREAK        shift, and go to state 88
    ST_CONTINUE     shift, and go to state 89
    ST_RETURN       shift, and go to state 90
    ST_IF           shift, and go to state 91
    ST_WHILE        shift, and go to state 92
    OP_LOGICAL_NOT  shift, and go to state 23
    OP_LBRACKET     shift, and go to state 24
    T_LBRACE        shift, and go to state 59
    T_NUMBER        shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_IDENTIFIER    shift, and go to state 27

    COMPND_STATMNT     go to state 94
    STATMNT            go to state 121
    EXPR               go to state 97
    PRIMARY_EXPR       go to state 29
    JUMP_STATMNT       go to state 98
    SELECTION_STATMNT  go to state 99


State 120

   55 SELECTION_STATMNT: ST_IF OP_LBRACKET EXPR OP_RBRACKET STATMNT .
   56                  | ST_IF OP_LBRACKET EXPR OP_RBRACKET STATMNT . ST_ELSE STATMNT

    ST_ELSE  shift, and go to state 122

    ST_ELSE   [reduce using rule 55 (SELECTION_STATMNT)]
    $default  reduce using rule 55 (SELECTION_STATMNT)


State 121

   57 SELECTION_STATMNT: ST_WHILE OP_LBRACKET EXPR OP_RBRACKET STATMNT .

    $default  reduce using rule 57 (SELECTION_STATMNT)


State 122

   56 SELECTION_STATMNT: ST_IF OP_LBRACKET EXPR OP_RBRACKET STATMNT ST_ELSE . STATMNT

    ST_BREAK        shift, and go to state 88
    ST_CONTINUE     shift, and go to state 89
    ST_RETURN       shift, and go to state 90
    ST_IF           shift, and go to state 91
    ST_WHILE        shift, and go to state 92
    OP_LOGICAL_NOT  shift, and go to state 23
    OP_LBRACKET     shift, and go to state 24
    T_LBRACE        shift, and go to state 59
    T_NUMBER        shift, and go to state 25
    T_STRING        shift, and go to state 26
    T_IDENTIFIER    shift, and go to state 27

    COMPND_STATMNT     go to state 94
    STATMNT            go to state 123
    EXPR               go to state 97
    PRIMARY_EXPR       go to state 29
    JUMP_STATMNT       go to state 98
    SELECTION_STATMNT  go to state 99


State 123

   56 SELECTION_STATMNT: ST_IF OP_LBRACKET EXPR OP_RBRACKET STATMNT ST_ELSE STATMNT .

    $default  reduce using rule 56 (SELECTION_STATMNT)
