Terminals unused in grammar

   ST_DO
   ST_FOR
   T_TYPEDEF
   OP_INCREMENT
   OP_DECREMENT
   T_COMMA


Rules useless in parser due to conflicts

   47 SPECIFIERS: TYPE_SPECIFIER


State 15 conflicts: 1 shift/reduce
State 32 conflicts: 19 shift/reduce
State 58 conflicts: 8 shift/reduce
State 59 conflicts: 8 shift/reduce
State 60 conflicts: 8 shift/reduce
State 61 conflicts: 8 shift/reduce
State 62 conflicts: 8 shift/reduce
State 63 conflicts: 19 shift/reduce
State 64 conflicts: 19 shift/reduce
State 65 conflicts: 19 shift/reduce
State 66 conflicts: 19 shift/reduce
State 67 conflicts: 19 shift/reduce
State 68 conflicts: 19 shift/reduce
State 69 conflicts: 19 shift/reduce
State 70 conflicts: 19 shift/reduce
State 71 conflicts: 8 shift/reduce
State 72 conflicts: 8 shift/reduce
State 73 conflicts: 8 shift/reduce
State 74 conflicts: 8 shift/reduce
State 75 conflicts: 8 shift/reduce
State 76 conflicts: 8 shift/reduce
State 99 conflicts: 1 shift/reduce


Grammar

    0 $accept: ROOT $end

    1 ROOT: TRANSLATION_UNIT

    2 TRANSLATION_UNIT: FUNC_DEF
    3                 | DECLARATION
    4                 | TRANSLATION_UNIT FUNC_DEF
    5                 | TRANSLATION_UNIT DECLARATION

    6 FUNC_DEF: TYPE_SPECIFIER T_IDENTIFIER OP_LBRACKET OP_RBRACKET COMPND_STATMNT

    7 COMPND_STATMNT: T_LBRACE STATMNTS T_RBRACE

    8 STATMNTS: %empty
    9         | STATMNTS STATMNT

   10 STATMNT: EXPR T_SEMICOLON
   11        | COMPND_STATMNT
   12        | JUMP_STATMNT T_SEMICOLON
   13        | SELECTION_STATMNT

   14 EXPR: PRIMARY_EXPR
   15     | EXPR OP_PLUS EXPR
   16     | EXPR OP_MINUS EXPR
   17     | EXPR OP_TIMES EXPR
   18     | EXPR OP_DIVIDE EXPR
   19     | EXPR OP_MOD EXPR
   20     | EXPR OP_LT EXPR
   21     | EXPR OP_GT EXPR
   22     | EXPR OP_LTE EXPR
   23     | EXPR OP_GTE EXPR
   24     | EXPR OP_EQ_EQ EXPR
   25     | EXPR OP_NEQ EXPR
   26     | OP_LOGICAL_NOT EXPR
   27     | EXPR OP_LOGICAL_AND EXPR
   28     | EXPR OP_LOGICAL_OR EXPR
   29     | EXPR OP_EQ EXPR
   30     | EXPR OP_PLUS_EQ EXPR
   31     | EXPR OP_MINUS_EQ EXPR
   32     | EXPR OP_TIMES_EQ EXPR
   33     | EXPR OP_DIVIDE_EQ EXPR
   34     | EXPR OP_MOD_EQ EXPR
   35     | T_IDENTIFIER OP_LBRACKET OP_RBRACKET
   36     | T_IDENTIFIER OP_LBRACKET EXPR OP_RBRACKET

   37 PRIMARY_EXPR: T_NUMBER
   38             | T_STRING
   39             | T_IDENTIFIER

   40 JUMP_STATMNT: ST_BREAK
   41             | ST_CONTINUE
   42             | ST_RETURN EXPR
   43             | ST_RETURN

   44 SELECTION_STATMNT: ST_IF OP_LBRACKET EXPR OP_RBRACKET STATMNT
   45                  | ST_IF OP_LBRACKET EXPR OP_RBRACKET STATMNT ST_ELSE STATMNT
   46                  | ST_WHILE OP_LBRACKET EXPR OP_RBRACKET STATMNT

   47 SPECIFIERS: TYPE_SPECIFIER

   48 TYPE_SPECIFIER: T_VOID
   49               | T_BOOL
   50               | T_SIGNED
   51               | T_UNSIGNED
   52               | T_CHAR
   53               | T_INT
   54               | T_SHORT
   55               | T_LONG
   56               | T_FLOAT
   57               | T_DOUBLE

   58 DECLARATION: SPECIFIERS T_IDENTIFIER T_SEMICOLON
   59            | SPECIFIERS T_IDENTIFIER OP_EQ EXPR T_SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
ST_BREAK (258) 40
ST_CONTINUE (259) 41
ST_RETURN (260) 42 43
ST_DO (261)
ST_ELSE (262) 45
ST_FOR (263)
ST_IF (264) 44 45
ST_WHILE (265) 46
T_TYPEDEF (266)
T_VOID (267) 48
T_BOOL (268) 49
T_SIGNED (269) 50
T_UNSIGNED (270) 51
T_CHAR (271) 52
T_INT (272) 53
T_SHORT (273) 54
T_LONG (274) 55
T_FLOAT (275) 56
T_DOUBLE (276) 57
OP_PLUS (277) 15
OP_MINUS (278) 16
OP_TIMES (279) 17
OP_DIVIDE (280) 18
OP_MOD (281) 19
OP_INCREMENT (282)
OP_DECREMENT (283)
OP_LOGICAL_NOT (284) 26
OP_LOGICAL_OR (285) 28
OP_LOGICAL_AND (286) 27
OP_EQ_EQ (287) 24
OP_NEQ (288) 25
OP_LT (289) 20
OP_GT (290) 21
OP_LTE (291) 22
OP_GTE (292) 23
OP_EQ (293) 29 59
OP_PLUS_EQ (294) 30
OP_MINUS_EQ (295) 31
OP_TIMES_EQ (296) 32
OP_DIVIDE_EQ (297) 33
OP_MOD_EQ (298) 34
OP_LBRACKET (299) 6 35 36 44 45 46
OP_RBRACKET (300) 6 35 36 44 45 46
T_SEMICOLON (301) 10 12 58 59
T_COMMA (302)
T_LBRACE (303) 7
T_RBRACE (304) 7
T_NUMBER (305) 37
T_STRING (306) 38
T_IDENTIFIER (307) 6 35 36 39 58 59


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
ROOT (54)
    on left: 1, on right: 0
TRANSLATION_UNIT (55)
    on left: 2 3 4 5, on right: 1 4 5
FUNC_DEF (56)
    on left: 6, on right: 2 4
COMPND_STATMNT (57)
    on left: 7, on right: 6 11
STATMNTS (58)
    on left: 8 9, on right: 7 9
STATMNT (59)
    on left: 10 11 12 13, on right: 9 44 45 46
EXPR (60)
    on left: 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31
    32 33 34 35 36, on right: 10 15 16 17 18 19 20 21 22 23 24 25 26
    27 28 29 30 31 32 33 34 36 42 44 45 46 59
PRIMARY_EXPR (61)
    on left: 37 38 39, on right: 14
JUMP_STATMNT (62)
    on left: 40 41 42 43, on right: 12
SELECTION_STATMNT (63)
    on left: 44 45 46, on right: 13
SPECIFIERS (64)
    on left: 47, on right: 58 59
TYPE_SPECIFIER (65)
    on left: 48 49 50 51 52 53 54 55 56 57, on right: 6 47
DECLARATION (66)
    on left: 58 59, on right: 3 5


State 0

    0 $accept: . ROOT $end

    T_VOID      shift, and go to state 1
    T_BOOL      shift, and go to state 2
    T_SIGNED    shift, and go to state 3
    T_UNSIGNED  shift, and go to state 4
    T_CHAR      shift, and go to state 5
    T_INT       shift, and go to state 6
    T_SHORT     shift, and go to state 7
    T_LONG      shift, and go to state 8
    T_FLOAT     shift, and go to state 9
    T_DOUBLE    shift, and go to state 10

    ROOT              go to state 11
    TRANSLATION_UNIT  go to state 12
    FUNC_DEF          go to state 13
    SPECIFIERS        go to state 14
    TYPE_SPECIFIER    go to state 15
    DECLARATION       go to state 16


State 1

   48 TYPE_SPECIFIER: T_VOID .

    $default  reduce using rule 48 (TYPE_SPECIFIER)


State 2

   49 TYPE_SPECIFIER: T_BOOL .

    $default  reduce using rule 49 (TYPE_SPECIFIER)


State 3

   50 TYPE_SPECIFIER: T_SIGNED .

    $default  reduce using rule 50 (TYPE_SPECIFIER)


State 4

   51 TYPE_SPECIFIER: T_UNSIGNED .

    $default  reduce using rule 51 (TYPE_SPECIFIER)


State 5

   52 TYPE_SPECIFIER: T_CHAR .

    $default  reduce using rule 52 (TYPE_SPECIFIER)


State 6

   53 TYPE_SPECIFIER: T_INT .

    $default  reduce using rule 53 (TYPE_SPECIFIER)


State 7

   54 TYPE_SPECIFIER: T_SHORT .

    $default  reduce using rule 54 (TYPE_SPECIFIER)


State 8

   55 TYPE_SPECIFIER: T_LONG .

    $default  reduce using rule 55 (TYPE_SPECIFIER)


State 9

   56 TYPE_SPECIFIER: T_FLOAT .

    $default  reduce using rule 56 (TYPE_SPECIFIER)


State 10

   57 TYPE_SPECIFIER: T_DOUBLE .

    $default  reduce using rule 57 (TYPE_SPECIFIER)


State 11

    0 $accept: ROOT . $end

    $end  shift, and go to state 17


State 12

    1 ROOT: TRANSLATION_UNIT .
    4 TRANSLATION_UNIT: TRANSLATION_UNIT . FUNC_DEF
    5                 | TRANSLATION_UNIT . DECLARATION

    T_VOID      shift, and go to state 1
    T_BOOL      shift, and go to state 2
    T_SIGNED    shift, and go to state 3
    T_UNSIGNED  shift, and go to state 4
    T_CHAR      shift, and go to state 5
    T_INT       shift, and go to state 6
    T_SHORT     shift, and go to state 7
    T_LONG      shift, and go to state 8
    T_FLOAT     shift, and go to state 9
    T_DOUBLE    shift, and go to state 10

    $default  reduce using rule 1 (ROOT)

    FUNC_DEF        go to state 18
    SPECIFIERS      go to state 14
    TYPE_SPECIFIER  go to state 15
    DECLARATION     go to state 19


State 13

    2 TRANSLATION_UNIT: FUNC_DEF .

    $default  reduce using rule 2 (TRANSLATION_UNIT)


State 14

   58 DECLARATION: SPECIFIERS . T_IDENTIFIER T_SEMICOLON
   59            | SPECIFIERS . T_IDENTIFIER OP_EQ EXPR T_SEMICOLON

    T_IDENTIFIER  shift, and go to state 20


State 15

    6 FUNC_DEF: TYPE_SPECIFIER . T_IDENTIFIER OP_LBRACKET OP_RBRACKET COMPND_STATMNT
   47 SPECIFIERS: TYPE_SPECIFIER .

    T_IDENTIFIER  shift, and go to state 21

    T_IDENTIFIER  [reduce using rule 47 (SPECIFIERS)]


State 16

    3 TRANSLATION_UNIT: DECLARATION .

    $default  reduce using rule 3 (TRANSLATION_UNIT)


State 17

    0 $accept: ROOT $end .

    $default  accept


State 18

    4 TRANSLATION_UNIT: TRANSLATION_UNIT FUNC_DEF .

    $default  reduce using rule 4 (TRANSLATION_UNIT)


State 19

    5 TRANSLATION_UNIT: TRANSLATION_UNIT DECLARATION .

    $default  reduce using rule 5 (TRANSLATION_UNIT)


State 20

   58 DECLARATION: SPECIFIERS T_IDENTIFIER . T_SEMICOLON
   59            | SPECIFIERS T_IDENTIFIER . OP_EQ EXPR T_SEMICOLON

    OP_EQ        shift, and go to state 22
    T_SEMICOLON  shift, and go to state 23


State 21

    6 FUNC_DEF: TYPE_SPECIFIER T_IDENTIFIER . OP_LBRACKET OP_RBRACKET COMPND_STATMNT

    OP_LBRACKET  shift, and go to state 24


State 22

   59 DECLARATION: SPECIFIERS T_IDENTIFIER OP_EQ . EXPR T_SEMICOLON

    OP_LOGICAL_NOT  shift, and go to state 25
    T_NUMBER        shift, and go to state 26
    T_STRING        shift, and go to state 27
    T_IDENTIFIER    shift, and go to state 28

    EXPR          go to state 29
    PRIMARY_EXPR  go to state 30


State 23

   58 DECLARATION: SPECIFIERS T_IDENTIFIER T_SEMICOLON .

    $default  reduce using rule 58 (DECLARATION)


State 24

    6 FUNC_DEF: TYPE_SPECIFIER T_IDENTIFIER OP_LBRACKET . OP_RBRACKET COMPND_STATMNT

    OP_RBRACKET  shift, and go to state 31


State 25

   26 EXPR: OP_LOGICAL_NOT . EXPR

    OP_LOGICAL_NOT  shift, and go to state 25
    T_NUMBER        shift, and go to state 26
    T_STRING        shift, and go to state 27
    T_IDENTIFIER    shift, and go to state 28

    EXPR          go to state 32
    PRIMARY_EXPR  go to state 30


State 26

   37 PRIMARY_EXPR: T_NUMBER .

    $default  reduce using rule 37 (PRIMARY_EXPR)


State 27

   38 PRIMARY_EXPR: T_STRING .

    $default  reduce using rule 38 (PRIMARY_EXPR)


State 28

   35 EXPR: T_IDENTIFIER . OP_LBRACKET OP_RBRACKET
   36     | T_IDENTIFIER . OP_LBRACKET EXPR OP_RBRACKET
   39 PRIMARY_EXPR: T_IDENTIFIER .

    OP_LBRACKET  shift, and go to state 33

    $default  reduce using rule 39 (PRIMARY_EXPR)


State 29

   15 EXPR: EXPR . OP_PLUS EXPR
   16     | EXPR . OP_MINUS EXPR
   17     | EXPR . OP_TIMES EXPR
   18     | EXPR . OP_DIVIDE EXPR
   19     | EXPR . OP_MOD EXPR
   20     | EXPR . OP_LT EXPR
   21     | EXPR . OP_GT EXPR
   22     | EXPR . OP_LTE EXPR
   23     | EXPR . OP_GTE EXPR
   24     | EXPR . OP_EQ_EQ EXPR
   25     | EXPR . OP_NEQ EXPR
   27     | EXPR . OP_LOGICAL_AND EXPR
   28     | EXPR . OP_LOGICAL_OR EXPR
   29     | EXPR . OP_EQ EXPR
   30     | EXPR . OP_PLUS_EQ EXPR
   31     | EXPR . OP_MINUS_EQ EXPR
   32     | EXPR . OP_TIMES_EQ EXPR
   33     | EXPR . OP_DIVIDE_EQ EXPR
   34     | EXPR . OP_MOD_EQ EXPR
   59 DECLARATION: SPECIFIERS T_IDENTIFIER OP_EQ EXPR . T_SEMICOLON

    OP_PLUS         shift, and go to state 34
    OP_MINUS        shift, and go to state 35
    OP_TIMES        shift, and go to state 36
    OP_DIVIDE       shift, and go to state 37
    OP_MOD          shift, and go to state 38
    OP_LOGICAL_OR   shift, and go to state 39
    OP_LOGICAL_AND  shift, and go to state 40
    OP_EQ_EQ        shift, and go to state 41
    OP_NEQ          shift, and go to state 42
    OP_LT           shift, and go to state 43
    OP_GT           shift, and go to state 44
    OP_LTE          shift, and go to state 45
    OP_GTE          shift, and go to state 46
    OP_EQ           shift, and go to state 47
    OP_PLUS_EQ      shift, and go to state 48
    OP_MINUS_EQ     shift, and go to state 49
    OP_TIMES_EQ     shift, and go to state 50
    OP_DIVIDE_EQ    shift, and go to state 51
    OP_MOD_EQ       shift, and go to state 52
    T_SEMICOLON     shift, and go to state 53


State 30

   14 EXPR: PRIMARY_EXPR .

    $default  reduce using rule 14 (EXPR)


State 31

    6 FUNC_DEF: TYPE_SPECIFIER T_IDENTIFIER OP_LBRACKET OP_RBRACKET . COMPND_STATMNT

    T_LBRACE  shift, and go to state 54

    COMPND_STATMNT  go to state 55


State 32

   15 EXPR: EXPR . OP_PLUS EXPR
   16     | EXPR . OP_MINUS EXPR
   17     | EXPR . OP_TIMES EXPR
   18     | EXPR . OP_DIVIDE EXPR
   19     | EXPR . OP_MOD EXPR
   20     | EXPR . OP_LT EXPR
   21     | EXPR . OP_GT EXPR
   22     | EXPR . OP_LTE EXPR
   23     | EXPR . OP_GTE EXPR
   24     | EXPR . OP_EQ_EQ EXPR
   25     | EXPR . OP_NEQ EXPR
   26     | OP_LOGICAL_NOT EXPR .
   27     | EXPR . OP_LOGICAL_AND EXPR
   28     | EXPR . OP_LOGICAL_OR EXPR
   29     | EXPR . OP_EQ EXPR
   30     | EXPR . OP_PLUS_EQ EXPR
   31     | EXPR . OP_MINUS_EQ EXPR
   32     | EXPR . OP_TIMES_EQ EXPR
   33     | EXPR . OP_DIVIDE_EQ EXPR
   34     | EXPR . OP_MOD_EQ EXPR

    OP_PLUS         shift, and go to state 34
    OP_MINUS        shift, and go to state 35
    OP_TIMES        shift, and go to state 36
    OP_DIVIDE       shift, and go to state 37
    OP_MOD          shift, and go to state 38
    OP_LOGICAL_OR   shift, and go to state 39
    OP_LOGICAL_AND  shift, and go to state 40
    OP_EQ_EQ        shift, and go to state 41
    OP_NEQ          shift, and go to state 42
    OP_LT           shift, and go to state 43
    OP_GT           shift, and go to state 44
    OP_LTE          shift, and go to state 45
    OP_GTE          shift, and go to state 46
    OP_EQ           shift, and go to state 47
    OP_PLUS_EQ      shift, and go to state 48
    OP_MINUS_EQ     shift, and go to state 49
    OP_TIMES_EQ     shift, and go to state 50
    OP_DIVIDE_EQ    shift, and go to state 51
    OP_MOD_EQ       shift, and go to state 52

    OP_PLUS         [reduce using rule 26 (EXPR)]
    OP_MINUS        [reduce using rule 26 (EXPR)]
    OP_TIMES        [reduce using rule 26 (EXPR)]
    OP_DIVIDE       [reduce using rule 26 (EXPR)]
    OP_MOD          [reduce using rule 26 (EXPR)]
    OP_LOGICAL_OR   [reduce using rule 26 (EXPR)]
    OP_LOGICAL_AND  [reduce using rule 26 (EXPR)]
    OP_EQ_EQ        [reduce using rule 26 (EXPR)]
    OP_NEQ          [reduce using rule 26 (EXPR)]
    OP_LT           [reduce using rule 26 (EXPR)]
    OP_GT           [reduce using rule 26 (EXPR)]
    OP_LTE          [reduce using rule 26 (EXPR)]
    OP_GTE          [reduce using rule 26 (EXPR)]
    OP_EQ           [reduce using rule 26 (EXPR)]
    OP_PLUS_EQ      [reduce using rule 26 (EXPR)]
    OP_MINUS_EQ     [reduce using rule 26 (EXPR)]
    OP_TIMES_EQ     [reduce using rule 26 (EXPR)]
    OP_DIVIDE_EQ    [reduce using rule 26 (EXPR)]
    OP_MOD_EQ       [reduce using rule 26 (EXPR)]
    $default        reduce using rule 26 (EXPR)


State 33

   35 EXPR: T_IDENTIFIER OP_LBRACKET . OP_RBRACKET
   36     | T_IDENTIFIER OP_LBRACKET . EXPR OP_RBRACKET

    OP_LOGICAL_NOT  shift, and go to state 25
    OP_RBRACKET     shift, and go to state 56
    T_NUMBER        shift, and go to state 26
    T_STRING        shift, and go to state 27
    T_IDENTIFIER    shift, and go to state 28

    EXPR          go to state 57
    PRIMARY_EXPR  go to state 30


State 34

   15 EXPR: EXPR OP_PLUS . EXPR

    OP_LOGICAL_NOT  shift, and go to state 25
    T_NUMBER        shift, and go to state 26
    T_STRING        shift, and go to state 27
    T_IDENTIFIER    shift, and go to state 28

    EXPR          go to state 58
    PRIMARY_EXPR  go to state 30


State 35

   16 EXPR: EXPR OP_MINUS . EXPR

    OP_LOGICAL_NOT  shift, and go to state 25
    T_NUMBER        shift, and go to state 26
    T_STRING        shift, and go to state 27
    T_IDENTIFIER    shift, and go to state 28

    EXPR          go to state 59
    PRIMARY_EXPR  go to state 30


State 36

   17 EXPR: EXPR OP_TIMES . EXPR

    OP_LOGICAL_NOT  shift, and go to state 25
    T_NUMBER        shift, and go to state 26
    T_STRING        shift, and go to state 27
    T_IDENTIFIER    shift, and go to state 28

    EXPR          go to state 60
    PRIMARY_EXPR  go to state 30


State 37

   18 EXPR: EXPR OP_DIVIDE . EXPR

    OP_LOGICAL_NOT  shift, and go to state 25
    T_NUMBER        shift, and go to state 26
    T_STRING        shift, and go to state 27
    T_IDENTIFIER    shift, and go to state 28

    EXPR          go to state 61
    PRIMARY_EXPR  go to state 30


State 38

   19 EXPR: EXPR OP_MOD . EXPR

    OP_LOGICAL_NOT  shift, and go to state 25
    T_NUMBER        shift, and go to state 26
    T_STRING        shift, and go to state 27
    T_IDENTIFIER    shift, and go to state 28

    EXPR          go to state 62
    PRIMARY_EXPR  go to state 30


State 39

   28 EXPR: EXPR OP_LOGICAL_OR . EXPR

    OP_LOGICAL_NOT  shift, and go to state 25
    T_NUMBER        shift, and go to state 26
    T_STRING        shift, and go to state 27
    T_IDENTIFIER    shift, and go to state 28

    EXPR          go to state 63
    PRIMARY_EXPR  go to state 30


State 40

   27 EXPR: EXPR OP_LOGICAL_AND . EXPR

    OP_LOGICAL_NOT  shift, and go to state 25
    T_NUMBER        shift, and go to state 26
    T_STRING        shift, and go to state 27
    T_IDENTIFIER    shift, and go to state 28

    EXPR          go to state 64
    PRIMARY_EXPR  go to state 30


State 41

   24 EXPR: EXPR OP_EQ_EQ . EXPR

    OP_LOGICAL_NOT  shift, and go to state 25
    T_NUMBER        shift, and go to state 26
    T_STRING        shift, and go to state 27
    T_IDENTIFIER    shift, and go to state 28

    EXPR          go to state 65
    PRIMARY_EXPR  go to state 30


State 42

   25 EXPR: EXPR OP_NEQ . EXPR

    OP_LOGICAL_NOT  shift, and go to state 25
    T_NUMBER        shift, and go to state 26
    T_STRING        shift, and go to state 27
    T_IDENTIFIER    shift, and go to state 28

    EXPR          go to state 66
    PRIMARY_EXPR  go to state 30


State 43

   20 EXPR: EXPR OP_LT . EXPR

    OP_LOGICAL_NOT  shift, and go to state 25
    T_NUMBER        shift, and go to state 26
    T_STRING        shift, and go to state 27
    T_IDENTIFIER    shift, and go to state 28

    EXPR          go to state 67
    PRIMARY_EXPR  go to state 30


State 44

   21 EXPR: EXPR OP_GT . EXPR

    OP_LOGICAL_NOT  shift, and go to state 25
    T_NUMBER        shift, and go to state 26
    T_STRING        shift, and go to state 27
    T_IDENTIFIER    shift, and go to state 28

    EXPR          go to state 68
    PRIMARY_EXPR  go to state 30


State 45

   22 EXPR: EXPR OP_LTE . EXPR

    OP_LOGICAL_NOT  shift, and go to state 25
    T_NUMBER        shift, and go to state 26
    T_STRING        shift, and go to state 27
    T_IDENTIFIER    shift, and go to state 28

    EXPR          go to state 69
    PRIMARY_EXPR  go to state 30


State 46

   23 EXPR: EXPR OP_GTE . EXPR

    OP_LOGICAL_NOT  shift, and go to state 25
    T_NUMBER        shift, and go to state 26
    T_STRING        shift, and go to state 27
    T_IDENTIFIER    shift, and go to state 28

    EXPR          go to state 70
    PRIMARY_EXPR  go to state 30


State 47

   29 EXPR: EXPR OP_EQ . EXPR

    OP_LOGICAL_NOT  shift, and go to state 25
    T_NUMBER        shift, and go to state 26
    T_STRING        shift, and go to state 27
    T_IDENTIFIER    shift, and go to state 28

    EXPR          go to state 71
    PRIMARY_EXPR  go to state 30


State 48

   30 EXPR: EXPR OP_PLUS_EQ . EXPR

    OP_LOGICAL_NOT  shift, and go to state 25
    T_NUMBER        shift, and go to state 26
    T_STRING        shift, and go to state 27
    T_IDENTIFIER    shift, and go to state 28

    EXPR          go to state 72
    PRIMARY_EXPR  go to state 30


State 49

   31 EXPR: EXPR OP_MINUS_EQ . EXPR

    OP_LOGICAL_NOT  shift, and go to state 25
    T_NUMBER        shift, and go to state 26
    T_STRING        shift, and go to state 27
    T_IDENTIFIER    shift, and go to state 28

    EXPR          go to state 73
    PRIMARY_EXPR  go to state 30


State 50

   32 EXPR: EXPR OP_TIMES_EQ . EXPR

    OP_LOGICAL_NOT  shift, and go to state 25
    T_NUMBER        shift, and go to state 26
    T_STRING        shift, and go to state 27
    T_IDENTIFIER    shift, and go to state 28

    EXPR          go to state 74
    PRIMARY_EXPR  go to state 30


State 51

   33 EXPR: EXPR OP_DIVIDE_EQ . EXPR

    OP_LOGICAL_NOT  shift, and go to state 25
    T_NUMBER        shift, and go to state 26
    T_STRING        shift, and go to state 27
    T_IDENTIFIER    shift, and go to state 28

    EXPR          go to state 75
    PRIMARY_EXPR  go to state 30


State 52

   34 EXPR: EXPR OP_MOD_EQ . EXPR

    OP_LOGICAL_NOT  shift, and go to state 25
    T_NUMBER        shift, and go to state 26
    T_STRING        shift, and go to state 27
    T_IDENTIFIER    shift, and go to state 28

    EXPR          go to state 76
    PRIMARY_EXPR  go to state 30


State 53

   59 DECLARATION: SPECIFIERS T_IDENTIFIER OP_EQ EXPR T_SEMICOLON .

    $default  reduce using rule 59 (DECLARATION)


State 54

    7 COMPND_STATMNT: T_LBRACE . STATMNTS T_RBRACE

    $default  reduce using rule 8 (STATMNTS)

    STATMNTS  go to state 77


State 55

    6 FUNC_DEF: TYPE_SPECIFIER T_IDENTIFIER OP_LBRACKET OP_RBRACKET COMPND_STATMNT .

    $default  reduce using rule 6 (FUNC_DEF)


State 56

   35 EXPR: T_IDENTIFIER OP_LBRACKET OP_RBRACKET .

    $default  reduce using rule 35 (EXPR)


State 57

   15 EXPR: EXPR . OP_PLUS EXPR
   16     | EXPR . OP_MINUS EXPR
   17     | EXPR . OP_TIMES EXPR
   18     | EXPR . OP_DIVIDE EXPR
   19     | EXPR . OP_MOD EXPR
   20     | EXPR . OP_LT EXPR
   21     | EXPR . OP_GT EXPR
   22     | EXPR . OP_LTE EXPR
   23     | EXPR . OP_GTE EXPR
   24     | EXPR . OP_EQ_EQ EXPR
   25     | EXPR . OP_NEQ EXPR
   27     | EXPR . OP_LOGICAL_AND EXPR
   28     | EXPR . OP_LOGICAL_OR EXPR
   29     | EXPR . OP_EQ EXPR
   30     | EXPR . OP_PLUS_EQ EXPR
   31     | EXPR . OP_MINUS_EQ EXPR
   32     | EXPR . OP_TIMES_EQ EXPR
   33     | EXPR . OP_DIVIDE_EQ EXPR
   34     | EXPR . OP_MOD_EQ EXPR
   36     | T_IDENTIFIER OP_LBRACKET EXPR . OP_RBRACKET

    OP_PLUS         shift, and go to state 34
    OP_MINUS        shift, and go to state 35
    OP_TIMES        shift, and go to state 36
    OP_DIVIDE       shift, and go to state 37
    OP_MOD          shift, and go to state 38
    OP_LOGICAL_OR   shift, and go to state 39
    OP_LOGICAL_AND  shift, and go to state 40
    OP_EQ_EQ        shift, and go to state 41
    OP_NEQ          shift, and go to state 42
    OP_LT           shift, and go to state 43
    OP_GT           shift, and go to state 44
    OP_LTE          shift, and go to state 45
    OP_GTE          shift, and go to state 46
    OP_EQ           shift, and go to state 47
    OP_PLUS_EQ      shift, and go to state 48
    OP_MINUS_EQ     shift, and go to state 49
    OP_TIMES_EQ     shift, and go to state 50
    OP_DIVIDE_EQ    shift, and go to state 51
    OP_MOD_EQ       shift, and go to state 52
    OP_RBRACKET     shift, and go to state 78


State 58

   15 EXPR: EXPR . OP_PLUS EXPR
   15     | EXPR OP_PLUS EXPR .
   16     | EXPR . OP_MINUS EXPR
   17     | EXPR . OP_TIMES EXPR
   18     | EXPR . OP_DIVIDE EXPR
   19     | EXPR . OP_MOD EXPR
   20     | EXPR . OP_LT EXPR
   21     | EXPR . OP_GT EXPR
   22     | EXPR . OP_LTE EXPR
   23     | EXPR . OP_GTE EXPR
   24     | EXPR . OP_EQ_EQ EXPR
   25     | EXPR . OP_NEQ EXPR
   27     | EXPR . OP_LOGICAL_AND EXPR
   28     | EXPR . OP_LOGICAL_OR EXPR
   29     | EXPR . OP_EQ EXPR
   30     | EXPR . OP_PLUS_EQ EXPR
   31     | EXPR . OP_MINUS_EQ EXPR
   32     | EXPR . OP_TIMES_EQ EXPR
   33     | EXPR . OP_DIVIDE_EQ EXPR
   34     | EXPR . OP_MOD_EQ EXPR

    OP_TIMES        shift, and go to state 36
    OP_DIVIDE       shift, and go to state 37
    OP_MOD          shift, and go to state 38
    OP_LOGICAL_OR   shift, and go to state 39
    OP_LOGICAL_AND  shift, and go to state 40
    OP_EQ_EQ        shift, and go to state 41
    OP_NEQ          shift, and go to state 42
    OP_LT           shift, and go to state 43
    OP_GT           shift, and go to state 44
    OP_LTE          shift, and go to state 45
    OP_GTE          shift, and go to state 46

    OP_LOGICAL_OR   [reduce using rule 15 (EXPR)]
    OP_LOGICAL_AND  [reduce using rule 15 (EXPR)]
    OP_EQ_EQ        [reduce using rule 15 (EXPR)]
    OP_NEQ          [reduce using rule 15 (EXPR)]
    OP_LT           [reduce using rule 15 (EXPR)]
    OP_GT           [reduce using rule 15 (EXPR)]
    OP_LTE          [reduce using rule 15 (EXPR)]
    OP_GTE          [reduce using rule 15 (EXPR)]
    $default        reduce using rule 15 (EXPR)


State 59

   15 EXPR: EXPR . OP_PLUS EXPR
   16     | EXPR . OP_MINUS EXPR
   16     | EXPR OP_MINUS EXPR .
   17     | EXPR . OP_TIMES EXPR
   18     | EXPR . OP_DIVIDE EXPR
   19     | EXPR . OP_MOD EXPR
   20     | EXPR . OP_LT EXPR
   21     | EXPR . OP_GT EXPR
   22     | EXPR . OP_LTE EXPR
   23     | EXPR . OP_GTE EXPR
   24     | EXPR . OP_EQ_EQ EXPR
   25     | EXPR . OP_NEQ EXPR
   27     | EXPR . OP_LOGICAL_AND EXPR
   28     | EXPR . OP_LOGICAL_OR EXPR
   29     | EXPR . OP_EQ EXPR
   30     | EXPR . OP_PLUS_EQ EXPR
   31     | EXPR . OP_MINUS_EQ EXPR
   32     | EXPR . OP_TIMES_EQ EXPR
   33     | EXPR . OP_DIVIDE_EQ EXPR
   34     | EXPR . OP_MOD_EQ EXPR

    OP_TIMES        shift, and go to state 36
    OP_DIVIDE       shift, and go to state 37
    OP_MOD          shift, and go to state 38
    OP_LOGICAL_OR   shift, and go to state 39
    OP_LOGICAL_AND  shift, and go to state 40
    OP_EQ_EQ        shift, and go to state 41
    OP_NEQ          shift, and go to state 42
    OP_LT           shift, and go to state 43
    OP_GT           shift, and go to state 44
    OP_LTE          shift, and go to state 45
    OP_GTE          shift, and go to state 46

    OP_LOGICAL_OR   [reduce using rule 16 (EXPR)]
    OP_LOGICAL_AND  [reduce using rule 16 (EXPR)]
    OP_EQ_EQ        [reduce using rule 16 (EXPR)]
    OP_NEQ          [reduce using rule 16 (EXPR)]
    OP_LT           [reduce using rule 16 (EXPR)]
    OP_GT           [reduce using rule 16 (EXPR)]
    OP_LTE          [reduce using rule 16 (EXPR)]
    OP_GTE          [reduce using rule 16 (EXPR)]
    $default        reduce using rule 16 (EXPR)


State 60

   15 EXPR: EXPR . OP_PLUS EXPR
   16     | EXPR . OP_MINUS EXPR
   17     | EXPR . OP_TIMES EXPR
   17     | EXPR OP_TIMES EXPR .
   18     | EXPR . OP_DIVIDE EXPR
   19     | EXPR . OP_MOD EXPR
   20     | EXPR . OP_LT EXPR
   21     | EXPR . OP_GT EXPR
   22     | EXPR . OP_LTE EXPR
   23     | EXPR . OP_GTE EXPR
   24     | EXPR . OP_EQ_EQ EXPR
   25     | EXPR . OP_NEQ EXPR
   27     | EXPR . OP_LOGICAL_AND EXPR
   28     | EXPR . OP_LOGICAL_OR EXPR
   29     | EXPR . OP_EQ EXPR
   30     | EXPR . OP_PLUS_EQ EXPR
   31     | EXPR . OP_MINUS_EQ EXPR
   32     | EXPR . OP_TIMES_EQ EXPR
   33     | EXPR . OP_DIVIDE_EQ EXPR
   34     | EXPR . OP_MOD_EQ EXPR

    OP_LOGICAL_OR   shift, and go to state 39
    OP_LOGICAL_AND  shift, and go to state 40
    OP_EQ_EQ        shift, and go to state 41
    OP_NEQ          shift, and go to state 42
    OP_LT           shift, and go to state 43
    OP_GT           shift, and go to state 44
    OP_LTE          shift, and go to state 45
    OP_GTE          shift, and go to state 46

    OP_LOGICAL_OR   [reduce using rule 17 (EXPR)]
    OP_LOGICAL_AND  [reduce using rule 17 (EXPR)]
    OP_EQ_EQ        [reduce using rule 17 (EXPR)]
    OP_NEQ          [reduce using rule 17 (EXPR)]
    OP_LT           [reduce using rule 17 (EXPR)]
    OP_GT           [reduce using rule 17 (EXPR)]
    OP_LTE          [reduce using rule 17 (EXPR)]
    OP_GTE          [reduce using rule 17 (EXPR)]
    $default        reduce using rule 17 (EXPR)


State 61

   15 EXPR: EXPR . OP_PLUS EXPR
   16     | EXPR . OP_MINUS EXPR
   17     | EXPR . OP_TIMES EXPR
   18     | EXPR . OP_DIVIDE EXPR
   18     | EXPR OP_DIVIDE EXPR .
   19     | EXPR . OP_MOD EXPR
   20     | EXPR . OP_LT EXPR
   21     | EXPR . OP_GT EXPR
   22     | EXPR . OP_LTE EXPR
   23     | EXPR . OP_GTE EXPR
   24     | EXPR . OP_EQ_EQ EXPR
   25     | EXPR . OP_NEQ EXPR
   27     | EXPR . OP_LOGICAL_AND EXPR
   28     | EXPR . OP_LOGICAL_OR EXPR
   29     | EXPR . OP_EQ EXPR
   30     | EXPR . OP_PLUS_EQ EXPR
   31     | EXPR . OP_MINUS_EQ EXPR
   32     | EXPR . OP_TIMES_EQ EXPR
   33     | EXPR . OP_DIVIDE_EQ EXPR
   34     | EXPR . OP_MOD_EQ EXPR

    OP_LOGICAL_OR   shift, and go to state 39
    OP_LOGICAL_AND  shift, and go to state 40
    OP_EQ_EQ        shift, and go to state 41
    OP_NEQ          shift, and go to state 42
    OP_LT           shift, and go to state 43
    OP_GT           shift, and go to state 44
    OP_LTE          shift, and go to state 45
    OP_GTE          shift, and go to state 46

    OP_LOGICAL_OR   [reduce using rule 18 (EXPR)]
    OP_LOGICAL_AND  [reduce using rule 18 (EXPR)]
    OP_EQ_EQ        [reduce using rule 18 (EXPR)]
    OP_NEQ          [reduce using rule 18 (EXPR)]
    OP_LT           [reduce using rule 18 (EXPR)]
    OP_GT           [reduce using rule 18 (EXPR)]
    OP_LTE          [reduce using rule 18 (EXPR)]
    OP_GTE          [reduce using rule 18 (EXPR)]
    $default        reduce using rule 18 (EXPR)


State 62

   15 EXPR: EXPR . OP_PLUS EXPR
   16     | EXPR . OP_MINUS EXPR
   17     | EXPR . OP_TIMES EXPR
   18     | EXPR . OP_DIVIDE EXPR
   19     | EXPR . OP_MOD EXPR
   19     | EXPR OP_MOD EXPR .
   20     | EXPR . OP_LT EXPR
   21     | EXPR . OP_GT EXPR
   22     | EXPR . OP_LTE EXPR
   23     | EXPR . OP_GTE EXPR
   24     | EXPR . OP_EQ_EQ EXPR
   25     | EXPR . OP_NEQ EXPR
   27     | EXPR . OP_LOGICAL_AND EXPR
   28     | EXPR . OP_LOGICAL_OR EXPR
   29     | EXPR . OP_EQ EXPR
   30     | EXPR . OP_PLUS_EQ EXPR
   31     | EXPR . OP_MINUS_EQ EXPR
   32     | EXPR . OP_TIMES_EQ EXPR
   33     | EXPR . OP_DIVIDE_EQ EXPR
   34     | EXPR . OP_MOD_EQ EXPR

    OP_LOGICAL_OR   shift, and go to state 39
    OP_LOGICAL_AND  shift, and go to state 40
    OP_EQ_EQ        shift, and go to state 41
    OP_NEQ          shift, and go to state 42
    OP_LT           shift, and go to state 43
    OP_GT           shift, and go to state 44
    OP_LTE          shift, and go to state 45
    OP_GTE          shift, and go to state 46

    OP_LOGICAL_OR   [reduce using rule 19 (EXPR)]
    OP_LOGICAL_AND  [reduce using rule 19 (EXPR)]
    OP_EQ_EQ        [reduce using rule 19 (EXPR)]
    OP_NEQ          [reduce using rule 19 (EXPR)]
    OP_LT           [reduce using rule 19 (EXPR)]
    OP_GT           [reduce using rule 19 (EXPR)]
    OP_LTE          [reduce using rule 19 (EXPR)]
    OP_GTE          [reduce using rule 19 (EXPR)]
    $default        reduce using rule 19 (EXPR)


State 63

   15 EXPR: EXPR . OP_PLUS EXPR
   16     | EXPR . OP_MINUS EXPR
   17     | EXPR . OP_TIMES EXPR
   18     | EXPR . OP_DIVIDE EXPR
   19     | EXPR . OP_MOD EXPR
   20     | EXPR . OP_LT EXPR
   21     | EXPR . OP_GT EXPR
   22     | EXPR . OP_LTE EXPR
   23     | EXPR . OP_GTE EXPR
   24     | EXPR . OP_EQ_EQ EXPR
   25     | EXPR . OP_NEQ EXPR
   27     | EXPR . OP_LOGICAL_AND EXPR
   28     | EXPR . OP_LOGICAL_OR EXPR
   28     | EXPR OP_LOGICAL_OR EXPR .
   29     | EXPR . OP_EQ EXPR
   30     | EXPR . OP_PLUS_EQ EXPR
   31     | EXPR . OP_MINUS_EQ EXPR
   32     | EXPR . OP_TIMES_EQ EXPR
   33     | EXPR . OP_DIVIDE_EQ EXPR
   34     | EXPR . OP_MOD_EQ EXPR

    OP_PLUS         shift, and go to state 34
    OP_MINUS        shift, and go to state 35
    OP_TIMES        shift, and go to state 36
    OP_DIVIDE       shift, and go to state 37
    OP_MOD          shift, and go to state 38
    OP_LOGICAL_OR   shift, and go to state 39
    OP_LOGICAL_AND  shift, and go to state 40
    OP_EQ_EQ        shift, and go to state 41
    OP_NEQ          shift, and go to state 42
    OP_LT           shift, and go to state 43
    OP_GT           shift, and go to state 44
    OP_LTE          shift, and go to state 45
    OP_GTE          shift, and go to state 46
    OP_EQ           shift, and go to state 47
    OP_PLUS_EQ      shift, and go to state 48
    OP_MINUS_EQ     shift, and go to state 49
    OP_TIMES_EQ     shift, and go to state 50
    OP_DIVIDE_EQ    shift, and go to state 51
    OP_MOD_EQ       shift, and go to state 52

    OP_PLUS         [reduce using rule 28 (EXPR)]
    OP_MINUS        [reduce using rule 28 (EXPR)]
    OP_TIMES        [reduce using rule 28 (EXPR)]
    OP_DIVIDE       [reduce using rule 28 (EXPR)]
    OP_MOD          [reduce using rule 28 (EXPR)]
    OP_LOGICAL_OR   [reduce using rule 28 (EXPR)]
    OP_LOGICAL_AND  [reduce using rule 28 (EXPR)]
    OP_EQ_EQ        [reduce using rule 28 (EXPR)]
    OP_NEQ          [reduce using rule 28 (EXPR)]
    OP_LT           [reduce using rule 28 (EXPR)]
    OP_GT           [reduce using rule 28 (EXPR)]
    OP_LTE          [reduce using rule 28 (EXPR)]
    OP_GTE          [reduce using rule 28 (EXPR)]
    OP_EQ           [reduce using rule 28 (EXPR)]
    OP_PLUS_EQ      [reduce using rule 28 (EXPR)]
    OP_MINUS_EQ     [reduce using rule 28 (EXPR)]
    OP_TIMES_EQ     [reduce using rule 28 (EXPR)]
    OP_DIVIDE_EQ    [reduce using rule 28 (EXPR)]
    OP_MOD_EQ       [reduce using rule 28 (EXPR)]
    $default        reduce using rule 28 (EXPR)


State 64

   15 EXPR: EXPR . OP_PLUS EXPR
   16     | EXPR . OP_MINUS EXPR
   17     | EXPR . OP_TIMES EXPR
   18     | EXPR . OP_DIVIDE EXPR
   19     | EXPR . OP_MOD EXPR
   20     | EXPR . OP_LT EXPR
   21     | EXPR . OP_GT EXPR
   22     | EXPR . OP_LTE EXPR
   23     | EXPR . OP_GTE EXPR
   24     | EXPR . OP_EQ_EQ EXPR
   25     | EXPR . OP_NEQ EXPR
   27     | EXPR . OP_LOGICAL_AND EXPR
   27     | EXPR OP_LOGICAL_AND EXPR .
   28     | EXPR . OP_LOGICAL_OR EXPR
   29     | EXPR . OP_EQ EXPR
   30     | EXPR . OP_PLUS_EQ EXPR
   31     | EXPR . OP_MINUS_EQ EXPR
   32     | EXPR . OP_TIMES_EQ EXPR
   33     | EXPR . OP_DIVIDE_EQ EXPR
   34     | EXPR . OP_MOD_EQ EXPR

    OP_PLUS         shift, and go to state 34
    OP_MINUS        shift, and go to state 35
    OP_TIMES        shift, and go to state 36
    OP_DIVIDE       shift, and go to state 37
    OP_MOD          shift, and go to state 38
    OP_LOGICAL_OR   shift, and go to state 39
    OP_LOGICAL_AND  shift, and go to state 40
    OP_EQ_EQ        shift, and go to state 41
    OP_NEQ          shift, and go to state 42
    OP_LT           shift, and go to state 43
    OP_GT           shift, and go to state 44
    OP_LTE          shift, and go to state 45
    OP_GTE          shift, and go to state 46
    OP_EQ           shift, and go to state 47
    OP_PLUS_EQ      shift, and go to state 48
    OP_MINUS_EQ     shift, and go to state 49
    OP_TIMES_EQ     shift, and go to state 50
    OP_DIVIDE_EQ    shift, and go to state 51
    OP_MOD_EQ       shift, and go to state 52

    OP_PLUS         [reduce using rule 27 (EXPR)]
    OP_MINUS        [reduce using rule 27 (EXPR)]
    OP_TIMES        [reduce using rule 27 (EXPR)]
    OP_DIVIDE       [reduce using rule 27 (EXPR)]
    OP_MOD          [reduce using rule 27 (EXPR)]
    OP_LOGICAL_OR   [reduce using rule 27 (EXPR)]
    OP_LOGICAL_AND  [reduce using rule 27 (EXPR)]
    OP_EQ_EQ        [reduce using rule 27 (EXPR)]
    OP_NEQ          [reduce using rule 27 (EXPR)]
    OP_LT           [reduce using rule 27 (EXPR)]
    OP_GT           [reduce using rule 27 (EXPR)]
    OP_LTE          [reduce using rule 27 (EXPR)]
    OP_GTE          [reduce using rule 27 (EXPR)]
    OP_EQ           [reduce using rule 27 (EXPR)]
    OP_PLUS_EQ      [reduce using rule 27 (EXPR)]
    OP_MINUS_EQ     [reduce using rule 27 (EXPR)]
    OP_TIMES_EQ     [reduce using rule 27 (EXPR)]
    OP_DIVIDE_EQ    [reduce using rule 27 (EXPR)]
    OP_MOD_EQ       [reduce using rule 27 (EXPR)]
    $default        reduce using rule 27 (EXPR)


State 65

   15 EXPR: EXPR . OP_PLUS EXPR
   16     | EXPR . OP_MINUS EXPR
   17     | EXPR . OP_TIMES EXPR
   18     | EXPR . OP_DIVIDE EXPR
   19     | EXPR . OP_MOD EXPR
   20     | EXPR . OP_LT EXPR
   21     | EXPR . OP_GT EXPR
   22     | EXPR . OP_LTE EXPR
   23     | EXPR . OP_GTE EXPR
   24     | EXPR . OP_EQ_EQ EXPR
   24     | EXPR OP_EQ_EQ EXPR .
   25     | EXPR . OP_NEQ EXPR
   27     | EXPR . OP_LOGICAL_AND EXPR
   28     | EXPR . OP_LOGICAL_OR EXPR
   29     | EXPR . OP_EQ EXPR
   30     | EXPR . OP_PLUS_EQ EXPR
   31     | EXPR . OP_MINUS_EQ EXPR
   32     | EXPR . OP_TIMES_EQ EXPR
   33     | EXPR . OP_DIVIDE_EQ EXPR
   34     | EXPR . OP_MOD_EQ EXPR

    OP_PLUS         shift, and go to state 34
    OP_MINUS        shift, and go to state 35
    OP_TIMES        shift, and go to state 36
    OP_DIVIDE       shift, and go to state 37
    OP_MOD          shift, and go to state 38
    OP_LOGICAL_OR   shift, and go to state 39
    OP_LOGICAL_AND  shift, and go to state 40
    OP_EQ_EQ        shift, and go to state 41
    OP_NEQ          shift, and go to state 42
    OP_LT           shift, and go to state 43
    OP_GT           shift, and go to state 44
    OP_LTE          shift, and go to state 45
    OP_GTE          shift, and go to state 46
    OP_EQ           shift, and go to state 47
    OP_PLUS_EQ      shift, and go to state 48
    OP_MINUS_EQ     shift, and go to state 49
    OP_TIMES_EQ     shift, and go to state 50
    OP_DIVIDE_EQ    shift, and go to state 51
    OP_MOD_EQ       shift, and go to state 52

    OP_PLUS         [reduce using rule 24 (EXPR)]
    OP_MINUS        [reduce using rule 24 (EXPR)]
    OP_TIMES        [reduce using rule 24 (EXPR)]
    OP_DIVIDE       [reduce using rule 24 (EXPR)]
    OP_MOD          [reduce using rule 24 (EXPR)]
    OP_LOGICAL_OR   [reduce using rule 24 (EXPR)]
    OP_LOGICAL_AND  [reduce using rule 24 (EXPR)]
    OP_EQ_EQ        [reduce using rule 24 (EXPR)]
    OP_NEQ          [reduce using rule 24 (EXPR)]
    OP_LT           [reduce using rule 24 (EXPR)]
    OP_GT           [reduce using rule 24 (EXPR)]
    OP_LTE          [reduce using rule 24 (EXPR)]
    OP_GTE          [reduce using rule 24 (EXPR)]
    OP_EQ           [reduce using rule 24 (EXPR)]
    OP_PLUS_EQ      [reduce using rule 24 (EXPR)]
    OP_MINUS_EQ     [reduce using rule 24 (EXPR)]
    OP_TIMES_EQ     [reduce using rule 24 (EXPR)]
    OP_DIVIDE_EQ    [reduce using rule 24 (EXPR)]
    OP_MOD_EQ       [reduce using rule 24 (EXPR)]
    $default        reduce using rule 24 (EXPR)


State 66

   15 EXPR: EXPR . OP_PLUS EXPR
   16     | EXPR . OP_MINUS EXPR
   17     | EXPR . OP_TIMES EXPR
   18     | EXPR . OP_DIVIDE EXPR
   19     | EXPR . OP_MOD EXPR
   20     | EXPR . OP_LT EXPR
   21     | EXPR . OP_GT EXPR
   22     | EXPR . OP_LTE EXPR
   23     | EXPR . OP_GTE EXPR
   24     | EXPR . OP_EQ_EQ EXPR
   25     | EXPR . OP_NEQ EXPR
   25     | EXPR OP_NEQ EXPR .
   27     | EXPR . OP_LOGICAL_AND EXPR
   28     | EXPR . OP_LOGICAL_OR EXPR
   29     | EXPR . OP_EQ EXPR
   30     | EXPR . OP_PLUS_EQ EXPR
   31     | EXPR . OP_MINUS_EQ EXPR
   32     | EXPR . OP_TIMES_EQ EXPR
   33     | EXPR . OP_DIVIDE_EQ EXPR
   34     | EXPR . OP_MOD_EQ EXPR

    OP_PLUS         shift, and go to state 34
    OP_MINUS        shift, and go to state 35
    OP_TIMES        shift, and go to state 36
    OP_DIVIDE       shift, and go to state 37
    OP_MOD          shift, and go to state 38
    OP_LOGICAL_OR   shift, and go to state 39
    OP_LOGICAL_AND  shift, and go to state 40
    OP_EQ_EQ        shift, and go to state 41
    OP_NEQ          shift, and go to state 42
    OP_LT           shift, and go to state 43
    OP_GT           shift, and go to state 44
    OP_LTE          shift, and go to state 45
    OP_GTE          shift, and go to state 46
    OP_EQ           shift, and go to state 47
    OP_PLUS_EQ      shift, and go to state 48
    OP_MINUS_EQ     shift, and go to state 49
    OP_TIMES_EQ     shift, and go to state 50
    OP_DIVIDE_EQ    shift, and go to state 51
    OP_MOD_EQ       shift, and go to state 52

    OP_PLUS         [reduce using rule 25 (EXPR)]
    OP_MINUS        [reduce using rule 25 (EXPR)]
    OP_TIMES        [reduce using rule 25 (EXPR)]
    OP_DIVIDE       [reduce using rule 25 (EXPR)]
    OP_MOD          [reduce using rule 25 (EXPR)]
    OP_LOGICAL_OR   [reduce using rule 25 (EXPR)]
    OP_LOGICAL_AND  [reduce using rule 25 (EXPR)]
    OP_EQ_EQ        [reduce using rule 25 (EXPR)]
    OP_NEQ          [reduce using rule 25 (EXPR)]
    OP_LT           [reduce using rule 25 (EXPR)]
    OP_GT           [reduce using rule 25 (EXPR)]
    OP_LTE          [reduce using rule 25 (EXPR)]
    OP_GTE          [reduce using rule 25 (EXPR)]
    OP_EQ           [reduce using rule 25 (EXPR)]
    OP_PLUS_EQ      [reduce using rule 25 (EXPR)]
    OP_MINUS_EQ     [reduce using rule 25 (EXPR)]
    OP_TIMES_EQ     [reduce using rule 25 (EXPR)]
    OP_DIVIDE_EQ    [reduce using rule 25 (EXPR)]
    OP_MOD_EQ       [reduce using rule 25 (EXPR)]
    $default        reduce using rule 25 (EXPR)


State 67

   15 EXPR: EXPR . OP_PLUS EXPR
   16     | EXPR . OP_MINUS EXPR
   17     | EXPR . OP_TIMES EXPR
   18     | EXPR . OP_DIVIDE EXPR
   19     | EXPR . OP_MOD EXPR
   20     | EXPR . OP_LT EXPR
   20     | EXPR OP_LT EXPR .
   21     | EXPR . OP_GT EXPR
   22     | EXPR . OP_LTE EXPR
   23     | EXPR . OP_GTE EXPR
   24     | EXPR . OP_EQ_EQ EXPR
   25     | EXPR . OP_NEQ EXPR
   27     | EXPR . OP_LOGICAL_AND EXPR
   28     | EXPR . OP_LOGICAL_OR EXPR
   29     | EXPR . OP_EQ EXPR
   30     | EXPR . OP_PLUS_EQ EXPR
   31     | EXPR . OP_MINUS_EQ EXPR
   32     | EXPR . OP_TIMES_EQ EXPR
   33     | EXPR . OP_DIVIDE_EQ EXPR
   34     | EXPR . OP_MOD_EQ EXPR

    OP_PLUS         shift, and go to state 34
    OP_MINUS        shift, and go to state 35
    OP_TIMES        shift, and go to state 36
    OP_DIVIDE       shift, and go to state 37
    OP_MOD          shift, and go to state 38
    OP_LOGICAL_OR   shift, and go to state 39
    OP_LOGICAL_AND  shift, and go to state 40
    OP_EQ_EQ        shift, and go to state 41
    OP_NEQ          shift, and go to state 42
    OP_LT           shift, and go to state 43
    OP_GT           shift, and go to state 44
    OP_LTE          shift, and go to state 45
    OP_GTE          shift, and go to state 46
    OP_EQ           shift, and go to state 47
    OP_PLUS_EQ      shift, and go to state 48
    OP_MINUS_EQ     shift, and go to state 49
    OP_TIMES_EQ     shift, and go to state 50
    OP_DIVIDE_EQ    shift, and go to state 51
    OP_MOD_EQ       shift, and go to state 52

    OP_PLUS         [reduce using rule 20 (EXPR)]
    OP_MINUS        [reduce using rule 20 (EXPR)]
    OP_TIMES        [reduce using rule 20 (EXPR)]
    OP_DIVIDE       [reduce using rule 20 (EXPR)]
    OP_MOD          [reduce using rule 20 (EXPR)]
    OP_LOGICAL_OR   [reduce using rule 20 (EXPR)]
    OP_LOGICAL_AND  [reduce using rule 20 (EXPR)]
    OP_EQ_EQ        [reduce using rule 20 (EXPR)]
    OP_NEQ          [reduce using rule 20 (EXPR)]
    OP_LT           [reduce using rule 20 (EXPR)]
    OP_GT           [reduce using rule 20 (EXPR)]
    OP_LTE          [reduce using rule 20 (EXPR)]
    OP_GTE          [reduce using rule 20 (EXPR)]
    OP_EQ           [reduce using rule 20 (EXPR)]
    OP_PLUS_EQ      [reduce using rule 20 (EXPR)]
    OP_MINUS_EQ     [reduce using rule 20 (EXPR)]
    OP_TIMES_EQ     [reduce using rule 20 (EXPR)]
    OP_DIVIDE_EQ    [reduce using rule 20 (EXPR)]
    OP_MOD_EQ       [reduce using rule 20 (EXPR)]
    $default        reduce using rule 20 (EXPR)


State 68

   15 EXPR: EXPR . OP_PLUS EXPR
   16     | EXPR . OP_MINUS EXPR
   17     | EXPR . OP_TIMES EXPR
   18     | EXPR . OP_DIVIDE EXPR
   19     | EXPR . OP_MOD EXPR
   20     | EXPR . OP_LT EXPR
   21     | EXPR . OP_GT EXPR
   21     | EXPR OP_GT EXPR .
   22     | EXPR . OP_LTE EXPR
   23     | EXPR . OP_GTE EXPR
   24     | EXPR . OP_EQ_EQ EXPR
   25     | EXPR . OP_NEQ EXPR
   27     | EXPR . OP_LOGICAL_AND EXPR
   28     | EXPR . OP_LOGICAL_OR EXPR
   29     | EXPR . OP_EQ EXPR
   30     | EXPR . OP_PLUS_EQ EXPR
   31     | EXPR . OP_MINUS_EQ EXPR
   32     | EXPR . OP_TIMES_EQ EXPR
   33     | EXPR . OP_DIVIDE_EQ EXPR
   34     | EXPR . OP_MOD_EQ EXPR

    OP_PLUS         shift, and go to state 34
    OP_MINUS        shift, and go to state 35
    OP_TIMES        shift, and go to state 36
    OP_DIVIDE       shift, and go to state 37
    OP_MOD          shift, and go to state 38
    OP_LOGICAL_OR   shift, and go to state 39
    OP_LOGICAL_AND  shift, and go to state 40
    OP_EQ_EQ        shift, and go to state 41
    OP_NEQ          shift, and go to state 42
    OP_LT           shift, and go to state 43
    OP_GT           shift, and go to state 44
    OP_LTE          shift, and go to state 45
    OP_GTE          shift, and go to state 46
    OP_EQ           shift, and go to state 47
    OP_PLUS_EQ      shift, and go to state 48
    OP_MINUS_EQ     shift, and go to state 49
    OP_TIMES_EQ     shift, and go to state 50
    OP_DIVIDE_EQ    shift, and go to state 51
    OP_MOD_EQ       shift, and go to state 52

    OP_PLUS         [reduce using rule 21 (EXPR)]
    OP_MINUS        [reduce using rule 21 (EXPR)]
    OP_TIMES        [reduce using rule 21 (EXPR)]
    OP_DIVIDE       [reduce using rule 21 (EXPR)]
    OP_MOD          [reduce using rule 21 (EXPR)]
    OP_LOGICAL_OR   [reduce using rule 21 (EXPR)]
    OP_LOGICAL_AND  [reduce using rule 21 (EXPR)]
    OP_EQ_EQ        [reduce using rule 21 (EXPR)]
    OP_NEQ          [reduce using rule 21 (EXPR)]
    OP_LT           [reduce using rule 21 (EXPR)]
    OP_GT           [reduce using rule 21 (EXPR)]
    OP_LTE          [reduce using rule 21 (EXPR)]
    OP_GTE          [reduce using rule 21 (EXPR)]
    OP_EQ           [reduce using rule 21 (EXPR)]
    OP_PLUS_EQ      [reduce using rule 21 (EXPR)]
    OP_MINUS_EQ     [reduce using rule 21 (EXPR)]
    OP_TIMES_EQ     [reduce using rule 21 (EXPR)]
    OP_DIVIDE_EQ    [reduce using rule 21 (EXPR)]
    OP_MOD_EQ       [reduce using rule 21 (EXPR)]
    $default        reduce using rule 21 (EXPR)


State 69

   15 EXPR: EXPR . OP_PLUS EXPR
   16     | EXPR . OP_MINUS EXPR
   17     | EXPR . OP_TIMES EXPR
   18     | EXPR . OP_DIVIDE EXPR
   19     | EXPR . OP_MOD EXPR
   20     | EXPR . OP_LT EXPR
   21     | EXPR . OP_GT EXPR
   22     | EXPR . OP_LTE EXPR
   22     | EXPR OP_LTE EXPR .
   23     | EXPR . OP_GTE EXPR
   24     | EXPR . OP_EQ_EQ EXPR
   25     | EXPR . OP_NEQ EXPR
   27     | EXPR . OP_LOGICAL_AND EXPR
   28     | EXPR . OP_LOGICAL_OR EXPR
   29     | EXPR . OP_EQ EXPR
   30     | EXPR . OP_PLUS_EQ EXPR
   31     | EXPR . OP_MINUS_EQ EXPR
   32     | EXPR . OP_TIMES_EQ EXPR
   33     | EXPR . OP_DIVIDE_EQ EXPR
   34     | EXPR . OP_MOD_EQ EXPR

    OP_PLUS         shift, and go to state 34
    OP_MINUS        shift, and go to state 35
    OP_TIMES        shift, and go to state 36
    OP_DIVIDE       shift, and go to state 37
    OP_MOD          shift, and go to state 38
    OP_LOGICAL_OR   shift, and go to state 39
    OP_LOGICAL_AND  shift, and go to state 40
    OP_EQ_EQ        shift, and go to state 41
    OP_NEQ          shift, and go to state 42
    OP_LT           shift, and go to state 43
    OP_GT           shift, and go to state 44
    OP_LTE          shift, and go to state 45
    OP_GTE          shift, and go to state 46
    OP_EQ           shift, and go to state 47
    OP_PLUS_EQ      shift, and go to state 48
    OP_MINUS_EQ     shift, and go to state 49
    OP_TIMES_EQ     shift, and go to state 50
    OP_DIVIDE_EQ    shift, and go to state 51
    OP_MOD_EQ       shift, and go to state 52

    OP_PLUS         [reduce using rule 22 (EXPR)]
    OP_MINUS        [reduce using rule 22 (EXPR)]
    OP_TIMES        [reduce using rule 22 (EXPR)]
    OP_DIVIDE       [reduce using rule 22 (EXPR)]
    OP_MOD          [reduce using rule 22 (EXPR)]
    OP_LOGICAL_OR   [reduce using rule 22 (EXPR)]
    OP_LOGICAL_AND  [reduce using rule 22 (EXPR)]
    OP_EQ_EQ        [reduce using rule 22 (EXPR)]
    OP_NEQ          [reduce using rule 22 (EXPR)]
    OP_LT           [reduce using rule 22 (EXPR)]
    OP_GT           [reduce using rule 22 (EXPR)]
    OP_LTE          [reduce using rule 22 (EXPR)]
    OP_GTE          [reduce using rule 22 (EXPR)]
    OP_EQ           [reduce using rule 22 (EXPR)]
    OP_PLUS_EQ      [reduce using rule 22 (EXPR)]
    OP_MINUS_EQ     [reduce using rule 22 (EXPR)]
    OP_TIMES_EQ     [reduce using rule 22 (EXPR)]
    OP_DIVIDE_EQ    [reduce using rule 22 (EXPR)]
    OP_MOD_EQ       [reduce using rule 22 (EXPR)]
    $default        reduce using rule 22 (EXPR)


State 70

   15 EXPR: EXPR . OP_PLUS EXPR
   16     | EXPR . OP_MINUS EXPR
   17     | EXPR . OP_TIMES EXPR
   18     | EXPR . OP_DIVIDE EXPR
   19     | EXPR . OP_MOD EXPR
   20     | EXPR . OP_LT EXPR
   21     | EXPR . OP_GT EXPR
   22     | EXPR . OP_LTE EXPR
   23     | EXPR . OP_GTE EXPR
   23     | EXPR OP_GTE EXPR .
   24     | EXPR . OP_EQ_EQ EXPR
   25     | EXPR . OP_NEQ EXPR
   27     | EXPR . OP_LOGICAL_AND EXPR
   28     | EXPR . OP_LOGICAL_OR EXPR
   29     | EXPR . OP_EQ EXPR
   30     | EXPR . OP_PLUS_EQ EXPR
   31     | EXPR . OP_MINUS_EQ EXPR
   32     | EXPR . OP_TIMES_EQ EXPR
   33     | EXPR . OP_DIVIDE_EQ EXPR
   34     | EXPR . OP_MOD_EQ EXPR

    OP_PLUS         shift, and go to state 34
    OP_MINUS        shift, and go to state 35
    OP_TIMES        shift, and go to state 36
    OP_DIVIDE       shift, and go to state 37
    OP_MOD          shift, and go to state 38
    OP_LOGICAL_OR   shift, and go to state 39
    OP_LOGICAL_AND  shift, and go to state 40
    OP_EQ_EQ        shift, and go to state 41
    OP_NEQ          shift, and go to state 42
    OP_LT           shift, and go to state 43
    OP_GT           shift, and go to state 44
    OP_LTE          shift, and go to state 45
    OP_GTE          shift, and go to state 46
    OP_EQ           shift, and go to state 47
    OP_PLUS_EQ      shift, and go to state 48
    OP_MINUS_EQ     shift, and go to state 49
    OP_TIMES_EQ     shift, and go to state 50
    OP_DIVIDE_EQ    shift, and go to state 51
    OP_MOD_EQ       shift, and go to state 52

    OP_PLUS         [reduce using rule 23 (EXPR)]
    OP_MINUS        [reduce using rule 23 (EXPR)]
    OP_TIMES        [reduce using rule 23 (EXPR)]
    OP_DIVIDE       [reduce using rule 23 (EXPR)]
    OP_MOD          [reduce using rule 23 (EXPR)]
    OP_LOGICAL_OR   [reduce using rule 23 (EXPR)]
    OP_LOGICAL_AND  [reduce using rule 23 (EXPR)]
    OP_EQ_EQ        [reduce using rule 23 (EXPR)]
    OP_NEQ          [reduce using rule 23 (EXPR)]
    OP_LT           [reduce using rule 23 (EXPR)]
    OP_GT           [reduce using rule 23 (EXPR)]
    OP_LTE          [reduce using rule 23 (EXPR)]
    OP_GTE          [reduce using rule 23 (EXPR)]
    OP_EQ           [reduce using rule 23 (EXPR)]
    OP_PLUS_EQ      [reduce using rule 23 (EXPR)]
    OP_MINUS_EQ     [reduce using rule 23 (EXPR)]
    OP_TIMES_EQ     [reduce using rule 23 (EXPR)]
    OP_DIVIDE_EQ    [reduce using rule 23 (EXPR)]
    OP_MOD_EQ       [reduce using rule 23 (EXPR)]
    $default        reduce using rule 23 (EXPR)


State 71

   15 EXPR: EXPR . OP_PLUS EXPR
   16     | EXPR . OP_MINUS EXPR
   17     | EXPR . OP_TIMES EXPR
   18     | EXPR . OP_DIVIDE EXPR
   19     | EXPR . OP_MOD EXPR
   20     | EXPR . OP_LT EXPR
   21     | EXPR . OP_GT EXPR
   22     | EXPR . OP_LTE EXPR
   23     | EXPR . OP_GTE EXPR
   24     | EXPR . OP_EQ_EQ EXPR
   25     | EXPR . OP_NEQ EXPR
   27     | EXPR . OP_LOGICAL_AND EXPR
   28     | EXPR . OP_LOGICAL_OR EXPR
   29     | EXPR . OP_EQ EXPR
   29     | EXPR OP_EQ EXPR .
   30     | EXPR . OP_PLUS_EQ EXPR
   31     | EXPR . OP_MINUS_EQ EXPR
   32     | EXPR . OP_TIMES_EQ EXPR
   33     | EXPR . OP_DIVIDE_EQ EXPR
   34     | EXPR . OP_MOD_EQ EXPR

    OP_PLUS         shift, and go to state 34
    OP_MINUS        shift, and go to state 35
    OP_TIMES        shift, and go to state 36
    OP_DIVIDE       shift, and go to state 37
    OP_MOD          shift, and go to state 38
    OP_LOGICAL_OR   shift, and go to state 39
    OP_LOGICAL_AND  shift, and go to state 40
    OP_EQ_EQ        shift, and go to state 41
    OP_NEQ          shift, and go to state 42
    OP_LT           shift, and go to state 43
    OP_GT           shift, and go to state 44
    OP_LTE          shift, and go to state 45
    OP_GTE          shift, and go to state 46
    OP_EQ           shift, and go to state 47

    OP_LOGICAL_OR   [reduce using rule 29 (EXPR)]
    OP_LOGICAL_AND  [reduce using rule 29 (EXPR)]
    OP_EQ_EQ        [reduce using rule 29 (EXPR)]
    OP_NEQ          [reduce using rule 29 (EXPR)]
    OP_LT           [reduce using rule 29 (EXPR)]
    OP_GT           [reduce using rule 29 (EXPR)]
    OP_LTE          [reduce using rule 29 (EXPR)]
    OP_GTE          [reduce using rule 29 (EXPR)]
    $default        reduce using rule 29 (EXPR)


State 72

   15 EXPR: EXPR . OP_PLUS EXPR
   16     | EXPR . OP_MINUS EXPR
   17     | EXPR . OP_TIMES EXPR
   18     | EXPR . OP_DIVIDE EXPR
   19     | EXPR . OP_MOD EXPR
   20     | EXPR . OP_LT EXPR
   21     | EXPR . OP_GT EXPR
   22     | EXPR . OP_LTE EXPR
   23     | EXPR . OP_GTE EXPR
   24     | EXPR . OP_EQ_EQ EXPR
   25     | EXPR . OP_NEQ EXPR
   27     | EXPR . OP_LOGICAL_AND EXPR
   28     | EXPR . OP_LOGICAL_OR EXPR
   29     | EXPR . OP_EQ EXPR
   30     | EXPR . OP_PLUS_EQ EXPR
   30     | EXPR OP_PLUS_EQ EXPR .
   31     | EXPR . OP_MINUS_EQ EXPR
   32     | EXPR . OP_TIMES_EQ EXPR
   33     | EXPR . OP_DIVIDE_EQ EXPR
   34     | EXPR . OP_MOD_EQ EXPR

    OP_PLUS         shift, and go to state 34
    OP_MINUS        shift, and go to state 35
    OP_TIMES        shift, and go to state 36
    OP_DIVIDE       shift, and go to state 37
    OP_MOD          shift, and go to state 38
    OP_LOGICAL_OR   shift, and go to state 39
    OP_LOGICAL_AND  shift, and go to state 40
    OP_EQ_EQ        shift, and go to state 41
    OP_NEQ          shift, and go to state 42
    OP_LT           shift, and go to state 43
    OP_GT           shift, and go to state 44
    OP_LTE          shift, and go to state 45
    OP_GTE          shift, and go to state 46
    OP_EQ           shift, and go to state 47
    OP_PLUS_EQ      shift, and go to state 48
    OP_MINUS_EQ     shift, and go to state 49

    OP_LOGICAL_OR   [reduce using rule 30 (EXPR)]
    OP_LOGICAL_AND  [reduce using rule 30 (EXPR)]
    OP_EQ_EQ        [reduce using rule 30 (EXPR)]
    OP_NEQ          [reduce using rule 30 (EXPR)]
    OP_LT           [reduce using rule 30 (EXPR)]
    OP_GT           [reduce using rule 30 (EXPR)]
    OP_LTE          [reduce using rule 30 (EXPR)]
    OP_GTE          [reduce using rule 30 (EXPR)]
    $default        reduce using rule 30 (EXPR)


State 73

   15 EXPR: EXPR . OP_PLUS EXPR
   16     | EXPR . OP_MINUS EXPR
   17     | EXPR . OP_TIMES EXPR
   18     | EXPR . OP_DIVIDE EXPR
   19     | EXPR . OP_MOD EXPR
   20     | EXPR . OP_LT EXPR
   21     | EXPR . OP_GT EXPR
   22     | EXPR . OP_LTE EXPR
   23     | EXPR . OP_GTE EXPR
   24     | EXPR . OP_EQ_EQ EXPR
   25     | EXPR . OP_NEQ EXPR
   27     | EXPR . OP_LOGICAL_AND EXPR
   28     | EXPR . OP_LOGICAL_OR EXPR
   29     | EXPR . OP_EQ EXPR
   30     | EXPR . OP_PLUS_EQ EXPR
   31     | EXPR . OP_MINUS_EQ EXPR
   31     | EXPR OP_MINUS_EQ EXPR .
   32     | EXPR . OP_TIMES_EQ EXPR
   33     | EXPR . OP_DIVIDE_EQ EXPR
   34     | EXPR . OP_MOD_EQ EXPR

    OP_PLUS         shift, and go to state 34
    OP_MINUS        shift, and go to state 35
    OP_TIMES        shift, and go to state 36
    OP_DIVIDE       shift, and go to state 37
    OP_MOD          shift, and go to state 38
    OP_LOGICAL_OR   shift, and go to state 39
    OP_LOGICAL_AND  shift, and go to state 40
    OP_EQ_EQ        shift, and go to state 41
    OP_NEQ          shift, and go to state 42
    OP_LT           shift, and go to state 43
    OP_GT           shift, and go to state 44
    OP_LTE          shift, and go to state 45
    OP_GTE          shift, and go to state 46
    OP_EQ           shift, and go to state 47
    OP_PLUS_EQ      shift, and go to state 48
    OP_MINUS_EQ     shift, and go to state 49

    OP_LOGICAL_OR   [reduce using rule 31 (EXPR)]
    OP_LOGICAL_AND  [reduce using rule 31 (EXPR)]
    OP_EQ_EQ        [reduce using rule 31 (EXPR)]
    OP_NEQ          [reduce using rule 31 (EXPR)]
    OP_LT           [reduce using rule 31 (EXPR)]
    OP_GT           [reduce using rule 31 (EXPR)]
    OP_LTE          [reduce using rule 31 (EXPR)]
    OP_GTE          [reduce using rule 31 (EXPR)]
    $default        reduce using rule 31 (EXPR)


State 74

   15 EXPR: EXPR . OP_PLUS EXPR
   16     | EXPR . OP_MINUS EXPR
   17     | EXPR . OP_TIMES EXPR
   18     | EXPR . OP_DIVIDE EXPR
   19     | EXPR . OP_MOD EXPR
   20     | EXPR . OP_LT EXPR
   21     | EXPR . OP_GT EXPR
   22     | EXPR . OP_LTE EXPR
   23     | EXPR . OP_GTE EXPR
   24     | EXPR . OP_EQ_EQ EXPR
   25     | EXPR . OP_NEQ EXPR
   27     | EXPR . OP_LOGICAL_AND EXPR
   28     | EXPR . OP_LOGICAL_OR EXPR
   29     | EXPR . OP_EQ EXPR
   30     | EXPR . OP_PLUS_EQ EXPR
   31     | EXPR . OP_MINUS_EQ EXPR
   32     | EXPR . OP_TIMES_EQ EXPR
   32     | EXPR OP_TIMES_EQ EXPR .
   33     | EXPR . OP_DIVIDE_EQ EXPR
   34     | EXPR . OP_MOD_EQ EXPR

    OP_PLUS         shift, and go to state 34
    OP_MINUS        shift, and go to state 35
    OP_TIMES        shift, and go to state 36
    OP_DIVIDE       shift, and go to state 37
    OP_MOD          shift, and go to state 38
    OP_LOGICAL_OR   shift, and go to state 39
    OP_LOGICAL_AND  shift, and go to state 40
    OP_EQ_EQ        shift, and go to state 41
    OP_NEQ          shift, and go to state 42
    OP_LT           shift, and go to state 43
    OP_GT           shift, and go to state 44
    OP_LTE          shift, and go to state 45
    OP_GTE          shift, and go to state 46
    OP_EQ           shift, and go to state 47
    OP_PLUS_EQ      shift, and go to state 48
    OP_MINUS_EQ     shift, and go to state 49
    OP_TIMES_EQ     shift, and go to state 50
    OP_DIVIDE_EQ    shift, and go to state 51
    OP_MOD_EQ       shift, and go to state 52

    OP_LOGICAL_OR   [reduce using rule 32 (EXPR)]
    OP_LOGICAL_AND  [reduce using rule 32 (EXPR)]
    OP_EQ_EQ        [reduce using rule 32 (EXPR)]
    OP_NEQ          [reduce using rule 32 (EXPR)]
    OP_LT           [reduce using rule 32 (EXPR)]
    OP_GT           [reduce using rule 32 (EXPR)]
    OP_LTE          [reduce using rule 32 (EXPR)]
    OP_GTE          [reduce using rule 32 (EXPR)]
    $default        reduce using rule 32 (EXPR)


State 75

   15 EXPR: EXPR . OP_PLUS EXPR
   16     | EXPR . OP_MINUS EXPR
   17     | EXPR . OP_TIMES EXPR
   18     | EXPR . OP_DIVIDE EXPR
   19     | EXPR . OP_MOD EXPR
   20     | EXPR . OP_LT EXPR
   21     | EXPR . OP_GT EXPR
   22     | EXPR . OP_LTE EXPR
   23     | EXPR . OP_GTE EXPR
   24     | EXPR . OP_EQ_EQ EXPR
   25     | EXPR . OP_NEQ EXPR
   27     | EXPR . OP_LOGICAL_AND EXPR
   28     | EXPR . OP_LOGICAL_OR EXPR
   29     | EXPR . OP_EQ EXPR
   30     | EXPR . OP_PLUS_EQ EXPR
   31     | EXPR . OP_MINUS_EQ EXPR
   32     | EXPR . OP_TIMES_EQ EXPR
   33     | EXPR . OP_DIVIDE_EQ EXPR
   33     | EXPR OP_DIVIDE_EQ EXPR .
   34     | EXPR . OP_MOD_EQ EXPR

    OP_PLUS         shift, and go to state 34
    OP_MINUS        shift, and go to state 35
    OP_TIMES        shift, and go to state 36
    OP_DIVIDE       shift, and go to state 37
    OP_MOD          shift, and go to state 38
    OP_LOGICAL_OR   shift, and go to state 39
    OP_LOGICAL_AND  shift, and go to state 40
    OP_EQ_EQ        shift, and go to state 41
    OP_NEQ          shift, and go to state 42
    OP_LT           shift, and go to state 43
    OP_GT           shift, and go to state 44
    OP_LTE          shift, and go to state 45
    OP_GTE          shift, and go to state 46
    OP_EQ           shift, and go to state 47
    OP_PLUS_EQ      shift, and go to state 48
    OP_MINUS_EQ     shift, and go to state 49
    OP_TIMES_EQ     shift, and go to state 50
    OP_DIVIDE_EQ    shift, and go to state 51
    OP_MOD_EQ       shift, and go to state 52

    OP_LOGICAL_OR   [reduce using rule 33 (EXPR)]
    OP_LOGICAL_AND  [reduce using rule 33 (EXPR)]
    OP_EQ_EQ        [reduce using rule 33 (EXPR)]
    OP_NEQ          [reduce using rule 33 (EXPR)]
    OP_LT           [reduce using rule 33 (EXPR)]
    OP_GT           [reduce using rule 33 (EXPR)]
    OP_LTE          [reduce using rule 33 (EXPR)]
    OP_GTE          [reduce using rule 33 (EXPR)]
    $default        reduce using rule 33 (EXPR)


State 76

   15 EXPR: EXPR . OP_PLUS EXPR
   16     | EXPR . OP_MINUS EXPR
   17     | EXPR . OP_TIMES EXPR
   18     | EXPR . OP_DIVIDE EXPR
   19     | EXPR . OP_MOD EXPR
   20     | EXPR . OP_LT EXPR
   21     | EXPR . OP_GT EXPR
   22     | EXPR . OP_LTE EXPR
   23     | EXPR . OP_GTE EXPR
   24     | EXPR . OP_EQ_EQ EXPR
   25     | EXPR . OP_NEQ EXPR
   27     | EXPR . OP_LOGICAL_AND EXPR
   28     | EXPR . OP_LOGICAL_OR EXPR
   29     | EXPR . OP_EQ EXPR
   30     | EXPR . OP_PLUS_EQ EXPR
   31     | EXPR . OP_MINUS_EQ EXPR
   32     | EXPR . OP_TIMES_EQ EXPR
   33     | EXPR . OP_DIVIDE_EQ EXPR
   34     | EXPR . OP_MOD_EQ EXPR
   34     | EXPR OP_MOD_EQ EXPR .

    OP_PLUS         shift, and go to state 34
    OP_MINUS        shift, and go to state 35
    OP_TIMES        shift, and go to state 36
    OP_DIVIDE       shift, and go to state 37
    OP_MOD          shift, and go to state 38
    OP_LOGICAL_OR   shift, and go to state 39
    OP_LOGICAL_AND  shift, and go to state 40
    OP_EQ_EQ        shift, and go to state 41
    OP_NEQ          shift, and go to state 42
    OP_LT           shift, and go to state 43
    OP_GT           shift, and go to state 44
    OP_LTE          shift, and go to state 45
    OP_GTE          shift, and go to state 46
    OP_EQ           shift, and go to state 47
    OP_PLUS_EQ      shift, and go to state 48
    OP_MINUS_EQ     shift, and go to state 49
    OP_TIMES_EQ     shift, and go to state 50
    OP_DIVIDE_EQ    shift, and go to state 51
    OP_MOD_EQ       shift, and go to state 52

    OP_LOGICAL_OR   [reduce using rule 34 (EXPR)]
    OP_LOGICAL_AND  [reduce using rule 34 (EXPR)]
    OP_EQ_EQ        [reduce using rule 34 (EXPR)]
    OP_NEQ          [reduce using rule 34 (EXPR)]
    OP_LT           [reduce using rule 34 (EXPR)]
    OP_GT           [reduce using rule 34 (EXPR)]
    OP_LTE          [reduce using rule 34 (EXPR)]
    OP_GTE          [reduce using rule 34 (EXPR)]
    $default        reduce using rule 34 (EXPR)


State 77

    7 COMPND_STATMNT: T_LBRACE STATMNTS . T_RBRACE
    9 STATMNTS: STATMNTS . STATMNT

    ST_BREAK        shift, and go to state 79
    ST_CONTINUE     shift, and go to state 80
    ST_RETURN       shift, and go to state 81
    ST_IF           shift, and go to state 82
    ST_WHILE        shift, and go to state 83
    OP_LOGICAL_NOT  shift, and go to state 25
    T_LBRACE        shift, and go to state 54
    T_RBRACE        shift, and go to state 84
    T_NUMBER        shift, and go to state 26
    T_STRING        shift, and go to state 27
    T_IDENTIFIER    shift, and go to state 28

    COMPND_STATMNT     go to state 85
    STATMNT            go to state 86
    EXPR               go to state 87
    PRIMARY_EXPR       go to state 30
    JUMP_STATMNT       go to state 88
    SELECTION_STATMNT  go to state 89


State 78

   36 EXPR: T_IDENTIFIER OP_LBRACKET EXPR OP_RBRACKET .

    $default  reduce using rule 36 (EXPR)


State 79

   40 JUMP_STATMNT: ST_BREAK .

    $default  reduce using rule 40 (JUMP_STATMNT)


State 80

   41 JUMP_STATMNT: ST_CONTINUE .

    $default  reduce using rule 41 (JUMP_STATMNT)


State 81

   42 JUMP_STATMNT: ST_RETURN . EXPR
   43             | ST_RETURN .

    OP_LOGICAL_NOT  shift, and go to state 25
    T_NUMBER        shift, and go to state 26
    T_STRING        shift, and go to state 27
    T_IDENTIFIER    shift, and go to state 28

    $default  reduce using rule 43 (JUMP_STATMNT)

    EXPR          go to state 90
    PRIMARY_EXPR  go to state 30


State 82

   44 SELECTION_STATMNT: ST_IF . OP_LBRACKET EXPR OP_RBRACKET STATMNT
   45                  | ST_IF . OP_LBRACKET EXPR OP_RBRACKET STATMNT ST_ELSE STATMNT

    OP_LBRACKET  shift, and go to state 91


State 83

   46 SELECTION_STATMNT: ST_WHILE . OP_LBRACKET EXPR OP_RBRACKET STATMNT

    OP_LBRACKET  shift, and go to state 92


State 84

    7 COMPND_STATMNT: T_LBRACE STATMNTS T_RBRACE .

    $default  reduce using rule 7 (COMPND_STATMNT)


State 85

   11 STATMNT: COMPND_STATMNT .

    $default  reduce using rule 11 (STATMNT)


State 86

    9 STATMNTS: STATMNTS STATMNT .

    $default  reduce using rule 9 (STATMNTS)


State 87

   10 STATMNT: EXPR . T_SEMICOLON
   15 EXPR: EXPR . OP_PLUS EXPR
   16     | EXPR . OP_MINUS EXPR
   17     | EXPR . OP_TIMES EXPR
   18     | EXPR . OP_DIVIDE EXPR
   19     | EXPR . OP_MOD EXPR
   20     | EXPR . OP_LT EXPR
   21     | EXPR . OP_GT EXPR
   22     | EXPR . OP_LTE EXPR
   23     | EXPR . OP_GTE EXPR
   24     | EXPR . OP_EQ_EQ EXPR
   25     | EXPR . OP_NEQ EXPR
   27     | EXPR . OP_LOGICAL_AND EXPR
   28     | EXPR . OP_LOGICAL_OR EXPR
   29     | EXPR . OP_EQ EXPR
   30     | EXPR . OP_PLUS_EQ EXPR
   31     | EXPR . OP_MINUS_EQ EXPR
   32     | EXPR . OP_TIMES_EQ EXPR
   33     | EXPR . OP_DIVIDE_EQ EXPR
   34     | EXPR . OP_MOD_EQ EXPR

    OP_PLUS         shift, and go to state 34
    OP_MINUS        shift, and go to state 35
    OP_TIMES        shift, and go to state 36
    OP_DIVIDE       shift, and go to state 37
    OP_MOD          shift, and go to state 38
    OP_LOGICAL_OR   shift, and go to state 39
    OP_LOGICAL_AND  shift, and go to state 40
    OP_EQ_EQ        shift, and go to state 41
    OP_NEQ          shift, and go to state 42
    OP_LT           shift, and go to state 43
    OP_GT           shift, and go to state 44
    OP_LTE          shift, and go to state 45
    OP_GTE          shift, and go to state 46
    OP_EQ           shift, and go to state 47
    OP_PLUS_EQ      shift, and go to state 48
    OP_MINUS_EQ     shift, and go to state 49
    OP_TIMES_EQ     shift, and go to state 50
    OP_DIVIDE_EQ    shift, and go to state 51
    OP_MOD_EQ       shift, and go to state 52
    T_SEMICOLON     shift, and go to state 93


State 88

   12 STATMNT: JUMP_STATMNT . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 94


State 89

   13 STATMNT: SELECTION_STATMNT .

    $default  reduce using rule 13 (STATMNT)


State 90

   15 EXPR: EXPR . OP_PLUS EXPR
   16     | EXPR . OP_MINUS EXPR
   17     | EXPR . OP_TIMES EXPR
   18     | EXPR . OP_DIVIDE EXPR
   19     | EXPR . OP_MOD EXPR
   20     | EXPR . OP_LT EXPR
   21     | EXPR . OP_GT EXPR
   22     | EXPR . OP_LTE EXPR
   23     | EXPR . OP_GTE EXPR
   24     | EXPR . OP_EQ_EQ EXPR
   25     | EXPR . OP_NEQ EXPR
   27     | EXPR . OP_LOGICAL_AND EXPR
   28     | EXPR . OP_LOGICAL_OR EXPR
   29     | EXPR . OP_EQ EXPR
   30     | EXPR . OP_PLUS_EQ EXPR
   31     | EXPR . OP_MINUS_EQ EXPR
   32     | EXPR . OP_TIMES_EQ EXPR
   33     | EXPR . OP_DIVIDE_EQ EXPR
   34     | EXPR . OP_MOD_EQ EXPR
   42 JUMP_STATMNT: ST_RETURN EXPR .

    OP_PLUS         shift, and go to state 34
    OP_MINUS        shift, and go to state 35
    OP_TIMES        shift, and go to state 36
    OP_DIVIDE       shift, and go to state 37
    OP_MOD          shift, and go to state 38
    OP_LOGICAL_OR   shift, and go to state 39
    OP_LOGICAL_AND  shift, and go to state 40
    OP_EQ_EQ        shift, and go to state 41
    OP_NEQ          shift, and go to state 42
    OP_LT           shift, and go to state 43
    OP_GT           shift, and go to state 44
    OP_LTE          shift, and go to state 45
    OP_GTE          shift, and go to state 46
    OP_EQ           shift, and go to state 47
    OP_PLUS_EQ      shift, and go to state 48
    OP_MINUS_EQ     shift, and go to state 49
    OP_TIMES_EQ     shift, and go to state 50
    OP_DIVIDE_EQ    shift, and go to state 51
    OP_MOD_EQ       shift, and go to state 52

    $default  reduce using rule 42 (JUMP_STATMNT)


State 91

   44 SELECTION_STATMNT: ST_IF OP_LBRACKET . EXPR OP_RBRACKET STATMNT
   45                  | ST_IF OP_LBRACKET . EXPR OP_RBRACKET STATMNT ST_ELSE STATMNT

    OP_LOGICAL_NOT  shift, and go to state 25
    T_NUMBER        shift, and go to state 26
    T_STRING        shift, and go to state 27
    T_IDENTIFIER    shift, and go to state 28

    EXPR          go to state 95
    PRIMARY_EXPR  go to state 30


State 92

   46 SELECTION_STATMNT: ST_WHILE OP_LBRACKET . EXPR OP_RBRACKET STATMNT

    OP_LOGICAL_NOT  shift, and go to state 25
    T_NUMBER        shift, and go to state 26
    T_STRING        shift, and go to state 27
    T_IDENTIFIER    shift, and go to state 28

    EXPR          go to state 96
    PRIMARY_EXPR  go to state 30


State 93

   10 STATMNT: EXPR T_SEMICOLON .

    $default  reduce using rule 10 (STATMNT)


State 94

   12 STATMNT: JUMP_STATMNT T_SEMICOLON .

    $default  reduce using rule 12 (STATMNT)


State 95

   15 EXPR: EXPR . OP_PLUS EXPR
   16     | EXPR . OP_MINUS EXPR
   17     | EXPR . OP_TIMES EXPR
   18     | EXPR . OP_DIVIDE EXPR
   19     | EXPR . OP_MOD EXPR
   20     | EXPR . OP_LT EXPR
   21     | EXPR . OP_GT EXPR
   22     | EXPR . OP_LTE EXPR
   23     | EXPR . OP_GTE EXPR
   24     | EXPR . OP_EQ_EQ EXPR
   25     | EXPR . OP_NEQ EXPR
   27     | EXPR . OP_LOGICAL_AND EXPR
   28     | EXPR . OP_LOGICAL_OR EXPR
   29     | EXPR . OP_EQ EXPR
   30     | EXPR . OP_PLUS_EQ EXPR
   31     | EXPR . OP_MINUS_EQ EXPR
   32     | EXPR . OP_TIMES_EQ EXPR
   33     | EXPR . OP_DIVIDE_EQ EXPR
   34     | EXPR . OP_MOD_EQ EXPR
   44 SELECTION_STATMNT: ST_IF OP_LBRACKET EXPR . OP_RBRACKET STATMNT
   45                  | ST_IF OP_LBRACKET EXPR . OP_RBRACKET STATMNT ST_ELSE STATMNT

    OP_PLUS         shift, and go to state 34
    OP_MINUS        shift, and go to state 35
    OP_TIMES        shift, and go to state 36
    OP_DIVIDE       shift, and go to state 37
    OP_MOD          shift, and go to state 38
    OP_LOGICAL_OR   shift, and go to state 39
    OP_LOGICAL_AND  shift, and go to state 40
    OP_EQ_EQ        shift, and go to state 41
    OP_NEQ          shift, and go to state 42
    OP_LT           shift, and go to state 43
    OP_GT           shift, and go to state 44
    OP_LTE          shift, and go to state 45
    OP_GTE          shift, and go to state 46
    OP_EQ           shift, and go to state 47
    OP_PLUS_EQ      shift, and go to state 48
    OP_MINUS_EQ     shift, and go to state 49
    OP_TIMES_EQ     shift, and go to state 50
    OP_DIVIDE_EQ    shift, and go to state 51
    OP_MOD_EQ       shift, and go to state 52
    OP_RBRACKET     shift, and go to state 97


State 96

   15 EXPR: EXPR . OP_PLUS EXPR
   16     | EXPR . OP_MINUS EXPR
   17     | EXPR . OP_TIMES EXPR
   18     | EXPR . OP_DIVIDE EXPR
   19     | EXPR . OP_MOD EXPR
   20     | EXPR . OP_LT EXPR
   21     | EXPR . OP_GT EXPR
   22     | EXPR . OP_LTE EXPR
   23     | EXPR . OP_GTE EXPR
   24     | EXPR . OP_EQ_EQ EXPR
   25     | EXPR . OP_NEQ EXPR
   27     | EXPR . OP_LOGICAL_AND EXPR
   28     | EXPR . OP_LOGICAL_OR EXPR
   29     | EXPR . OP_EQ EXPR
   30     | EXPR . OP_PLUS_EQ EXPR
   31     | EXPR . OP_MINUS_EQ EXPR
   32     | EXPR . OP_TIMES_EQ EXPR
   33     | EXPR . OP_DIVIDE_EQ EXPR
   34     | EXPR . OP_MOD_EQ EXPR
   46 SELECTION_STATMNT: ST_WHILE OP_LBRACKET EXPR . OP_RBRACKET STATMNT

    OP_PLUS         shift, and go to state 34
    OP_MINUS        shift, and go to state 35
    OP_TIMES        shift, and go to state 36
    OP_DIVIDE       shift, and go to state 37
    OP_MOD          shift, and go to state 38
    OP_LOGICAL_OR   shift, and go to state 39
    OP_LOGICAL_AND  shift, and go to state 40
    OP_EQ_EQ        shift, and go to state 41
    OP_NEQ          shift, and go to state 42
    OP_LT           shift, and go to state 43
    OP_GT           shift, and go to state 44
    OP_LTE          shift, and go to state 45
    OP_GTE          shift, and go to state 46
    OP_EQ           shift, and go to state 47
    OP_PLUS_EQ      shift, and go to state 48
    OP_MINUS_EQ     shift, and go to state 49
    OP_TIMES_EQ     shift, and go to state 50
    OP_DIVIDE_EQ    shift, and go to state 51
    OP_MOD_EQ       shift, and go to state 52
    OP_RBRACKET     shift, and go to state 98


State 97

   44 SELECTION_STATMNT: ST_IF OP_LBRACKET EXPR OP_RBRACKET . STATMNT
   45                  | ST_IF OP_LBRACKET EXPR OP_RBRACKET . STATMNT ST_ELSE STATMNT

    ST_BREAK        shift, and go to state 79
    ST_CONTINUE     shift, and go to state 80
    ST_RETURN       shift, and go to state 81
    ST_IF           shift, and go to state 82
    ST_WHILE        shift, and go to state 83
    OP_LOGICAL_NOT  shift, and go to state 25
    T_LBRACE        shift, and go to state 54
    T_NUMBER        shift, and go to state 26
    T_STRING        shift, and go to state 27
    T_IDENTIFIER    shift, and go to state 28

    COMPND_STATMNT     go to state 85
    STATMNT            go to state 99
    EXPR               go to state 87
    PRIMARY_EXPR       go to state 30
    JUMP_STATMNT       go to state 88
    SELECTION_STATMNT  go to state 89


State 98

   46 SELECTION_STATMNT: ST_WHILE OP_LBRACKET EXPR OP_RBRACKET . STATMNT

    ST_BREAK        shift, and go to state 79
    ST_CONTINUE     shift, and go to state 80
    ST_RETURN       shift, and go to state 81
    ST_IF           shift, and go to state 82
    ST_WHILE        shift, and go to state 83
    OP_LOGICAL_NOT  shift, and go to state 25
    T_LBRACE        shift, and go to state 54
    T_NUMBER        shift, and go to state 26
    T_STRING        shift, and go to state 27
    T_IDENTIFIER    shift, and go to state 28

    COMPND_STATMNT     go to state 85
    STATMNT            go to state 100
    EXPR               go to state 87
    PRIMARY_EXPR       go to state 30
    JUMP_STATMNT       go to state 88
    SELECTION_STATMNT  go to state 89


State 99

   44 SELECTION_STATMNT: ST_IF OP_LBRACKET EXPR OP_RBRACKET STATMNT .
   45                  | ST_IF OP_LBRACKET EXPR OP_RBRACKET STATMNT . ST_ELSE STATMNT

    ST_ELSE  shift, and go to state 101

    ST_ELSE   [reduce using rule 44 (SELECTION_STATMNT)]
    $default  reduce using rule 44 (SELECTION_STATMNT)


State 100

   46 SELECTION_STATMNT: ST_WHILE OP_LBRACKET EXPR OP_RBRACKET STATMNT .

    $default  reduce using rule 46 (SELECTION_STATMNT)


State 101

   45 SELECTION_STATMNT: ST_IF OP_LBRACKET EXPR OP_RBRACKET STATMNT ST_ELSE . STATMNT

    ST_BREAK        shift, and go to state 79
    ST_CONTINUE     shift, and go to state 80
    ST_RETURN       shift, and go to state 81
    ST_IF           shift, and go to state 82
    ST_WHILE        shift, and go to state 83
    OP_LOGICAL_NOT  shift, and go to state 25
    T_LBRACE        shift, and go to state 54
    T_NUMBER        shift, and go to state 26
    T_STRING        shift, and go to state 27
    T_IDENTIFIER    shift, and go to state 28

    COMPND_STATMNT     go to state 85
    STATMNT            go to state 102
    EXPR               go to state 87
    PRIMARY_EXPR       go to state 30
    JUMP_STATMNT       go to state 88
    SELECTION_STATMNT  go to state 89


State 102

   45 SELECTION_STATMNT: ST_IF OP_LBRACKET EXPR OP_RBRACKET STATMNT ST_ELSE STATMNT .

    $default  reduce using rule 45 (SELECTION_STATMNT)
